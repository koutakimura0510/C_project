// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module background_loop_dataflow_in_loop_right_height_loop (
        ap_clk,
        ap_rst,
        width,
        y_1,
        frame_size,
        ddr_copy,
        m_axi_copy_AWVALID,
        m_axi_copy_AWREADY,
        m_axi_copy_AWADDR,
        m_axi_copy_AWID,
        m_axi_copy_AWLEN,
        m_axi_copy_AWSIZE,
        m_axi_copy_AWBURST,
        m_axi_copy_AWLOCK,
        m_axi_copy_AWCACHE,
        m_axi_copy_AWPROT,
        m_axi_copy_AWQOS,
        m_axi_copy_AWREGION,
        m_axi_copy_AWUSER,
        m_axi_copy_WVALID,
        m_axi_copy_WREADY,
        m_axi_copy_WDATA,
        m_axi_copy_WSTRB,
        m_axi_copy_WLAST,
        m_axi_copy_WID,
        m_axi_copy_WUSER,
        m_axi_copy_ARVALID,
        m_axi_copy_ARREADY,
        m_axi_copy_ARADDR,
        m_axi_copy_ARID,
        m_axi_copy_ARLEN,
        m_axi_copy_ARSIZE,
        m_axi_copy_ARBURST,
        m_axi_copy_ARLOCK,
        m_axi_copy_ARCACHE,
        m_axi_copy_ARPROT,
        m_axi_copy_ARQOS,
        m_axi_copy_ARREGION,
        m_axi_copy_ARUSER,
        m_axi_copy_RVALID,
        m_axi_copy_RREADY,
        m_axi_copy_RDATA,
        m_axi_copy_RLAST,
        m_axi_copy_RID,
        m_axi_copy_RUSER,
        m_axi_copy_RRESP,
        m_axi_copy_BVALID,
        m_axi_copy_BREADY,
        m_axi_copy_BRESP,
        m_axi_copy_BID,
        m_axi_copy_BUSER,
        ddr_update,
        m_axi_update_AWVALID,
        m_axi_update_AWREADY,
        m_axi_update_AWADDR,
        m_axi_update_AWID,
        m_axi_update_AWLEN,
        m_axi_update_AWSIZE,
        m_axi_update_AWBURST,
        m_axi_update_AWLOCK,
        m_axi_update_AWCACHE,
        m_axi_update_AWPROT,
        m_axi_update_AWQOS,
        m_axi_update_AWREGION,
        m_axi_update_AWUSER,
        m_axi_update_WVALID,
        m_axi_update_WREADY,
        m_axi_update_WDATA,
        m_axi_update_WSTRB,
        m_axi_update_WLAST,
        m_axi_update_WID,
        m_axi_update_WUSER,
        m_axi_update_ARVALID,
        m_axi_update_ARREADY,
        m_axi_update_ARADDR,
        m_axi_update_ARID,
        m_axi_update_ARLEN,
        m_axi_update_ARSIZE,
        m_axi_update_ARBURST,
        m_axi_update_ARLOCK,
        m_axi_update_ARCACHE,
        m_axi_update_ARPROT,
        m_axi_update_ARQOS,
        m_axi_update_ARREGION,
        m_axi_update_ARUSER,
        m_axi_update_RVALID,
        m_axi_update_RREADY,
        m_axi_update_RDATA,
        m_axi_update_RLAST,
        m_axi_update_RID,
        m_axi_update_RUSER,
        m_axi_update_RRESP,
        m_axi_update_BVALID,
        m_axi_update_BREADY,
        m_axi_update_BRESP,
        m_axi_update_BID,
        m_axi_update_BUSER,
        width_ap_vld,
        y_1_ap_vld,
        frame_size_ap_vld,
        ddr_copy_ap_vld,
        ddr_update_ap_vld,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input   ap_clk;
input   ap_rst;
input  [31:0] width;
input  [31:0] y_1;
input  [31:0] frame_size;
input  [63:0] ddr_copy;
output   m_axi_copy_AWVALID;
input   m_axi_copy_AWREADY;
output  [63:0] m_axi_copy_AWADDR;
output  [0:0] m_axi_copy_AWID;
output  [31:0] m_axi_copy_AWLEN;
output  [2:0] m_axi_copy_AWSIZE;
output  [1:0] m_axi_copy_AWBURST;
output  [1:0] m_axi_copy_AWLOCK;
output  [3:0] m_axi_copy_AWCACHE;
output  [2:0] m_axi_copy_AWPROT;
output  [3:0] m_axi_copy_AWQOS;
output  [3:0] m_axi_copy_AWREGION;
output  [0:0] m_axi_copy_AWUSER;
output   m_axi_copy_WVALID;
input   m_axi_copy_WREADY;
output  [31:0] m_axi_copy_WDATA;
output  [3:0] m_axi_copy_WSTRB;
output   m_axi_copy_WLAST;
output  [0:0] m_axi_copy_WID;
output  [0:0] m_axi_copy_WUSER;
output   m_axi_copy_ARVALID;
input   m_axi_copy_ARREADY;
output  [63:0] m_axi_copy_ARADDR;
output  [0:0] m_axi_copy_ARID;
output  [31:0] m_axi_copy_ARLEN;
output  [2:0] m_axi_copy_ARSIZE;
output  [1:0] m_axi_copy_ARBURST;
output  [1:0] m_axi_copy_ARLOCK;
output  [3:0] m_axi_copy_ARCACHE;
output  [2:0] m_axi_copy_ARPROT;
output  [3:0] m_axi_copy_ARQOS;
output  [3:0] m_axi_copy_ARREGION;
output  [0:0] m_axi_copy_ARUSER;
input   m_axi_copy_RVALID;
output   m_axi_copy_RREADY;
input  [31:0] m_axi_copy_RDATA;
input   m_axi_copy_RLAST;
input  [0:0] m_axi_copy_RID;
input  [0:0] m_axi_copy_RUSER;
input  [1:0] m_axi_copy_RRESP;
input   m_axi_copy_BVALID;
output   m_axi_copy_BREADY;
input  [1:0] m_axi_copy_BRESP;
input  [0:0] m_axi_copy_BID;
input  [0:0] m_axi_copy_BUSER;
input  [63:0] ddr_update;
output   m_axi_update_AWVALID;
input   m_axi_update_AWREADY;
output  [63:0] m_axi_update_AWADDR;
output  [0:0] m_axi_update_AWID;
output  [31:0] m_axi_update_AWLEN;
output  [2:0] m_axi_update_AWSIZE;
output  [1:0] m_axi_update_AWBURST;
output  [1:0] m_axi_update_AWLOCK;
output  [3:0] m_axi_update_AWCACHE;
output  [2:0] m_axi_update_AWPROT;
output  [3:0] m_axi_update_AWQOS;
output  [3:0] m_axi_update_AWREGION;
output  [0:0] m_axi_update_AWUSER;
output   m_axi_update_WVALID;
input   m_axi_update_WREADY;
output  [31:0] m_axi_update_WDATA;
output  [3:0] m_axi_update_WSTRB;
output   m_axi_update_WLAST;
output  [0:0] m_axi_update_WID;
output  [0:0] m_axi_update_WUSER;
output   m_axi_update_ARVALID;
input   m_axi_update_ARREADY;
output  [63:0] m_axi_update_ARADDR;
output  [0:0] m_axi_update_ARID;
output  [31:0] m_axi_update_ARLEN;
output  [2:0] m_axi_update_ARSIZE;
output  [1:0] m_axi_update_ARBURST;
output  [1:0] m_axi_update_ARLOCK;
output  [3:0] m_axi_update_ARCACHE;
output  [2:0] m_axi_update_ARPROT;
output  [3:0] m_axi_update_ARQOS;
output  [3:0] m_axi_update_ARREGION;
output  [0:0] m_axi_update_ARUSER;
input   m_axi_update_RVALID;
output   m_axi_update_RREADY;
input  [31:0] m_axi_update_RDATA;
input   m_axi_update_RLAST;
input  [0:0] m_axi_update_RID;
input  [0:0] m_axi_update_RUSER;
input  [1:0] m_axi_update_RRESP;
input   m_axi_update_BVALID;
output   m_axi_update_BREADY;
input  [1:0] m_axi_update_BRESP;
input  [0:0] m_axi_update_BID;
input  [0:0] m_axi_update_BUSER;
input   width_ap_vld;
input   y_1_ap_vld;
input   frame_size_ap_vld;
input   ddr_copy_ap_vld;
input   ddr_update_ap_vld;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire   [31:0] xcopy_V_i_q0;
wire   [31:0] xcopy_V_t_q0;
wire    right_width_loop_proc8_U0_ap_start;
wire    right_width_loop_proc8_U0_ap_done;
wire    right_width_loop_proc8_U0_ap_continue;
wire    right_width_loop_proc8_U0_ap_idle;
wire    right_width_loop_proc8_U0_ap_ready;
wire    right_width_loop_proc8_U0_m_axi_copy_AWVALID;
wire   [63:0] right_width_loop_proc8_U0_m_axi_copy_AWADDR;
wire   [0:0] right_width_loop_proc8_U0_m_axi_copy_AWID;
wire   [31:0] right_width_loop_proc8_U0_m_axi_copy_AWLEN;
wire   [2:0] right_width_loop_proc8_U0_m_axi_copy_AWSIZE;
wire   [1:0] right_width_loop_proc8_U0_m_axi_copy_AWBURST;
wire   [1:0] right_width_loop_proc8_U0_m_axi_copy_AWLOCK;
wire   [3:0] right_width_loop_proc8_U0_m_axi_copy_AWCACHE;
wire   [2:0] right_width_loop_proc8_U0_m_axi_copy_AWPROT;
wire   [3:0] right_width_loop_proc8_U0_m_axi_copy_AWQOS;
wire   [3:0] right_width_loop_proc8_U0_m_axi_copy_AWREGION;
wire   [0:0] right_width_loop_proc8_U0_m_axi_copy_AWUSER;
wire    right_width_loop_proc8_U0_m_axi_copy_WVALID;
wire   [31:0] right_width_loop_proc8_U0_m_axi_copy_WDATA;
wire   [3:0] right_width_loop_proc8_U0_m_axi_copy_WSTRB;
wire    right_width_loop_proc8_U0_m_axi_copy_WLAST;
wire   [0:0] right_width_loop_proc8_U0_m_axi_copy_WID;
wire   [0:0] right_width_loop_proc8_U0_m_axi_copy_WUSER;
wire    right_width_loop_proc8_U0_m_axi_copy_ARVALID;
wire   [63:0] right_width_loop_proc8_U0_m_axi_copy_ARADDR;
wire   [0:0] right_width_loop_proc8_U0_m_axi_copy_ARID;
wire   [31:0] right_width_loop_proc8_U0_m_axi_copy_ARLEN;
wire   [2:0] right_width_loop_proc8_U0_m_axi_copy_ARSIZE;
wire   [1:0] right_width_loop_proc8_U0_m_axi_copy_ARBURST;
wire   [1:0] right_width_loop_proc8_U0_m_axi_copy_ARLOCK;
wire   [3:0] right_width_loop_proc8_U0_m_axi_copy_ARCACHE;
wire   [2:0] right_width_loop_proc8_U0_m_axi_copy_ARPROT;
wire   [3:0] right_width_loop_proc8_U0_m_axi_copy_ARQOS;
wire   [3:0] right_width_loop_proc8_U0_m_axi_copy_ARREGION;
wire   [0:0] right_width_loop_proc8_U0_m_axi_copy_ARUSER;
wire    right_width_loop_proc8_U0_m_axi_copy_RREADY;
wire    right_width_loop_proc8_U0_m_axi_copy_BREADY;
wire   [9:0] right_width_loop_proc8_U0_xcopy_V1_address0;
wire    right_width_loop_proc8_U0_xcopy_V1_ce0;
wire    right_width_loop_proc8_U0_xcopy_V1_we0;
wire   [31:0] right_width_loop_proc8_U0_xcopy_V1_d0;
wire   [31:0] right_width_loop_proc8_U0_width_out_din;
wire    right_width_loop_proc8_U0_width_out_write;
wire   [31:0] right_width_loop_proc8_U0_y_1_out_din;
wire    right_width_loop_proc8_U0_y_1_out_write;
wire   [31:0] right_width_loop_proc8_U0_frame_size_out_din;
wire    right_width_loop_proc8_U0_frame_size_out_write;
wire   [63:0] right_width_loop_proc8_U0_ddr_update_out_din;
wire    right_width_loop_proc8_U0_ddr_update_out_write;
wire    ap_channel_done_xcopy_V;
wire    right_width_loop_proc8_U0_xcopy_V1_full_n;
wire    right_copy_loop_proc_U0_ap_start;
wire    right_copy_loop_proc_U0_ap_done;
wire    right_copy_loop_proc_U0_ap_continue;
wire    right_copy_loop_proc_U0_ap_idle;
wire    right_copy_loop_proc_U0_ap_ready;
wire    right_copy_loop_proc_U0_width_read;
wire    right_copy_loop_proc_U0_y_1_read;
wire    right_copy_loop_proc_U0_frame_size_read;
wire   [9:0] right_copy_loop_proc_U0_xcopy_V1_address0;
wire    right_copy_loop_proc_U0_xcopy_V1_ce0;
wire    right_copy_loop_proc_U0_ddr_update_read;
wire    right_copy_loop_proc_U0_m_axi_update_AWVALID;
wire   [63:0] right_copy_loop_proc_U0_m_axi_update_AWADDR;
wire   [0:0] right_copy_loop_proc_U0_m_axi_update_AWID;
wire   [31:0] right_copy_loop_proc_U0_m_axi_update_AWLEN;
wire   [2:0] right_copy_loop_proc_U0_m_axi_update_AWSIZE;
wire   [1:0] right_copy_loop_proc_U0_m_axi_update_AWBURST;
wire   [1:0] right_copy_loop_proc_U0_m_axi_update_AWLOCK;
wire   [3:0] right_copy_loop_proc_U0_m_axi_update_AWCACHE;
wire   [2:0] right_copy_loop_proc_U0_m_axi_update_AWPROT;
wire   [3:0] right_copy_loop_proc_U0_m_axi_update_AWQOS;
wire   [3:0] right_copy_loop_proc_U0_m_axi_update_AWREGION;
wire   [0:0] right_copy_loop_proc_U0_m_axi_update_AWUSER;
wire    right_copy_loop_proc_U0_m_axi_update_WVALID;
wire   [31:0] right_copy_loop_proc_U0_m_axi_update_WDATA;
wire   [3:0] right_copy_loop_proc_U0_m_axi_update_WSTRB;
wire    right_copy_loop_proc_U0_m_axi_update_WLAST;
wire   [0:0] right_copy_loop_proc_U0_m_axi_update_WID;
wire   [0:0] right_copy_loop_proc_U0_m_axi_update_WUSER;
wire    right_copy_loop_proc_U0_m_axi_update_ARVALID;
wire   [63:0] right_copy_loop_proc_U0_m_axi_update_ARADDR;
wire   [0:0] right_copy_loop_proc_U0_m_axi_update_ARID;
wire   [31:0] right_copy_loop_proc_U0_m_axi_update_ARLEN;
wire   [2:0] right_copy_loop_proc_U0_m_axi_update_ARSIZE;
wire   [1:0] right_copy_loop_proc_U0_m_axi_update_ARBURST;
wire   [1:0] right_copy_loop_proc_U0_m_axi_update_ARLOCK;
wire   [3:0] right_copy_loop_proc_U0_m_axi_update_ARCACHE;
wire   [2:0] right_copy_loop_proc_U0_m_axi_update_ARPROT;
wire   [3:0] right_copy_loop_proc_U0_m_axi_update_ARQOS;
wire   [3:0] right_copy_loop_proc_U0_m_axi_update_ARREGION;
wire   [0:0] right_copy_loop_proc_U0_m_axi_update_ARUSER;
wire    right_copy_loop_proc_U0_m_axi_update_RREADY;
wire    right_copy_loop_proc_U0_m_axi_update_BREADY;
wire    ap_sync_continue;
wire    xcopy_V_i_full_n;
wire    xcopy_V_t_empty_n;
wire    width_c_full_n;
wire   [31:0] width_c_dout;
wire    width_c_empty_n;
wire    y_1_c_full_n;
wire   [31:0] y_1_c_dout;
wire    y_1_c_empty_n;
wire    frame_size_c_full_n;
wire   [31:0] frame_size_c_dout;
wire    frame_size_c_empty_n;
wire    ddr_update_c_full_n;
wire   [63:0] ddr_update_c_dout;
wire    ddr_update_c_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire    right_width_loop_proc8_U0_start_full_n;
wire    right_width_loop_proc8_U0_start_write;
wire    right_copy_loop_proc_U0_start_full_n;
wire    right_copy_loop_proc_U0_start_write;

background_loop_dataflow_in_loop_right_height_loop_xcopy_V #(
    .DataWidth( 32 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
xcopy_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(right_width_loop_proc8_U0_xcopy_V1_address0),
    .i_ce0(right_width_loop_proc8_U0_xcopy_V1_ce0),
    .i_we0(right_width_loop_proc8_U0_xcopy_V1_we0),
    .i_d0(right_width_loop_proc8_U0_xcopy_V1_d0),
    .i_q0(xcopy_V_i_q0),
    .t_address0(right_copy_loop_proc_U0_xcopy_V1_address0),
    .t_ce0(right_copy_loop_proc_U0_xcopy_V1_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(xcopy_V_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(xcopy_V_i_full_n),
    .i_write(right_width_loop_proc8_U0_ap_done),
    .t_empty_n(xcopy_V_t_empty_n),
    .t_read(right_copy_loop_proc_U0_ap_ready)
);

background_loop_right_width_loop_proc8 right_width_loop_proc8_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(right_width_loop_proc8_U0_ap_start),
    .ap_done(right_width_loop_proc8_U0_ap_done),
    .ap_continue(right_width_loop_proc8_U0_ap_continue),
    .ap_idle(right_width_loop_proc8_U0_ap_idle),
    .ap_ready(right_width_loop_proc8_U0_ap_ready),
    .width(width),
    .y_1(y_1),
    .frame_size(frame_size),
    .ddr_copy(ddr_copy),
    .m_axi_copy_AWVALID(right_width_loop_proc8_U0_m_axi_copy_AWVALID),
    .m_axi_copy_AWREADY(1'b0),
    .m_axi_copy_AWADDR(right_width_loop_proc8_U0_m_axi_copy_AWADDR),
    .m_axi_copy_AWID(right_width_loop_proc8_U0_m_axi_copy_AWID),
    .m_axi_copy_AWLEN(right_width_loop_proc8_U0_m_axi_copy_AWLEN),
    .m_axi_copy_AWSIZE(right_width_loop_proc8_U0_m_axi_copy_AWSIZE),
    .m_axi_copy_AWBURST(right_width_loop_proc8_U0_m_axi_copy_AWBURST),
    .m_axi_copy_AWLOCK(right_width_loop_proc8_U0_m_axi_copy_AWLOCK),
    .m_axi_copy_AWCACHE(right_width_loop_proc8_U0_m_axi_copy_AWCACHE),
    .m_axi_copy_AWPROT(right_width_loop_proc8_U0_m_axi_copy_AWPROT),
    .m_axi_copy_AWQOS(right_width_loop_proc8_U0_m_axi_copy_AWQOS),
    .m_axi_copy_AWREGION(right_width_loop_proc8_U0_m_axi_copy_AWREGION),
    .m_axi_copy_AWUSER(right_width_loop_proc8_U0_m_axi_copy_AWUSER),
    .m_axi_copy_WVALID(right_width_loop_proc8_U0_m_axi_copy_WVALID),
    .m_axi_copy_WREADY(1'b0),
    .m_axi_copy_WDATA(right_width_loop_proc8_U0_m_axi_copy_WDATA),
    .m_axi_copy_WSTRB(right_width_loop_proc8_U0_m_axi_copy_WSTRB),
    .m_axi_copy_WLAST(right_width_loop_proc8_U0_m_axi_copy_WLAST),
    .m_axi_copy_WID(right_width_loop_proc8_U0_m_axi_copy_WID),
    .m_axi_copy_WUSER(right_width_loop_proc8_U0_m_axi_copy_WUSER),
    .m_axi_copy_ARVALID(right_width_loop_proc8_U0_m_axi_copy_ARVALID),
    .m_axi_copy_ARREADY(m_axi_copy_ARREADY),
    .m_axi_copy_ARADDR(right_width_loop_proc8_U0_m_axi_copy_ARADDR),
    .m_axi_copy_ARID(right_width_loop_proc8_U0_m_axi_copy_ARID),
    .m_axi_copy_ARLEN(right_width_loop_proc8_U0_m_axi_copy_ARLEN),
    .m_axi_copy_ARSIZE(right_width_loop_proc8_U0_m_axi_copy_ARSIZE),
    .m_axi_copy_ARBURST(right_width_loop_proc8_U0_m_axi_copy_ARBURST),
    .m_axi_copy_ARLOCK(right_width_loop_proc8_U0_m_axi_copy_ARLOCK),
    .m_axi_copy_ARCACHE(right_width_loop_proc8_U0_m_axi_copy_ARCACHE),
    .m_axi_copy_ARPROT(right_width_loop_proc8_U0_m_axi_copy_ARPROT),
    .m_axi_copy_ARQOS(right_width_loop_proc8_U0_m_axi_copy_ARQOS),
    .m_axi_copy_ARREGION(right_width_loop_proc8_U0_m_axi_copy_ARREGION),
    .m_axi_copy_ARUSER(right_width_loop_proc8_U0_m_axi_copy_ARUSER),
    .m_axi_copy_RVALID(m_axi_copy_RVALID),
    .m_axi_copy_RREADY(right_width_loop_proc8_U0_m_axi_copy_RREADY),
    .m_axi_copy_RDATA(m_axi_copy_RDATA),
    .m_axi_copy_RLAST(m_axi_copy_RLAST),
    .m_axi_copy_RID(m_axi_copy_RID),
    .m_axi_copy_RUSER(m_axi_copy_RUSER),
    .m_axi_copy_RRESP(m_axi_copy_RRESP),
    .m_axi_copy_BVALID(1'b0),
    .m_axi_copy_BREADY(right_width_loop_proc8_U0_m_axi_copy_BREADY),
    .m_axi_copy_BRESP(2'd0),
    .m_axi_copy_BID(1'd0),
    .m_axi_copy_BUSER(1'd0),
    .xcopy_V1_address0(right_width_loop_proc8_U0_xcopy_V1_address0),
    .xcopy_V1_ce0(right_width_loop_proc8_U0_xcopy_V1_ce0),
    .xcopy_V1_we0(right_width_loop_proc8_U0_xcopy_V1_we0),
    .xcopy_V1_d0(right_width_loop_proc8_U0_xcopy_V1_d0),
    .ddr_update(ddr_update),
    .width_out_din(right_width_loop_proc8_U0_width_out_din),
    .width_out_full_n(width_c_full_n),
    .width_out_write(right_width_loop_proc8_U0_width_out_write),
    .y_1_out_din(right_width_loop_proc8_U0_y_1_out_din),
    .y_1_out_full_n(y_1_c_full_n),
    .y_1_out_write(right_width_loop_proc8_U0_y_1_out_write),
    .frame_size_out_din(right_width_loop_proc8_U0_frame_size_out_din),
    .frame_size_out_full_n(frame_size_c_full_n),
    .frame_size_out_write(right_width_loop_proc8_U0_frame_size_out_write),
    .ddr_update_out_din(right_width_loop_proc8_U0_ddr_update_out_din),
    .ddr_update_out_full_n(ddr_update_c_full_n),
    .ddr_update_out_write(right_width_loop_proc8_U0_ddr_update_out_write)
);

background_loop_right_copy_loop_proc right_copy_loop_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(right_copy_loop_proc_U0_ap_start),
    .ap_done(right_copy_loop_proc_U0_ap_done),
    .ap_continue(right_copy_loop_proc_U0_ap_continue),
    .ap_idle(right_copy_loop_proc_U0_ap_idle),
    .ap_ready(right_copy_loop_proc_U0_ap_ready),
    .width_dout(width_c_dout),
    .width_empty_n(width_c_empty_n),
    .width_read(right_copy_loop_proc_U0_width_read),
    .y_1_dout(y_1_c_dout),
    .y_1_empty_n(y_1_c_empty_n),
    .y_1_read(right_copy_loop_proc_U0_y_1_read),
    .frame_size_dout(frame_size_c_dout),
    .frame_size_empty_n(frame_size_c_empty_n),
    .frame_size_read(right_copy_loop_proc_U0_frame_size_read),
    .xcopy_V1_address0(right_copy_loop_proc_U0_xcopy_V1_address0),
    .xcopy_V1_ce0(right_copy_loop_proc_U0_xcopy_V1_ce0),
    .xcopy_V1_q0(xcopy_V_t_q0),
    .ddr_update_dout(ddr_update_c_dout),
    .ddr_update_empty_n(ddr_update_c_empty_n),
    .ddr_update_read(right_copy_loop_proc_U0_ddr_update_read),
    .m_axi_update_AWVALID(right_copy_loop_proc_U0_m_axi_update_AWVALID),
    .m_axi_update_AWREADY(m_axi_update_AWREADY),
    .m_axi_update_AWADDR(right_copy_loop_proc_U0_m_axi_update_AWADDR),
    .m_axi_update_AWID(right_copy_loop_proc_U0_m_axi_update_AWID),
    .m_axi_update_AWLEN(right_copy_loop_proc_U0_m_axi_update_AWLEN),
    .m_axi_update_AWSIZE(right_copy_loop_proc_U0_m_axi_update_AWSIZE),
    .m_axi_update_AWBURST(right_copy_loop_proc_U0_m_axi_update_AWBURST),
    .m_axi_update_AWLOCK(right_copy_loop_proc_U0_m_axi_update_AWLOCK),
    .m_axi_update_AWCACHE(right_copy_loop_proc_U0_m_axi_update_AWCACHE),
    .m_axi_update_AWPROT(right_copy_loop_proc_U0_m_axi_update_AWPROT),
    .m_axi_update_AWQOS(right_copy_loop_proc_U0_m_axi_update_AWQOS),
    .m_axi_update_AWREGION(right_copy_loop_proc_U0_m_axi_update_AWREGION),
    .m_axi_update_AWUSER(right_copy_loop_proc_U0_m_axi_update_AWUSER),
    .m_axi_update_WVALID(right_copy_loop_proc_U0_m_axi_update_WVALID),
    .m_axi_update_WREADY(m_axi_update_WREADY),
    .m_axi_update_WDATA(right_copy_loop_proc_U0_m_axi_update_WDATA),
    .m_axi_update_WSTRB(right_copy_loop_proc_U0_m_axi_update_WSTRB),
    .m_axi_update_WLAST(right_copy_loop_proc_U0_m_axi_update_WLAST),
    .m_axi_update_WID(right_copy_loop_proc_U0_m_axi_update_WID),
    .m_axi_update_WUSER(right_copy_loop_proc_U0_m_axi_update_WUSER),
    .m_axi_update_ARVALID(right_copy_loop_proc_U0_m_axi_update_ARVALID),
    .m_axi_update_ARREADY(1'b0),
    .m_axi_update_ARADDR(right_copy_loop_proc_U0_m_axi_update_ARADDR),
    .m_axi_update_ARID(right_copy_loop_proc_U0_m_axi_update_ARID),
    .m_axi_update_ARLEN(right_copy_loop_proc_U0_m_axi_update_ARLEN),
    .m_axi_update_ARSIZE(right_copy_loop_proc_U0_m_axi_update_ARSIZE),
    .m_axi_update_ARBURST(right_copy_loop_proc_U0_m_axi_update_ARBURST),
    .m_axi_update_ARLOCK(right_copy_loop_proc_U0_m_axi_update_ARLOCK),
    .m_axi_update_ARCACHE(right_copy_loop_proc_U0_m_axi_update_ARCACHE),
    .m_axi_update_ARPROT(right_copy_loop_proc_U0_m_axi_update_ARPROT),
    .m_axi_update_ARQOS(right_copy_loop_proc_U0_m_axi_update_ARQOS),
    .m_axi_update_ARREGION(right_copy_loop_proc_U0_m_axi_update_ARREGION),
    .m_axi_update_ARUSER(right_copy_loop_proc_U0_m_axi_update_ARUSER),
    .m_axi_update_RVALID(1'b0),
    .m_axi_update_RREADY(right_copy_loop_proc_U0_m_axi_update_RREADY),
    .m_axi_update_RDATA(32'd0),
    .m_axi_update_RLAST(1'b0),
    .m_axi_update_RID(1'd0),
    .m_axi_update_RUSER(1'd0),
    .m_axi_update_RRESP(2'd0),
    .m_axi_update_BVALID(m_axi_update_BVALID),
    .m_axi_update_BREADY(right_copy_loop_proc_U0_m_axi_update_BREADY),
    .m_axi_update_BRESP(m_axi_update_BRESP),
    .m_axi_update_BID(m_axi_update_BID),
    .m_axi_update_BUSER(m_axi_update_BUSER)
);

background_loop_fifo_w32_d2_S width_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(right_width_loop_proc8_U0_width_out_din),
    .if_full_n(width_c_full_n),
    .if_write(right_width_loop_proc8_U0_width_out_write),
    .if_dout(width_c_dout),
    .if_empty_n(width_c_empty_n),
    .if_read(right_copy_loop_proc_U0_width_read)
);

background_loop_fifo_w32_d2_S y_1_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(right_width_loop_proc8_U0_y_1_out_din),
    .if_full_n(y_1_c_full_n),
    .if_write(right_width_loop_proc8_U0_y_1_out_write),
    .if_dout(y_1_c_dout),
    .if_empty_n(y_1_c_empty_n),
    .if_read(right_copy_loop_proc_U0_y_1_read)
);

background_loop_fifo_w32_d2_S frame_size_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(right_width_loop_proc8_U0_frame_size_out_din),
    .if_full_n(frame_size_c_full_n),
    .if_write(right_width_loop_proc8_U0_frame_size_out_write),
    .if_dout(frame_size_c_dout),
    .if_empty_n(frame_size_c_empty_n),
    .if_read(right_copy_loop_proc_U0_frame_size_read)
);

background_loop_fifo_w64_d2_S ddr_update_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(right_width_loop_proc8_U0_ddr_update_out_din),
    .if_full_n(ddr_update_c_full_n),
    .if_write(right_width_loop_proc8_U0_ddr_update_out_write),
    .if_dout(ddr_update_c_dout),
    .if_empty_n(ddr_update_c_empty_n),
    .if_read(right_copy_loop_proc_U0_ddr_update_read)
);

assign ap_channel_done_xcopy_V = right_width_loop_proc8_U0_ap_done;

assign ap_done = right_copy_loop_proc_U0_ap_done;

assign ap_idle = (right_width_loop_proc8_U0_ap_idle & right_copy_loop_proc_U0_ap_idle & (xcopy_V_t_empty_n ^ 1'b1));

assign ap_ready = right_width_loop_proc8_U0_ap_ready;

assign ap_sync_continue = ap_continue;

assign ap_sync_done = right_copy_loop_proc_U0_ap_done;

assign ap_sync_ready = right_width_loop_proc8_U0_ap_ready;

assign m_axi_copy_ARADDR = right_width_loop_proc8_U0_m_axi_copy_ARADDR;

assign m_axi_copy_ARBURST = right_width_loop_proc8_U0_m_axi_copy_ARBURST;

assign m_axi_copy_ARCACHE = right_width_loop_proc8_U0_m_axi_copy_ARCACHE;

assign m_axi_copy_ARID = right_width_loop_proc8_U0_m_axi_copy_ARID;

assign m_axi_copy_ARLEN = right_width_loop_proc8_U0_m_axi_copy_ARLEN;

assign m_axi_copy_ARLOCK = right_width_loop_proc8_U0_m_axi_copy_ARLOCK;

assign m_axi_copy_ARPROT = right_width_loop_proc8_U0_m_axi_copy_ARPROT;

assign m_axi_copy_ARQOS = right_width_loop_proc8_U0_m_axi_copy_ARQOS;

assign m_axi_copy_ARREGION = right_width_loop_proc8_U0_m_axi_copy_ARREGION;

assign m_axi_copy_ARSIZE = right_width_loop_proc8_U0_m_axi_copy_ARSIZE;

assign m_axi_copy_ARUSER = right_width_loop_proc8_U0_m_axi_copy_ARUSER;

assign m_axi_copy_ARVALID = right_width_loop_proc8_U0_m_axi_copy_ARVALID;

assign m_axi_copy_AWADDR = 64'd0;

assign m_axi_copy_AWBURST = 2'd0;

assign m_axi_copy_AWCACHE = 4'd0;

assign m_axi_copy_AWID = 1'd0;

assign m_axi_copy_AWLEN = 32'd0;

assign m_axi_copy_AWLOCK = 2'd0;

assign m_axi_copy_AWPROT = 3'd0;

assign m_axi_copy_AWQOS = 4'd0;

assign m_axi_copy_AWREGION = 4'd0;

assign m_axi_copy_AWSIZE = 3'd0;

assign m_axi_copy_AWUSER = 1'd0;

assign m_axi_copy_AWVALID = 1'b0;

assign m_axi_copy_BREADY = 1'b0;

assign m_axi_copy_RREADY = right_width_loop_proc8_U0_m_axi_copy_RREADY;

assign m_axi_copy_WDATA = 32'd0;

assign m_axi_copy_WID = 1'd0;

assign m_axi_copy_WLAST = 1'b0;

assign m_axi_copy_WSTRB = 4'd0;

assign m_axi_copy_WUSER = 1'd0;

assign m_axi_copy_WVALID = 1'b0;

assign m_axi_update_ARADDR = 64'd0;

assign m_axi_update_ARBURST = 2'd0;

assign m_axi_update_ARCACHE = 4'd0;

assign m_axi_update_ARID = 1'd0;

assign m_axi_update_ARLEN = 32'd0;

assign m_axi_update_ARLOCK = 2'd0;

assign m_axi_update_ARPROT = 3'd0;

assign m_axi_update_ARQOS = 4'd0;

assign m_axi_update_ARREGION = 4'd0;

assign m_axi_update_ARSIZE = 3'd0;

assign m_axi_update_ARUSER = 1'd0;

assign m_axi_update_ARVALID = 1'b0;

assign m_axi_update_AWADDR = right_copy_loop_proc_U0_m_axi_update_AWADDR;

assign m_axi_update_AWBURST = right_copy_loop_proc_U0_m_axi_update_AWBURST;

assign m_axi_update_AWCACHE = right_copy_loop_proc_U0_m_axi_update_AWCACHE;

assign m_axi_update_AWID = right_copy_loop_proc_U0_m_axi_update_AWID;

assign m_axi_update_AWLEN = right_copy_loop_proc_U0_m_axi_update_AWLEN;

assign m_axi_update_AWLOCK = right_copy_loop_proc_U0_m_axi_update_AWLOCK;

assign m_axi_update_AWPROT = right_copy_loop_proc_U0_m_axi_update_AWPROT;

assign m_axi_update_AWQOS = right_copy_loop_proc_U0_m_axi_update_AWQOS;

assign m_axi_update_AWREGION = right_copy_loop_proc_U0_m_axi_update_AWREGION;

assign m_axi_update_AWSIZE = right_copy_loop_proc_U0_m_axi_update_AWSIZE;

assign m_axi_update_AWUSER = right_copy_loop_proc_U0_m_axi_update_AWUSER;

assign m_axi_update_AWVALID = right_copy_loop_proc_U0_m_axi_update_AWVALID;

assign m_axi_update_BREADY = right_copy_loop_proc_U0_m_axi_update_BREADY;

assign m_axi_update_RREADY = 1'b0;

assign m_axi_update_WDATA = right_copy_loop_proc_U0_m_axi_update_WDATA;

assign m_axi_update_WID = right_copy_loop_proc_U0_m_axi_update_WID;

assign m_axi_update_WLAST = right_copy_loop_proc_U0_m_axi_update_WLAST;

assign m_axi_update_WSTRB = right_copy_loop_proc_U0_m_axi_update_WSTRB;

assign m_axi_update_WUSER = right_copy_loop_proc_U0_m_axi_update_WUSER;

assign m_axi_update_WVALID = right_copy_loop_proc_U0_m_axi_update_WVALID;

assign right_copy_loop_proc_U0_ap_continue = ap_continue;

assign right_copy_loop_proc_U0_ap_start = xcopy_V_t_empty_n;

assign right_copy_loop_proc_U0_start_full_n = 1'b1;

assign right_copy_loop_proc_U0_start_write = 1'b0;

assign right_width_loop_proc8_U0_ap_continue = xcopy_V_i_full_n;

assign right_width_loop_proc8_U0_ap_start = ap_start;

assign right_width_loop_proc8_U0_start_full_n = 1'b1;

assign right_width_loop_proc8_U0_start_write = 1'b0;

assign right_width_loop_proc8_U0_xcopy_V1_full_n = xcopy_V_i_full_n;

endmodule //background_loop_dataflow_in_loop_right_height_loop
