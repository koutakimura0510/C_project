<profile>

<section name = "Vitis HLS Report for 'right_width_loop_proc8'" level="0">
<item name = "Date">Tue Jun  1 15:08:04 2021
</item>
<item name = "Version">2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)</item>
<item name = "Project">background_loop</item>
<item name = "Solution">solution1 (Vivado IP Flow Target)</item>
<item name = "Product family">zynq</item>
<item name = "Target device">xc7z020-clg400-1</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">10.00 ns, 7.300 ns, 2.70 ns</column>
</table>
</item>
</section>
</item>
<item name = "Latency">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="8">, min, max, min, max, min, max, Type</keys>
<column name="">13, 652, 0.130 us, 6.520 us, 13, 652, none</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="9">Instance, Module, min, max, min, max, min, max, Type</keys>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
<column name="- right_width_loop">2, 641, 3, 1, 1, 1 ~ 640, yes</column>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="DSP">-, -, -, -, -</column>
<column name="Expression">-, -, 0, 177, -</column>
<column name="FIFO">-, -, -, -, -</column>
<column name="Instance">-, 0, 165, 50, -</column>
<column name="Memory">-, -, -, -, -</column>
<column name="Multiplexer">-, -, -, 164, -</column>
<column name="Register">-, -, 304, -, -</column>
<specialColumn name="Available">280, 220, 106400, 53200, 0</specialColumn>
<specialColumn name="Utilization (%)">0, 0, ~0, ~0, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="7">Instance, Module, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="mul_32ns_32ns_62_2_1_U21">mul_32ns_32ns_62_2_1, 0, 0, 165, 50, 0</column>
</table>
</item>
<item name = "DSP"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="10">Memory, Module, BRAM_18K, FF, LUT, URAM, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="8">Name, BRAM_18K, FF, LUT, URAM, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="add_ln213_fu_198_p2">+, 0, 0, 39, 32, 2</column>
<column name="add_ln324_fu_210_p2">+, 0, 0, 71, 64, 64</column>
<column name="add_ln37_fu_236_p2">+, 0, 0, 39, 32, 1</column>
<column name="ap_block_pp0_stage0_11001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_state12_pp0_stage0_iter1">and, 0, 0, 2, 1, 1</column>
<column name="icmp_ln878_fu_242_p2">icmp, 0, 0, 18, 32, 32</column>
<column name="ap_block_state1">or, 0, 0, 2, 1, 1</column>
<column name="ap_enable_pp0">xor, 0, 0, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter1">xor, 0, 0, 2, 2, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="ap_NS_fsm">65, 13, 1, 13</column>
<column name="ap_done">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter1">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter2">9, 2, 1, 2</column>
<column name="ap_phi_mux_x_phi_fu_176_p4">9, 2, 32, 64</column>
<column name="copy_blk_n_AR">9, 2, 1, 2</column>
<column name="copy_blk_n_R">9, 2, 1, 2</column>
<column name="ddr_update_out_blk_n">9, 2, 1, 2</column>
<column name="frame_size_out_blk_n">9, 2, 1, 2</column>
<column name="width_out_blk_n">9, 2, 1, 2</column>
<column name="x_reg_172">9, 2, 32, 64</column>
<column name="y_1_out_blk_n">9, 2, 1, 2</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="add_ln213_reg_272">32, 0, 32, 0</column>
<column name="add_ln37_reg_284">32, 0, 32, 0</column>
<column name="ap_CS_fsm">12, 0, 12, 0</column>
<column name="ap_done_reg">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter0">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter1">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter2">1, 0, 1, 0</column>
<column name="copy_addr_read_reg_293">32, 0, 32, 0</column>
<column name="copy_addr_reg_278">64, 0, 64, 0</column>
<column name="icmp_ln878_reg_289">1, 0, 1, 0</column>
<column name="icmp_ln878_reg_289_pp0_iter1_reg">1, 0, 1, 0</column>
<column name="ret_reg_267">62, 0, 62, 0</column>
<column name="x_reg_172">32, 0, 32, 0</column>
<column name="x_reg_172_pp0_iter1_reg">32, 0, 32, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="ap_clk">in, 1, ap_ctrl_hs, right_width_loop_proc8, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, right_width_loop_proc8, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, right_width_loop_proc8, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, right_width_loop_proc8, return value</column>
<column name="ap_continue">in, 1, ap_ctrl_hs, right_width_loop_proc8, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, right_width_loop_proc8, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, right_width_loop_proc8, return value</column>
<column name="width">in, 32, ap_none, width, scalar</column>
<column name="y_1">in, 32, ap_none, y_1, scalar</column>
<column name="frame_size">in, 32, ap_none, frame_size, scalar</column>
<column name="ddr_copy">in, 64, ap_none, ddr_copy, scalar</column>
<column name="m_axi_copy_AWVALID">out, 1, m_axi, copy, pointer</column>
<column name="m_axi_copy_AWREADY">in, 1, m_axi, copy, pointer</column>
<column name="m_axi_copy_AWADDR">out, 64, m_axi, copy, pointer</column>
<column name="m_axi_copy_AWID">out, 1, m_axi, copy, pointer</column>
<column name="m_axi_copy_AWLEN">out, 32, m_axi, copy, pointer</column>
<column name="m_axi_copy_AWSIZE">out, 3, m_axi, copy, pointer</column>
<column name="m_axi_copy_AWBURST">out, 2, m_axi, copy, pointer</column>
<column name="m_axi_copy_AWLOCK">out, 2, m_axi, copy, pointer</column>
<column name="m_axi_copy_AWCACHE">out, 4, m_axi, copy, pointer</column>
<column name="m_axi_copy_AWPROT">out, 3, m_axi, copy, pointer</column>
<column name="m_axi_copy_AWQOS">out, 4, m_axi, copy, pointer</column>
<column name="m_axi_copy_AWREGION">out, 4, m_axi, copy, pointer</column>
<column name="m_axi_copy_AWUSER">out, 1, m_axi, copy, pointer</column>
<column name="m_axi_copy_WVALID">out, 1, m_axi, copy, pointer</column>
<column name="m_axi_copy_WREADY">in, 1, m_axi, copy, pointer</column>
<column name="m_axi_copy_WDATA">out, 32, m_axi, copy, pointer</column>
<column name="m_axi_copy_WSTRB">out, 4, m_axi, copy, pointer</column>
<column name="m_axi_copy_WLAST">out, 1, m_axi, copy, pointer</column>
<column name="m_axi_copy_WID">out, 1, m_axi, copy, pointer</column>
<column name="m_axi_copy_WUSER">out, 1, m_axi, copy, pointer</column>
<column name="m_axi_copy_ARVALID">out, 1, m_axi, copy, pointer</column>
<column name="m_axi_copy_ARREADY">in, 1, m_axi, copy, pointer</column>
<column name="m_axi_copy_ARADDR">out, 64, m_axi, copy, pointer</column>
<column name="m_axi_copy_ARID">out, 1, m_axi, copy, pointer</column>
<column name="m_axi_copy_ARLEN">out, 32, m_axi, copy, pointer</column>
<column name="m_axi_copy_ARSIZE">out, 3, m_axi, copy, pointer</column>
<column name="m_axi_copy_ARBURST">out, 2, m_axi, copy, pointer</column>
<column name="m_axi_copy_ARLOCK">out, 2, m_axi, copy, pointer</column>
<column name="m_axi_copy_ARCACHE">out, 4, m_axi, copy, pointer</column>
<column name="m_axi_copy_ARPROT">out, 3, m_axi, copy, pointer</column>
<column name="m_axi_copy_ARQOS">out, 4, m_axi, copy, pointer</column>
<column name="m_axi_copy_ARREGION">out, 4, m_axi, copy, pointer</column>
<column name="m_axi_copy_ARUSER">out, 1, m_axi, copy, pointer</column>
<column name="m_axi_copy_RVALID">in, 1, m_axi, copy, pointer</column>
<column name="m_axi_copy_RREADY">out, 1, m_axi, copy, pointer</column>
<column name="m_axi_copy_RDATA">in, 32, m_axi, copy, pointer</column>
<column name="m_axi_copy_RLAST">in, 1, m_axi, copy, pointer</column>
<column name="m_axi_copy_RID">in, 1, m_axi, copy, pointer</column>
<column name="m_axi_copy_RUSER">in, 1, m_axi, copy, pointer</column>
<column name="m_axi_copy_RRESP">in, 2, m_axi, copy, pointer</column>
<column name="m_axi_copy_BVALID">in, 1, m_axi, copy, pointer</column>
<column name="m_axi_copy_BREADY">out, 1, m_axi, copy, pointer</column>
<column name="m_axi_copy_BRESP">in, 2, m_axi, copy, pointer</column>
<column name="m_axi_copy_BID">in, 1, m_axi, copy, pointer</column>
<column name="m_axi_copy_BUSER">in, 1, m_axi, copy, pointer</column>
<column name="xcopy_V1_address0">out, 10, ap_memory, xcopy_V1, array</column>
<column name="xcopy_V1_ce0">out, 1, ap_memory, xcopy_V1, array</column>
<column name="xcopy_V1_we0">out, 1, ap_memory, xcopy_V1, array</column>
<column name="xcopy_V1_d0">out, 32, ap_memory, xcopy_V1, array</column>
<column name="ddr_update">in, 64, ap_none, ddr_update, scalar</column>
<column name="width_out_din">out, 32, ap_fifo, width_out, pointer</column>
<column name="width_out_full_n">in, 1, ap_fifo, width_out, pointer</column>
<column name="width_out_write">out, 1, ap_fifo, width_out, pointer</column>
<column name="y_1_out_din">out, 32, ap_fifo, y_1_out, pointer</column>
<column name="y_1_out_full_n">in, 1, ap_fifo, y_1_out, pointer</column>
<column name="y_1_out_write">out, 1, ap_fifo, y_1_out, pointer</column>
<column name="frame_size_out_din">out, 32, ap_fifo, frame_size_out, pointer</column>
<column name="frame_size_out_full_n">in, 1, ap_fifo, frame_size_out, pointer</column>
<column name="frame_size_out_write">out, 1, ap_fifo, frame_size_out, pointer</column>
<column name="ddr_update_out_din">out, 64, ap_fifo, ddr_update_out, pointer</column>
<column name="ddr_update_out_full_n">in, 1, ap_fifo, ddr_update_out, pointer</column>
<column name="ddr_update_out_write">out, 1, ap_fifo, ddr_update_out, pointer</column>
</table>
</item>
</section>
</profile>
