// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="display_shift_display_shift,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.242500,HLS_SYN_LAT=314574,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=3622,HLS_SYN_LUT=3408,HLS_VERSION=2020_2}" *)

module display_shift (
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        m_axi_copy_AWVALID,
        m_axi_copy_AWREADY,
        m_axi_copy_AWADDR,
        m_axi_copy_AWID,
        m_axi_copy_AWLEN,
        m_axi_copy_AWSIZE,
        m_axi_copy_AWBURST,
        m_axi_copy_AWLOCK,
        m_axi_copy_AWCACHE,
        m_axi_copy_AWPROT,
        m_axi_copy_AWQOS,
        m_axi_copy_AWREGION,
        m_axi_copy_AWUSER,
        m_axi_copy_WVALID,
        m_axi_copy_WREADY,
        m_axi_copy_WDATA,
        m_axi_copy_WSTRB,
        m_axi_copy_WLAST,
        m_axi_copy_WID,
        m_axi_copy_WUSER,
        m_axi_copy_ARVALID,
        m_axi_copy_ARREADY,
        m_axi_copy_ARADDR,
        m_axi_copy_ARID,
        m_axi_copy_ARLEN,
        m_axi_copy_ARSIZE,
        m_axi_copy_ARBURST,
        m_axi_copy_ARLOCK,
        m_axi_copy_ARCACHE,
        m_axi_copy_ARPROT,
        m_axi_copy_ARQOS,
        m_axi_copy_ARREGION,
        m_axi_copy_ARUSER,
        m_axi_copy_RVALID,
        m_axi_copy_RREADY,
        m_axi_copy_RDATA,
        m_axi_copy_RLAST,
        m_axi_copy_RID,
        m_axi_copy_RUSER,
        m_axi_copy_RRESP,
        m_axi_copy_BVALID,
        m_axi_copy_BREADY,
        m_axi_copy_BRESP,
        m_axi_copy_BID,
        m_axi_copy_BUSER,
        m_axi_update_AWVALID,
        m_axi_update_AWREADY,
        m_axi_update_AWADDR,
        m_axi_update_AWID,
        m_axi_update_AWLEN,
        m_axi_update_AWSIZE,
        m_axi_update_AWBURST,
        m_axi_update_AWLOCK,
        m_axi_update_AWCACHE,
        m_axi_update_AWPROT,
        m_axi_update_AWQOS,
        m_axi_update_AWREGION,
        m_axi_update_AWUSER,
        m_axi_update_WVALID,
        m_axi_update_WREADY,
        m_axi_update_WDATA,
        m_axi_update_WSTRB,
        m_axi_update_WLAST,
        m_axi_update_WID,
        m_axi_update_WUSER,
        m_axi_update_ARVALID,
        m_axi_update_ARREADY,
        m_axi_update_ARADDR,
        m_axi_update_ARID,
        m_axi_update_ARLEN,
        m_axi_update_ARSIZE,
        m_axi_update_ARBURST,
        m_axi_update_ARLOCK,
        m_axi_update_ARCACHE,
        m_axi_update_ARPROT,
        m_axi_update_ARQOS,
        m_axi_update_ARREGION,
        m_axi_update_ARUSER,
        m_axi_update_RVALID,
        m_axi_update_RREADY,
        m_axi_update_RDATA,
        m_axi_update_RLAST,
        m_axi_update_RID,
        m_axi_update_RUSER,
        m_axi_update_RRESP,
        m_axi_update_BVALID,
        m_axi_update_BREADY,
        m_axi_update_BRESP,
        m_axi_update_BID,
        m_axi_update_BUSER
);

parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_COPY_ID_WIDTH = 1;
parameter    C_M_AXI_COPY_ADDR_WIDTH = 64;
parameter    C_M_AXI_COPY_DATA_WIDTH = 32;
parameter    C_M_AXI_COPY_AWUSER_WIDTH = 1;
parameter    C_M_AXI_COPY_ARUSER_WIDTH = 1;
parameter    C_M_AXI_COPY_WUSER_WIDTH = 1;
parameter    C_M_AXI_COPY_RUSER_WIDTH = 1;
parameter    C_M_AXI_COPY_BUSER_WIDTH = 1;
parameter    C_M_AXI_COPY_USER_VALUE = 0;
parameter    C_M_AXI_COPY_PROT_VALUE = 0;
parameter    C_M_AXI_COPY_CACHE_VALUE = 3;
parameter    C_M_AXI_ID_WIDTH = 1;
parameter    C_M_AXI_ADDR_WIDTH = 64;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AWUSER_WIDTH = 1;
parameter    C_M_AXI_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WUSER_WIDTH = 1;
parameter    C_M_AXI_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUSER_WIDTH = 1;
parameter    C_M_AXI_UPDATE_ID_WIDTH = 1;
parameter    C_M_AXI_UPDATE_ADDR_WIDTH = 64;
parameter    C_M_AXI_UPDATE_DATA_WIDTH = 32;
parameter    C_M_AXI_UPDATE_AWUSER_WIDTH = 1;
parameter    C_M_AXI_UPDATE_ARUSER_WIDTH = 1;
parameter    C_M_AXI_UPDATE_WUSER_WIDTH = 1;
parameter    C_M_AXI_UPDATE_RUSER_WIDTH = 1;
parameter    C_M_AXI_UPDATE_BUSER_WIDTH = 1;
parameter    C_M_AXI_UPDATE_USER_VALUE = 0;
parameter    C_M_AXI_UPDATE_PROT_VALUE = 0;
parameter    C_M_AXI_UPDATE_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_COPY_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_UPDATE_WSTRB_WIDTH = (32 / 8);

input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
output   m_axi_copy_AWVALID;
input   m_axi_copy_AWREADY;
output  [C_M_AXI_COPY_ADDR_WIDTH - 1:0] m_axi_copy_AWADDR;
output  [C_M_AXI_COPY_ID_WIDTH - 1:0] m_axi_copy_AWID;
output  [7:0] m_axi_copy_AWLEN;
output  [2:0] m_axi_copy_AWSIZE;
output  [1:0] m_axi_copy_AWBURST;
output  [1:0] m_axi_copy_AWLOCK;
output  [3:0] m_axi_copy_AWCACHE;
output  [2:0] m_axi_copy_AWPROT;
output  [3:0] m_axi_copy_AWQOS;
output  [3:0] m_axi_copy_AWREGION;
output  [C_M_AXI_COPY_AWUSER_WIDTH - 1:0] m_axi_copy_AWUSER;
output   m_axi_copy_WVALID;
input   m_axi_copy_WREADY;
output  [C_M_AXI_COPY_DATA_WIDTH - 1:0] m_axi_copy_WDATA;
output  [C_M_AXI_COPY_WSTRB_WIDTH - 1:0] m_axi_copy_WSTRB;
output   m_axi_copy_WLAST;
output  [C_M_AXI_COPY_ID_WIDTH - 1:0] m_axi_copy_WID;
output  [C_M_AXI_COPY_WUSER_WIDTH - 1:0] m_axi_copy_WUSER;
output   m_axi_copy_ARVALID;
input   m_axi_copy_ARREADY;
output  [C_M_AXI_COPY_ADDR_WIDTH - 1:0] m_axi_copy_ARADDR;
output  [C_M_AXI_COPY_ID_WIDTH - 1:0] m_axi_copy_ARID;
output  [7:0] m_axi_copy_ARLEN;
output  [2:0] m_axi_copy_ARSIZE;
output  [1:0] m_axi_copy_ARBURST;
output  [1:0] m_axi_copy_ARLOCK;
output  [3:0] m_axi_copy_ARCACHE;
output  [2:0] m_axi_copy_ARPROT;
output  [3:0] m_axi_copy_ARQOS;
output  [3:0] m_axi_copy_ARREGION;
output  [C_M_AXI_COPY_ARUSER_WIDTH - 1:0] m_axi_copy_ARUSER;
input   m_axi_copy_RVALID;
output   m_axi_copy_RREADY;
input  [C_M_AXI_COPY_DATA_WIDTH - 1:0] m_axi_copy_RDATA;
input   m_axi_copy_RLAST;
input  [C_M_AXI_COPY_ID_WIDTH - 1:0] m_axi_copy_RID;
input  [C_M_AXI_COPY_RUSER_WIDTH - 1:0] m_axi_copy_RUSER;
input  [1:0] m_axi_copy_RRESP;
input   m_axi_copy_BVALID;
output   m_axi_copy_BREADY;
input  [1:0] m_axi_copy_BRESP;
input  [C_M_AXI_COPY_ID_WIDTH - 1:0] m_axi_copy_BID;
input  [C_M_AXI_COPY_BUSER_WIDTH - 1:0] m_axi_copy_BUSER;
output   m_axi_update_AWVALID;
input   m_axi_update_AWREADY;
output  [C_M_AXI_UPDATE_ADDR_WIDTH - 1:0] m_axi_update_AWADDR;
output  [C_M_AXI_UPDATE_ID_WIDTH - 1:0] m_axi_update_AWID;
output  [7:0] m_axi_update_AWLEN;
output  [2:0] m_axi_update_AWSIZE;
output  [1:0] m_axi_update_AWBURST;
output  [1:0] m_axi_update_AWLOCK;
output  [3:0] m_axi_update_AWCACHE;
output  [2:0] m_axi_update_AWPROT;
output  [3:0] m_axi_update_AWQOS;
output  [3:0] m_axi_update_AWREGION;
output  [C_M_AXI_UPDATE_AWUSER_WIDTH - 1:0] m_axi_update_AWUSER;
output   m_axi_update_WVALID;
input   m_axi_update_WREADY;
output  [C_M_AXI_UPDATE_DATA_WIDTH - 1:0] m_axi_update_WDATA;
output  [C_M_AXI_UPDATE_WSTRB_WIDTH - 1:0] m_axi_update_WSTRB;
output   m_axi_update_WLAST;
output  [C_M_AXI_UPDATE_ID_WIDTH - 1:0] m_axi_update_WID;
output  [C_M_AXI_UPDATE_WUSER_WIDTH - 1:0] m_axi_update_WUSER;
output   m_axi_update_ARVALID;
input   m_axi_update_ARREADY;
output  [C_M_AXI_UPDATE_ADDR_WIDTH - 1:0] m_axi_update_ARADDR;
output  [C_M_AXI_UPDATE_ID_WIDTH - 1:0] m_axi_update_ARID;
output  [7:0] m_axi_update_ARLEN;
output  [2:0] m_axi_update_ARSIZE;
output  [1:0] m_axi_update_ARBURST;
output  [1:0] m_axi_update_ARLOCK;
output  [3:0] m_axi_update_ARCACHE;
output  [2:0] m_axi_update_ARPROT;
output  [3:0] m_axi_update_ARQOS;
output  [3:0] m_axi_update_ARREGION;
output  [C_M_AXI_UPDATE_ARUSER_WIDTH - 1:0] m_axi_update_ARUSER;
input   m_axi_update_RVALID;
output   m_axi_update_RREADY;
input  [C_M_AXI_UPDATE_DATA_WIDTH - 1:0] m_axi_update_RDATA;
input   m_axi_update_RLAST;
input  [C_M_AXI_UPDATE_ID_WIDTH - 1:0] m_axi_update_RID;
input  [C_M_AXI_UPDATE_RUSER_WIDTH - 1:0] m_axi_update_RUSER;
input  [1:0] m_axi_update_RRESP;
input   m_axi_update_BVALID;
output   m_axi_update_BREADY;
input  [1:0] m_axi_update_BRESP;
input  [C_M_AXI_UPDATE_ID_WIDTH - 1:0] m_axi_update_BID;
input  [C_M_AXI_UPDATE_BUSER_WIDTH - 1:0] m_axi_update_BUSER;

 reg    ap_rst_n_inv;
wire   [63:0] ddr_copy;
wire   [63:0] ddr_update;
wire   [31:0] width;
wire   [31:0] height;
wire   [31:0] xstart;
wire   [31:0] xend;
wire   [31:0] ystart;
wire   [31:0] yend;
wire   [31:0] frame_size;
wire    ap_start;
reg    ap_ready;
reg    ap_done;
reg    ap_idle;
wire    copy_AWREADY;
wire    copy_WREADY;
wire    copy_ARREADY;
wire    copy_RVALID;
wire   [31:0] copy_RDATA;
wire    copy_RLAST;
wire   [0:0] copy_RID;
wire   [0:0] copy_RUSER;
wire   [1:0] copy_RRESP;
wire    copy_BVALID;
wire   [1:0] copy_BRESP;
wire   [0:0] copy_BID;
wire   [0:0] copy_BUSER;
wire    update_AWREADY;
wire    update_WREADY;
wire    update_ARREADY;
wire    update_RVALID;
wire   [31:0] update_RDATA;
wire    update_RLAST;
wire   [0:0] update_RID;
wire   [0:0] update_RUSER;
wire   [1:0] update_RRESP;
wire    update_BVALID;
wire   [1:0] update_BRESP;
wire   [0:0] update_BID;
wire   [0:0] update_BUSER;
wire    dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWVALID;
wire   [63:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWADDR;
wire   [0:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWID;
wire   [31:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWLEN;
wire   [2:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWSIZE;
wire   [1:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWBURST;
wire   [1:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWLOCK;
wire   [3:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWCACHE;
wire   [2:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWPROT;
wire   [3:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWQOS;
wire   [3:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWREGION;
wire   [0:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWUSER;
wire    dataflow_in_loop_display_shift_label0_U0_m_axi_copy_WVALID;
wire   [31:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_WDATA;
wire   [3:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_WSTRB;
wire    dataflow_in_loop_display_shift_label0_U0_m_axi_copy_WLAST;
wire   [0:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_WID;
wire   [0:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_WUSER;
wire    dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARVALID;
wire   [63:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARADDR;
wire   [0:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARID;
wire   [31:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARLEN;
wire   [2:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARSIZE;
wire   [1:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARBURST;
wire   [1:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARLOCK;
wire   [3:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARCACHE;
wire   [2:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARPROT;
wire   [3:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARQOS;
wire   [3:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARREGION;
wire   [0:0] dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARUSER;
wire    dataflow_in_loop_display_shift_label0_U0_m_axi_copy_RREADY;
wire    dataflow_in_loop_display_shift_label0_U0_m_axi_copy_BREADY;
wire    dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWVALID;
wire   [63:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWADDR;
wire   [0:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWID;
wire   [31:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWLEN;
wire   [2:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWSIZE;
wire   [1:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWBURST;
wire   [1:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWLOCK;
wire   [3:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWCACHE;
wire   [2:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWPROT;
wire   [3:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWQOS;
wire   [3:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWREGION;
wire   [0:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWUSER;
wire    dataflow_in_loop_display_shift_label0_U0_m_axi_update_WVALID;
wire   [31:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_WDATA;
wire   [3:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_WSTRB;
wire    dataflow_in_loop_display_shift_label0_U0_m_axi_update_WLAST;
wire   [0:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_WID;
wire   [0:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_WUSER;
wire    dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARVALID;
wire   [63:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARADDR;
wire   [0:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARID;
wire   [31:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARLEN;
wire   [2:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARSIZE;
wire   [1:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARBURST;
wire   [1:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARLOCK;
wire   [3:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARCACHE;
wire   [2:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARPROT;
wire   [3:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARQOS;
wire   [3:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARREGION;
wire   [0:0] dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARUSER;
wire    dataflow_in_loop_display_shift_label0_U0_m_axi_update_RREADY;
wire    dataflow_in_loop_display_shift_label0_U0_m_axi_update_BREADY;
wire    dataflow_in_loop_display_shift_label0_U0_ap_start;
wire    dataflow_in_loop_display_shift_label0_U0_ap_done;
wire    dataflow_in_loop_display_shift_label0_U0_ap_ready;
wire    dataflow_in_loop_display_shift_label0_U0_ap_idle;
wire    dataflow_in_loop_display_shift_label0_U0_ap_continue;
wire    ap_sync_continue;
wire    ap_sync_done;
wire    ap_sync_ready;
reg   [31:0] loop_dataflow_input_count;
reg   [31:0] loop_dataflow_output_count;
wire   [31:0] bound_minus_1;
wire    dataflow_in_loop_display_shift_label0_U0_start_full_n;
wire    dataflow_in_loop_display_shift_label0_U0_start_write;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 loop_dataflow_input_count = 32'd0;
#0 loop_dataflow_output_count = 32'd0;
end

display_shift_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ddr_copy(ddr_copy),
    .ddr_update(ddr_update),
    .width(width),
    .height(height),
    .xstart(xstart),
    .xend(xend),
    .ystart(ystart),
    .yend(yend),
    .frame_size(frame_size),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

display_shift_copy_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 32 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_COPY_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_COPY_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_COPY_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_COPY_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_COPY_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_COPY_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_COPY_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_COPY_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_COPY_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_COPY_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_COPY_CACHE_VALUE ))
copy_m_axi_U(
    .AWVALID(m_axi_copy_AWVALID),
    .AWREADY(m_axi_copy_AWREADY),
    .AWADDR(m_axi_copy_AWADDR),
    .AWID(m_axi_copy_AWID),
    .AWLEN(m_axi_copy_AWLEN),
    .AWSIZE(m_axi_copy_AWSIZE),
    .AWBURST(m_axi_copy_AWBURST),
    .AWLOCK(m_axi_copy_AWLOCK),
    .AWCACHE(m_axi_copy_AWCACHE),
    .AWPROT(m_axi_copy_AWPROT),
    .AWQOS(m_axi_copy_AWQOS),
    .AWREGION(m_axi_copy_AWREGION),
    .AWUSER(m_axi_copy_AWUSER),
    .WVALID(m_axi_copy_WVALID),
    .WREADY(m_axi_copy_WREADY),
    .WDATA(m_axi_copy_WDATA),
    .WSTRB(m_axi_copy_WSTRB),
    .WLAST(m_axi_copy_WLAST),
    .WID(m_axi_copy_WID),
    .WUSER(m_axi_copy_WUSER),
    .ARVALID(m_axi_copy_ARVALID),
    .ARREADY(m_axi_copy_ARREADY),
    .ARADDR(m_axi_copy_ARADDR),
    .ARID(m_axi_copy_ARID),
    .ARLEN(m_axi_copy_ARLEN),
    .ARSIZE(m_axi_copy_ARSIZE),
    .ARBURST(m_axi_copy_ARBURST),
    .ARLOCK(m_axi_copy_ARLOCK),
    .ARCACHE(m_axi_copy_ARCACHE),
    .ARPROT(m_axi_copy_ARPROT),
    .ARQOS(m_axi_copy_ARQOS),
    .ARREGION(m_axi_copy_ARREGION),
    .ARUSER(m_axi_copy_ARUSER),
    .RVALID(m_axi_copy_RVALID),
    .RREADY(m_axi_copy_RREADY),
    .RDATA(m_axi_copy_RDATA),
    .RLAST(m_axi_copy_RLAST),
    .RID(m_axi_copy_RID),
    .RUSER(m_axi_copy_RUSER),
    .RRESP(m_axi_copy_RRESP),
    .BVALID(m_axi_copy_BVALID),
    .BREADY(m_axi_copy_BREADY),
    .BRESP(m_axi_copy_BRESP),
    .BID(m_axi_copy_BID),
    .BUSER(m_axi_copy_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARVALID),
    .I_ARREADY(copy_ARREADY),
    .I_ARADDR(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARADDR),
    .I_ARID(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARID),
    .I_ARLEN(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARLEN),
    .I_ARSIZE(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARSIZE),
    .I_ARLOCK(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARLOCK),
    .I_ARCACHE(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARCACHE),
    .I_ARQOS(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARQOS),
    .I_ARPROT(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARPROT),
    .I_ARUSER(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARUSER),
    .I_ARBURST(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARBURST),
    .I_ARREGION(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARREGION),
    .I_RVALID(copy_RVALID),
    .I_RREADY(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_RREADY),
    .I_RDATA(copy_RDATA),
    .I_RID(copy_RID),
    .I_RUSER(copy_RUSER),
    .I_RRESP(copy_RRESP),
    .I_RLAST(copy_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(copy_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(copy_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(copy_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(copy_BRESP),
    .I_BID(copy_BID),
    .I_BUSER(copy_BUSER)
);

display_shift_update_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 32 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_UPDATE_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_UPDATE_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_UPDATE_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_UPDATE_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_UPDATE_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_UPDATE_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_UPDATE_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_UPDATE_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_UPDATE_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_UPDATE_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_UPDATE_CACHE_VALUE ))
update_m_axi_U(
    .AWVALID(m_axi_update_AWVALID),
    .AWREADY(m_axi_update_AWREADY),
    .AWADDR(m_axi_update_AWADDR),
    .AWID(m_axi_update_AWID),
    .AWLEN(m_axi_update_AWLEN),
    .AWSIZE(m_axi_update_AWSIZE),
    .AWBURST(m_axi_update_AWBURST),
    .AWLOCK(m_axi_update_AWLOCK),
    .AWCACHE(m_axi_update_AWCACHE),
    .AWPROT(m_axi_update_AWPROT),
    .AWQOS(m_axi_update_AWQOS),
    .AWREGION(m_axi_update_AWREGION),
    .AWUSER(m_axi_update_AWUSER),
    .WVALID(m_axi_update_WVALID),
    .WREADY(m_axi_update_WREADY),
    .WDATA(m_axi_update_WDATA),
    .WSTRB(m_axi_update_WSTRB),
    .WLAST(m_axi_update_WLAST),
    .WID(m_axi_update_WID),
    .WUSER(m_axi_update_WUSER),
    .ARVALID(m_axi_update_ARVALID),
    .ARREADY(m_axi_update_ARREADY),
    .ARADDR(m_axi_update_ARADDR),
    .ARID(m_axi_update_ARID),
    .ARLEN(m_axi_update_ARLEN),
    .ARSIZE(m_axi_update_ARSIZE),
    .ARBURST(m_axi_update_ARBURST),
    .ARLOCK(m_axi_update_ARLOCK),
    .ARCACHE(m_axi_update_ARCACHE),
    .ARPROT(m_axi_update_ARPROT),
    .ARQOS(m_axi_update_ARQOS),
    .ARREGION(m_axi_update_ARREGION),
    .ARUSER(m_axi_update_ARUSER),
    .RVALID(m_axi_update_RVALID),
    .RREADY(m_axi_update_RREADY),
    .RDATA(m_axi_update_RDATA),
    .RLAST(m_axi_update_RLAST),
    .RID(m_axi_update_RID),
    .RUSER(m_axi_update_RUSER),
    .RRESP(m_axi_update_RRESP),
    .BVALID(m_axi_update_BVALID),
    .BREADY(m_axi_update_BREADY),
    .BRESP(m_axi_update_BRESP),
    .BID(m_axi_update_BID),
    .BUSER(m_axi_update_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(update_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(update_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(update_RDATA),
    .I_RID(update_RID),
    .I_RUSER(update_RUSER),
    .I_RRESP(update_RRESP),
    .I_RLAST(update_RLAST),
    .I_AWVALID(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWVALID),
    .I_AWREADY(update_AWREADY),
    .I_AWADDR(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWADDR),
    .I_AWID(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWID),
    .I_AWLEN(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWLEN),
    .I_AWSIZE(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWSIZE),
    .I_AWLOCK(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWLOCK),
    .I_AWCACHE(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWCACHE),
    .I_AWQOS(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWQOS),
    .I_AWPROT(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWPROT),
    .I_AWUSER(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWUSER),
    .I_AWBURST(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWBURST),
    .I_AWREGION(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWREGION),
    .I_WVALID(dataflow_in_loop_display_shift_label0_U0_m_axi_update_WVALID),
    .I_WREADY(update_WREADY),
    .I_WDATA(dataflow_in_loop_display_shift_label0_U0_m_axi_update_WDATA),
    .I_WID(dataflow_in_loop_display_shift_label0_U0_m_axi_update_WID),
    .I_WUSER(dataflow_in_loop_display_shift_label0_U0_m_axi_update_WUSER),
    .I_WLAST(dataflow_in_loop_display_shift_label0_U0_m_axi_update_WLAST),
    .I_WSTRB(dataflow_in_loop_display_shift_label0_U0_m_axi_update_WSTRB),
    .I_BVALID(update_BVALID),
    .I_BREADY(dataflow_in_loop_display_shift_label0_U0_m_axi_update_BREADY),
    .I_BRESP(update_BRESP),
    .I_BID(update_BID),
    .I_BUSER(update_BUSER)
);

display_shift_dataflow_in_loop_display_shift_label0 dataflow_in_loop_display_shift_label0_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .width(width),
    .xstart(xstart),
    .y_2(loop_dataflow_input_count),
    .ystart(ystart),
    .frame_size(frame_size),
    .ddr_copy(ddr_copy),
    .m_axi_copy_AWVALID(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWVALID),
    .m_axi_copy_AWREADY(1'b0),
    .m_axi_copy_AWADDR(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWADDR),
    .m_axi_copy_AWID(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWID),
    .m_axi_copy_AWLEN(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWLEN),
    .m_axi_copy_AWSIZE(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWSIZE),
    .m_axi_copy_AWBURST(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWBURST),
    .m_axi_copy_AWLOCK(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWLOCK),
    .m_axi_copy_AWCACHE(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWCACHE),
    .m_axi_copy_AWPROT(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWPROT),
    .m_axi_copy_AWQOS(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWQOS),
    .m_axi_copy_AWREGION(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWREGION),
    .m_axi_copy_AWUSER(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_AWUSER),
    .m_axi_copy_WVALID(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_WVALID),
    .m_axi_copy_WREADY(1'b0),
    .m_axi_copy_WDATA(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_WDATA),
    .m_axi_copy_WSTRB(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_WSTRB),
    .m_axi_copy_WLAST(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_WLAST),
    .m_axi_copy_WID(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_WID),
    .m_axi_copy_WUSER(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_WUSER),
    .m_axi_copy_ARVALID(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARVALID),
    .m_axi_copy_ARREADY(copy_ARREADY),
    .m_axi_copy_ARADDR(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARADDR),
    .m_axi_copy_ARID(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARID),
    .m_axi_copy_ARLEN(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARLEN),
    .m_axi_copy_ARSIZE(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARSIZE),
    .m_axi_copy_ARBURST(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARBURST),
    .m_axi_copy_ARLOCK(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARLOCK),
    .m_axi_copy_ARCACHE(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARCACHE),
    .m_axi_copy_ARPROT(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARPROT),
    .m_axi_copy_ARQOS(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARQOS),
    .m_axi_copy_ARREGION(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARREGION),
    .m_axi_copy_ARUSER(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_ARUSER),
    .m_axi_copy_RVALID(copy_RVALID),
    .m_axi_copy_RREADY(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_RREADY),
    .m_axi_copy_RDATA(copy_RDATA),
    .m_axi_copy_RLAST(copy_RLAST),
    .m_axi_copy_RID(copy_RID),
    .m_axi_copy_RUSER(copy_RUSER),
    .m_axi_copy_RRESP(copy_RRESP),
    .m_axi_copy_BVALID(1'b0),
    .m_axi_copy_BREADY(dataflow_in_loop_display_shift_label0_U0_m_axi_copy_BREADY),
    .m_axi_copy_BRESP(2'd0),
    .m_axi_copy_BID(1'd0),
    .m_axi_copy_BUSER(1'd0),
    .xend(xend),
    .yend(yend),
    .ddr_update(ddr_update),
    .m_axi_update_AWVALID(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWVALID),
    .m_axi_update_AWREADY(update_AWREADY),
    .m_axi_update_AWADDR(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWADDR),
    .m_axi_update_AWID(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWID),
    .m_axi_update_AWLEN(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWLEN),
    .m_axi_update_AWSIZE(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWSIZE),
    .m_axi_update_AWBURST(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWBURST),
    .m_axi_update_AWLOCK(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWLOCK),
    .m_axi_update_AWCACHE(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWCACHE),
    .m_axi_update_AWPROT(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWPROT),
    .m_axi_update_AWQOS(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWQOS),
    .m_axi_update_AWREGION(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWREGION),
    .m_axi_update_AWUSER(dataflow_in_loop_display_shift_label0_U0_m_axi_update_AWUSER),
    .m_axi_update_WVALID(dataflow_in_loop_display_shift_label0_U0_m_axi_update_WVALID),
    .m_axi_update_WREADY(update_WREADY),
    .m_axi_update_WDATA(dataflow_in_loop_display_shift_label0_U0_m_axi_update_WDATA),
    .m_axi_update_WSTRB(dataflow_in_loop_display_shift_label0_U0_m_axi_update_WSTRB),
    .m_axi_update_WLAST(dataflow_in_loop_display_shift_label0_U0_m_axi_update_WLAST),
    .m_axi_update_WID(dataflow_in_loop_display_shift_label0_U0_m_axi_update_WID),
    .m_axi_update_WUSER(dataflow_in_loop_display_shift_label0_U0_m_axi_update_WUSER),
    .m_axi_update_ARVALID(dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARVALID),
    .m_axi_update_ARREADY(1'b0),
    .m_axi_update_ARADDR(dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARADDR),
    .m_axi_update_ARID(dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARID),
    .m_axi_update_ARLEN(dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARLEN),
    .m_axi_update_ARSIZE(dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARSIZE),
    .m_axi_update_ARBURST(dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARBURST),
    .m_axi_update_ARLOCK(dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARLOCK),
    .m_axi_update_ARCACHE(dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARCACHE),
    .m_axi_update_ARPROT(dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARPROT),
    .m_axi_update_ARQOS(dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARQOS),
    .m_axi_update_ARREGION(dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARREGION),
    .m_axi_update_ARUSER(dataflow_in_loop_display_shift_label0_U0_m_axi_update_ARUSER),
    .m_axi_update_RVALID(1'b0),
    .m_axi_update_RREADY(dataflow_in_loop_display_shift_label0_U0_m_axi_update_RREADY),
    .m_axi_update_RDATA(32'd0),
    .m_axi_update_RLAST(1'b0),
    .m_axi_update_RID(1'd0),
    .m_axi_update_RUSER(1'd0),
    .m_axi_update_RRESP(2'd0),
    .m_axi_update_BVALID(update_BVALID),
    .m_axi_update_BREADY(dataflow_in_loop_display_shift_label0_U0_m_axi_update_BREADY),
    .m_axi_update_BRESP(update_BRESP),
    .m_axi_update_BID(update_BID),
    .m_axi_update_BUSER(update_BUSER),
    .width_ap_vld(1'b1),
    .xstart_ap_vld(1'b1),
    .y_2_ap_vld(1'b0),
    .ystart_ap_vld(1'b1),
    .frame_size_ap_vld(1'b1),
    .ddr_copy_ap_vld(1'b1),
    .xend_ap_vld(1'b1),
    .yend_ap_vld(1'b1),
    .ddr_update_ap_vld(1'b1),
    .ap_start(dataflow_in_loop_display_shift_label0_U0_ap_start),
    .ap_done(dataflow_in_loop_display_shift_label0_U0_ap_done),
    .ap_ready(dataflow_in_loop_display_shift_label0_U0_ap_ready),
    .ap_idle(dataflow_in_loop_display_shift_label0_U0_ap_idle),
    .ap_continue(dataflow_in_loop_display_shift_label0_U0_ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        loop_dataflow_input_count <= 32'd0;
    end else begin
        if ((~(loop_dataflow_input_count == bound_minus_1) & (ap_start == 1'b1) & (dataflow_in_loop_display_shift_label0_U0_ap_ready == 1'b1))) begin
            loop_dataflow_input_count <= (loop_dataflow_input_count + 32'd1);
        end else if (((ap_start == 1'b1) & (loop_dataflow_input_count == bound_minus_1) & (dataflow_in_loop_display_shift_label0_U0_ap_ready == 1'b1))) begin
            loop_dataflow_input_count <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        loop_dataflow_output_count <= 32'd0;
    end else begin
        if ((~(loop_dataflow_output_count == bound_minus_1) & (dataflow_in_loop_display_shift_label0_U0_ap_continue == 1'b1) & (dataflow_in_loop_display_shift_label0_U0_ap_done == 1'b1))) begin
            loop_dataflow_output_count <= (loop_dataflow_output_count + 32'd1);
        end else if (((loop_dataflow_output_count == bound_minus_1) & (dataflow_in_loop_display_shift_label0_U0_ap_continue == 1'b1) & (dataflow_in_loop_display_shift_label0_U0_ap_done == 1'b1))) begin
            loop_dataflow_output_count <= 32'd0;
        end
    end
end

always @ (*) begin
    if (((loop_dataflow_output_count == bound_minus_1) & (dataflow_in_loop_display_shift_label0_U0_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (loop_dataflow_output_count == 32'd0) & (dataflow_in_loop_display_shift_label0_U0_ap_idle == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (loop_dataflow_input_count == bound_minus_1) & (dataflow_in_loop_display_shift_label0_U0_ap_ready == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

assign dataflow_in_loop_display_shift_label0_U0_ap_continue = 1'b1;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b1;

assign ap_sync_done = dataflow_in_loop_display_shift_label0_U0_ap_done;

assign ap_sync_ready = dataflow_in_loop_display_shift_label0_U0_ap_ready;

assign bound_minus_1 = (height - 32'd1);

assign dataflow_in_loop_display_shift_label0_U0_ap_start = ap_start;

assign dataflow_in_loop_display_shift_label0_U0_start_full_n = 1'b1;

assign dataflow_in_loop_display_shift_label0_U0_start_write = 1'b0;


// synthesis translate_off
`include "display_shift_hls_deadlock_detector.vh"
// synthesis translate_on

endmodule //display_shift

