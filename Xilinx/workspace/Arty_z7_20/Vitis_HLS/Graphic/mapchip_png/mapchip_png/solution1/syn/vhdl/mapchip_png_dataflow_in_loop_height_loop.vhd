-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mapchip_png_dataflow_in_loop_height_loop is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    mapchip_draw_xsize : IN STD_LOGIC_VECTOR (31 downto 0);
    id : IN STD_LOGIC_VECTOR (31 downto 0);
    mapchip_maxheight : IN STD_LOGIC_VECTOR (31 downto 0);
    ystart_pos : IN STD_LOGIC_VECTOR (31 downto 0);
    mapchip_maxwidth : IN STD_LOGIC_VECTOR (31 downto 0);
    xstart_pos : IN STD_LOGIC_VECTOR (31 downto 0);
    y : IN STD_LOGIC_VECTOR (31 downto 0);
    srcin : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_src_AWVALID : OUT STD_LOGIC;
    m_axi_src_AWREADY : IN STD_LOGIC;
    m_axi_src_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_src_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_src_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_src_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_src_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_src_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_src_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_src_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_src_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_src_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_src_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_src_WVALID : OUT STD_LOGIC;
    m_axi_src_WREADY : IN STD_LOGIC;
    m_axi_src_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_src_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_src_WLAST : OUT STD_LOGIC;
    m_axi_src_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_src_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_src_ARVALID : OUT STD_LOGIC;
    m_axi_src_ARREADY : IN STD_LOGIC;
    m_axi_src_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_src_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_src_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_src_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_src_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_src_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_src_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_src_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_src_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_src_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_src_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_src_RVALID : IN STD_LOGIC;
    m_axi_src_RREADY : OUT STD_LOGIC;
    m_axi_src_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_src_RLAST : IN STD_LOGIC;
    m_axi_src_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_src_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_src_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_src_BVALID : IN STD_LOGIC;
    m_axi_src_BREADY : OUT STD_LOGIC;
    m_axi_src_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_src_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_src_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    frame_size : IN STD_LOGIC_VECTOR (31 downto 0);
    dstin : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_dst_AWVALID : OUT STD_LOGIC;
    m_axi_dst_AWREADY : IN STD_LOGIC;
    m_axi_dst_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_dst_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dst_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_dst_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dst_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dst_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dst_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dst_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dst_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dst_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dst_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dst_WVALID : OUT STD_LOGIC;
    m_axi_dst_WREADY : IN STD_LOGIC;
    m_axi_dst_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_dst_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dst_WLAST : OUT STD_LOGIC;
    m_axi_dst_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dst_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dst_ARVALID : OUT STD_LOGIC;
    m_axi_dst_ARREADY : IN STD_LOGIC;
    m_axi_dst_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_dst_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dst_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_dst_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dst_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dst_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dst_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dst_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dst_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dst_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dst_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dst_RVALID : IN STD_LOGIC;
    m_axi_dst_RREADY : OUT STD_LOGIC;
    m_axi_dst_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_dst_RLAST : IN STD_LOGIC;
    m_axi_dst_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dst_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dst_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dst_BVALID : IN STD_LOGIC;
    m_axi_dst_BREADY : OUT STD_LOGIC;
    m_axi_dst_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dst_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dst_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    alpha : IN STD_LOGIC_VECTOR (7 downto 0);
    dstout : IN STD_LOGIC_VECTOR (63 downto 0);
    mapchip_draw_xsize_ap_vld : IN STD_LOGIC;
    id_ap_vld : IN STD_LOGIC;
    mapchip_maxheight_ap_vld : IN STD_LOGIC;
    ystart_pos_ap_vld : IN STD_LOGIC;
    mapchip_maxwidth_ap_vld : IN STD_LOGIC;
    xstart_pos_ap_vld : IN STD_LOGIC;
    y_ap_vld : IN STD_LOGIC;
    srcin_ap_vld : IN STD_LOGIC;
    frame_size_ap_vld : IN STD_LOGIC;
    dstin_ap_vld : IN STD_LOGIC;
    alpha_ap_vld : IN STD_LOGIC;
    dstout_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of mapchip_png_dataflow_in_loop_height_loop is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal src_V_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal src_V_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dst_V_i_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal dst_V_t_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal dataflow_in_loop_height_loop_entry6_U0_ap_start : STD_LOGIC;
    signal dataflow_in_loop_height_loop_entry6_U0_ap_done : STD_LOGIC;
    signal dataflow_in_loop_height_loop_entry6_U0_ap_continue : STD_LOGIC;
    signal dataflow_in_loop_height_loop_entry6_U0_ap_idle : STD_LOGIC;
    signal dataflow_in_loop_height_loop_entry6_U0_ap_ready : STD_LOGIC;
    signal dataflow_in_loop_height_loop_entry6_U0_mapchip_draw_xsize_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_height_loop_entry6_U0_mapchip_draw_xsize_out_write : STD_LOGIC;
    signal dataflow_in_loop_height_loop_entry6_U0_mapchip_draw_xsize_out1_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_height_loop_entry6_U0_mapchip_draw_xsize_out1_write : STD_LOGIC;
    signal dataflow_in_loop_height_loop_entry6_U0_id_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_height_loop_entry6_U0_id_out_write : STD_LOGIC;
    signal dataflow_in_loop_height_loop_entry6_U0_mapchip_maxheight_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_height_loop_entry6_U0_mapchip_maxheight_out_write : STD_LOGIC;
    signal dataflow_in_loop_height_loop_entry6_U0_ystart_pos_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_height_loop_entry6_U0_ystart_pos_out_write : STD_LOGIC;
    signal dataflow_in_loop_height_loop_entry6_U0_mapchip_maxwidth_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_height_loop_entry6_U0_mapchip_maxwidth_out_write : STD_LOGIC;
    signal dataflow_in_loop_height_loop_entry6_U0_xstart_pos_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_height_loop_entry6_U0_xstart_pos_out_write : STD_LOGIC;
    signal dataflow_in_loop_height_loop_entry6_U0_y_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_height_loop_entry6_U0_y_out_write : STD_LOGIC;
    signal dataflow_in_loop_height_loop_entry6_U0_y_out2_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_height_loop_entry6_U0_y_out2_write : STD_LOGIC;
    signal dataflow_in_loop_height_loop_entry6_U0_srcin_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_in_loop_height_loop_entry6_U0_srcin_out_write : STD_LOGIC;
    signal dataflow_in_loop_height_loop_entry6_U0_frame_size_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_height_loop_entry6_U0_frame_size_out_write : STD_LOGIC;
    signal dataflow_in_loop_height_loop_entry6_U0_frame_size_out3_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_height_loop_entry6_U0_frame_size_out3_write : STD_LOGIC;
    signal dataflow_in_loop_height_loop_entry6_U0_dstin_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_in_loop_height_loop_entry6_U0_dstin_out_write : STD_LOGIC;
    signal dataflow_in_loop_height_loop_entry6_U0_alpha_out_din : STD_LOGIC_VECTOR (7 downto 0);
    signal dataflow_in_loop_height_loop_entry6_U0_alpha_out_write : STD_LOGIC;
    signal dataflow_in_loop_height_loop_entry6_U0_dstout_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_in_loop_height_loop_entry6_U0_dstout_out_write : STD_LOGIC;
    signal src_loop_proc_U0_ap_start : STD_LOGIC;
    signal src_loop_proc_U0_ap_done : STD_LOGIC;
    signal src_loop_proc_U0_ap_continue : STD_LOGIC;
    signal src_loop_proc_U0_ap_idle : STD_LOGIC;
    signal src_loop_proc_U0_ap_ready : STD_LOGIC;
    signal src_loop_proc_U0_mapchip_draw_xsize_read : STD_LOGIC;
    signal src_loop_proc_U0_id_read : STD_LOGIC;
    signal src_loop_proc_U0_mapchip_maxheight_read : STD_LOGIC;
    signal src_loop_proc_U0_ystart_pos_read : STD_LOGIC;
    signal src_loop_proc_U0_mapchip_maxwidth_read : STD_LOGIC;
    signal src_loop_proc_U0_xstart_pos_read : STD_LOGIC;
    signal src_loop_proc_U0_y_read : STD_LOGIC;
    signal src_loop_proc_U0_srcin_read : STD_LOGIC;
    signal src_loop_proc_U0_m_axi_src_AWVALID : STD_LOGIC;
    signal src_loop_proc_U0_m_axi_src_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal src_loop_proc_U0_m_axi_src_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal src_loop_proc_U0_m_axi_src_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal src_loop_proc_U0_m_axi_src_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal src_loop_proc_U0_m_axi_src_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal src_loop_proc_U0_m_axi_src_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal src_loop_proc_U0_m_axi_src_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal src_loop_proc_U0_m_axi_src_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal src_loop_proc_U0_m_axi_src_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal src_loop_proc_U0_m_axi_src_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal src_loop_proc_U0_m_axi_src_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal src_loop_proc_U0_m_axi_src_WVALID : STD_LOGIC;
    signal src_loop_proc_U0_m_axi_src_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal src_loop_proc_U0_m_axi_src_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal src_loop_proc_U0_m_axi_src_WLAST : STD_LOGIC;
    signal src_loop_proc_U0_m_axi_src_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal src_loop_proc_U0_m_axi_src_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal src_loop_proc_U0_m_axi_src_ARVALID : STD_LOGIC;
    signal src_loop_proc_U0_m_axi_src_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal src_loop_proc_U0_m_axi_src_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal src_loop_proc_U0_m_axi_src_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal src_loop_proc_U0_m_axi_src_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal src_loop_proc_U0_m_axi_src_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal src_loop_proc_U0_m_axi_src_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal src_loop_proc_U0_m_axi_src_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal src_loop_proc_U0_m_axi_src_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal src_loop_proc_U0_m_axi_src_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal src_loop_proc_U0_m_axi_src_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal src_loop_proc_U0_m_axi_src_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal src_loop_proc_U0_m_axi_src_RREADY : STD_LOGIC;
    signal src_loop_proc_U0_m_axi_src_BREADY : STD_LOGIC;
    signal src_loop_proc_U0_src_V1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal src_loop_proc_U0_src_V1_ce0 : STD_LOGIC;
    signal src_loop_proc_U0_src_V1_we0 : STD_LOGIC;
    signal src_loop_proc_U0_src_V1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal src_loop_proc_U0_mapchip_draw_xsize_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal src_loop_proc_U0_mapchip_draw_xsize_out_write : STD_LOGIC;
    signal src_loop_proc_U0_y_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal src_loop_proc_U0_y_out_write : STD_LOGIC;
    signal ap_channel_done_src_V : STD_LOGIC;
    signal src_loop_proc_U0_src_V1_full_n : STD_LOGIC;
    signal dstin_loop_proc_U0_ap_start : STD_LOGIC;
    signal dstin_loop_proc_U0_ap_done : STD_LOGIC;
    signal dstin_loop_proc_U0_ap_continue : STD_LOGIC;
    signal dstin_loop_proc_U0_ap_idle : STD_LOGIC;
    signal dstin_loop_proc_U0_ap_ready : STD_LOGIC;
    signal dstin_loop_proc_U0_mapchip_draw_xsize_read : STD_LOGIC;
    signal dstin_loop_proc_U0_y_read : STD_LOGIC;
    signal dstin_loop_proc_U0_frame_size_read : STD_LOGIC;
    signal dstin_loop_proc_U0_dstin_read : STD_LOGIC;
    signal dstin_loop_proc_U0_m_axi_dst_AWVALID : STD_LOGIC;
    signal dstin_loop_proc_U0_m_axi_dst_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_WVALID : STD_LOGIC;
    signal dstin_loop_proc_U0_m_axi_dst_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_WLAST : STD_LOGIC;
    signal dstin_loop_proc_U0_m_axi_dst_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_ARVALID : STD_LOGIC;
    signal dstin_loop_proc_U0_m_axi_dst_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dstin_loop_proc_U0_m_axi_dst_RREADY : STD_LOGIC;
    signal dstin_loop_proc_U0_m_axi_dst_BREADY : STD_LOGIC;
    signal dstin_loop_proc_U0_dst_V2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dstin_loop_proc_U0_dst_V2_ce0 : STD_LOGIC;
    signal dstin_loop_proc_U0_dst_V2_we0 : STD_LOGIC;
    signal dstin_loop_proc_U0_dst_V2_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_channel_done_dst_V : STD_LOGIC;
    signal dstin_loop_proc_U0_dst_V2_full_n : STD_LOGIC;
    signal dstout_loop_proc_U0_ap_start : STD_LOGIC;
    signal dstout_loop_proc_U0_ap_done : STD_LOGIC;
    signal dstout_loop_proc_U0_ap_continue : STD_LOGIC;
    signal dstout_loop_proc_U0_ap_idle : STD_LOGIC;
    signal dstout_loop_proc_U0_ap_ready : STD_LOGIC;
    signal dstout_loop_proc_U0_mapchip_draw_xsize_read : STD_LOGIC;
    signal dstout_loop_proc_U0_src_V1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dstout_loop_proc_U0_src_V1_ce0 : STD_LOGIC;
    signal dstout_loop_proc_U0_dst_V2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dstout_loop_proc_U0_dst_V2_ce0 : STD_LOGIC;
    signal dstout_loop_proc_U0_alpha_read : STD_LOGIC;
    signal dstout_loop_proc_U0_y_read : STD_LOGIC;
    signal dstout_loop_proc_U0_frame_size_read : STD_LOGIC;
    signal dstout_loop_proc_U0_dstout_read : STD_LOGIC;
    signal dstout_loop_proc_U0_m_axi_dst_AWVALID : STD_LOGIC;
    signal dstout_loop_proc_U0_m_axi_dst_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_WVALID : STD_LOGIC;
    signal dstout_loop_proc_U0_m_axi_dst_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_WLAST : STD_LOGIC;
    signal dstout_loop_proc_U0_m_axi_dst_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_ARVALID : STD_LOGIC;
    signal dstout_loop_proc_U0_m_axi_dst_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dstout_loop_proc_U0_m_axi_dst_RREADY : STD_LOGIC;
    signal dstout_loop_proc_U0_m_axi_dst_BREADY : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal src_V_i_full_n : STD_LOGIC;
    signal src_V_t_empty_n : STD_LOGIC;
    signal dst_V_i_full_n : STD_LOGIC;
    signal dst_V_t_empty_n : STD_LOGIC;
    signal mapchip_draw_xsize_c_full_n : STD_LOGIC;
    signal mapchip_draw_xsize_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mapchip_draw_xsize_c_empty_n : STD_LOGIC;
    signal mapchip_draw_xsize_c1_full_n : STD_LOGIC;
    signal mapchip_draw_xsize_c1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mapchip_draw_xsize_c1_empty_n : STD_LOGIC;
    signal id_c_full_n : STD_LOGIC;
    signal id_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal id_c_empty_n : STD_LOGIC;
    signal mapchip_maxheight_c_full_n : STD_LOGIC;
    signal mapchip_maxheight_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mapchip_maxheight_c_empty_n : STD_LOGIC;
    signal ystart_pos_c_full_n : STD_LOGIC;
    signal ystart_pos_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal ystart_pos_c_empty_n : STD_LOGIC;
    signal mapchip_maxwidth_c_full_n : STD_LOGIC;
    signal mapchip_maxwidth_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mapchip_maxwidth_c_empty_n : STD_LOGIC;
    signal xstart_pos_c_full_n : STD_LOGIC;
    signal xstart_pos_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal xstart_pos_c_empty_n : STD_LOGIC;
    signal y_c_full_n : STD_LOGIC;
    signal y_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal y_c_empty_n : STD_LOGIC;
    signal y_c2_full_n : STD_LOGIC;
    signal y_c2_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal y_c2_empty_n : STD_LOGIC;
    signal srcin_c_full_n : STD_LOGIC;
    signal srcin_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal srcin_c_empty_n : STD_LOGIC;
    signal frame_size_c_full_n : STD_LOGIC;
    signal frame_size_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal frame_size_c_empty_n : STD_LOGIC;
    signal frame_size_c3_full_n : STD_LOGIC;
    signal frame_size_c3_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal frame_size_c3_empty_n : STD_LOGIC;
    signal dstin_c_full_n : STD_LOGIC;
    signal dstin_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal dstin_c_empty_n : STD_LOGIC;
    signal alpha_c_full_n : STD_LOGIC;
    signal alpha_c_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal alpha_c_empty_n : STD_LOGIC;
    signal dstout_c_full_n : STD_LOGIC;
    signal dstout_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal dstout_c_empty_n : STD_LOGIC;
    signal mapchip_draw_xsize_c4_full_n : STD_LOGIC;
    signal mapchip_draw_xsize_c4_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mapchip_draw_xsize_c4_empty_n : STD_LOGIC;
    signal y_c5_full_n : STD_LOGIC;
    signal y_c5_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal y_c5_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_dataflow_in_loop_height_loop_entry6_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_dataflow_in_loop_height_loop_entry6_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_src_loop_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_src_loop_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_dstin_loop_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_dstin_loop_proc_U0_ap_ready : STD_LOGIC;
    signal dataflow_in_loop_height_loop_entry6_U0_start_full_n : STD_LOGIC;
    signal dataflow_in_loop_height_loop_entry6_U0_start_write : STD_LOGIC;
    signal src_loop_proc_U0_start_full_n : STD_LOGIC;
    signal src_loop_proc_U0_start_write : STD_LOGIC;
    signal dstin_loop_proc_U0_start_full_n : STD_LOGIC;
    signal dstin_loop_proc_U0_start_write : STD_LOGIC;
    signal dstout_loop_proc_U0_start_full_n : STD_LOGIC;
    signal dstout_loop_proc_U0_start_write : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component mapchip_png_dataflow_in_loop_height_loop_entry6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mapchip_draw_xsize : IN STD_LOGIC_VECTOR (31 downto 0);
        id : IN STD_LOGIC_VECTOR (31 downto 0);
        mapchip_maxheight : IN STD_LOGIC_VECTOR (31 downto 0);
        ystart_pos : IN STD_LOGIC_VECTOR (31 downto 0);
        mapchip_maxwidth : IN STD_LOGIC_VECTOR (31 downto 0);
        xstart_pos : IN STD_LOGIC_VECTOR (31 downto 0);
        y : IN STD_LOGIC_VECTOR (31 downto 0);
        srcin : IN STD_LOGIC_VECTOR (63 downto 0);
        frame_size : IN STD_LOGIC_VECTOR (31 downto 0);
        dstin : IN STD_LOGIC_VECTOR (63 downto 0);
        alpha : IN STD_LOGIC_VECTOR (7 downto 0);
        dstout : IN STD_LOGIC_VECTOR (63 downto 0);
        mapchip_draw_xsize_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mapchip_draw_xsize_out_full_n : IN STD_LOGIC;
        mapchip_draw_xsize_out_write : OUT STD_LOGIC;
        mapchip_draw_xsize_out1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mapchip_draw_xsize_out1_full_n : IN STD_LOGIC;
        mapchip_draw_xsize_out1_write : OUT STD_LOGIC;
        id_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        id_out_full_n : IN STD_LOGIC;
        id_out_write : OUT STD_LOGIC;
        mapchip_maxheight_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mapchip_maxheight_out_full_n : IN STD_LOGIC;
        mapchip_maxheight_out_write : OUT STD_LOGIC;
        ystart_pos_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        ystart_pos_out_full_n : IN STD_LOGIC;
        ystart_pos_out_write : OUT STD_LOGIC;
        mapchip_maxwidth_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mapchip_maxwidth_out_full_n : IN STD_LOGIC;
        mapchip_maxwidth_out_write : OUT STD_LOGIC;
        xstart_pos_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        xstart_pos_out_full_n : IN STD_LOGIC;
        xstart_pos_out_write : OUT STD_LOGIC;
        y_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        y_out_full_n : IN STD_LOGIC;
        y_out_write : OUT STD_LOGIC;
        y_out2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        y_out2_full_n : IN STD_LOGIC;
        y_out2_write : OUT STD_LOGIC;
        srcin_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        srcin_out_full_n : IN STD_LOGIC;
        srcin_out_write : OUT STD_LOGIC;
        frame_size_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        frame_size_out_full_n : IN STD_LOGIC;
        frame_size_out_write : OUT STD_LOGIC;
        frame_size_out3_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        frame_size_out3_full_n : IN STD_LOGIC;
        frame_size_out3_write : OUT STD_LOGIC;
        dstin_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        dstin_out_full_n : IN STD_LOGIC;
        dstin_out_write : OUT STD_LOGIC;
        alpha_out_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        alpha_out_full_n : IN STD_LOGIC;
        alpha_out_write : OUT STD_LOGIC;
        dstout_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        dstout_out_full_n : IN STD_LOGIC;
        dstout_out_write : OUT STD_LOGIC );
    end component;


    component mapchip_png_src_loop_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mapchip_draw_xsize_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mapchip_draw_xsize_empty_n : IN STD_LOGIC;
        mapchip_draw_xsize_read : OUT STD_LOGIC;
        id_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        id_empty_n : IN STD_LOGIC;
        id_read : OUT STD_LOGIC;
        mapchip_maxheight_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mapchip_maxheight_empty_n : IN STD_LOGIC;
        mapchip_maxheight_read : OUT STD_LOGIC;
        ystart_pos_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        ystart_pos_empty_n : IN STD_LOGIC;
        ystart_pos_read : OUT STD_LOGIC;
        mapchip_maxwidth_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mapchip_maxwidth_empty_n : IN STD_LOGIC;
        mapchip_maxwidth_read : OUT STD_LOGIC;
        xstart_pos_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        xstart_pos_empty_n : IN STD_LOGIC;
        xstart_pos_read : OUT STD_LOGIC;
        y_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        y_empty_n : IN STD_LOGIC;
        y_read : OUT STD_LOGIC;
        srcin_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        srcin_empty_n : IN STD_LOGIC;
        srcin_read : OUT STD_LOGIC;
        m_axi_src_AWVALID : OUT STD_LOGIC;
        m_axi_src_AWREADY : IN STD_LOGIC;
        m_axi_src_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_src_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_src_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_src_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_src_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_src_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_src_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_src_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_src_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_src_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_src_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_src_WVALID : OUT STD_LOGIC;
        m_axi_src_WREADY : IN STD_LOGIC;
        m_axi_src_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_src_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_src_WLAST : OUT STD_LOGIC;
        m_axi_src_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_src_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_src_ARVALID : OUT STD_LOGIC;
        m_axi_src_ARREADY : IN STD_LOGIC;
        m_axi_src_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_src_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_src_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_src_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_src_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_src_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_src_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_src_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_src_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_src_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_src_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_src_RVALID : IN STD_LOGIC;
        m_axi_src_RREADY : OUT STD_LOGIC;
        m_axi_src_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_src_RLAST : IN STD_LOGIC;
        m_axi_src_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_src_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_src_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_src_BVALID : IN STD_LOGIC;
        m_axi_src_BREADY : OUT STD_LOGIC;
        m_axi_src_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_src_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_src_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        src_V1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        src_V1_ce0 : OUT STD_LOGIC;
        src_V1_we0 : OUT STD_LOGIC;
        src_V1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        mapchip_draw_xsize_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mapchip_draw_xsize_out_full_n : IN STD_LOGIC;
        mapchip_draw_xsize_out_write : OUT STD_LOGIC;
        y_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        y_out_full_n : IN STD_LOGIC;
        y_out_write : OUT STD_LOGIC );
    end component;


    component mapchip_png_dstin_loop_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mapchip_draw_xsize_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mapchip_draw_xsize_empty_n : IN STD_LOGIC;
        mapchip_draw_xsize_read : OUT STD_LOGIC;
        y_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        y_empty_n : IN STD_LOGIC;
        y_read : OUT STD_LOGIC;
        frame_size_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        frame_size_empty_n : IN STD_LOGIC;
        frame_size_read : OUT STD_LOGIC;
        dstin_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        dstin_empty_n : IN STD_LOGIC;
        dstin_read : OUT STD_LOGIC;
        m_axi_dst_AWVALID : OUT STD_LOGIC;
        m_axi_dst_AWREADY : IN STD_LOGIC;
        m_axi_dst_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_dst_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dst_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_dst_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_dst_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dst_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dst_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dst_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_dst_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dst_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dst_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dst_WVALID : OUT STD_LOGIC;
        m_axi_dst_WREADY : IN STD_LOGIC;
        m_axi_dst_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_dst_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dst_WLAST : OUT STD_LOGIC;
        m_axi_dst_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dst_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dst_ARVALID : OUT STD_LOGIC;
        m_axi_dst_ARREADY : IN STD_LOGIC;
        m_axi_dst_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_dst_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dst_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_dst_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_dst_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dst_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dst_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dst_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_dst_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dst_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dst_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dst_RVALID : IN STD_LOGIC;
        m_axi_dst_RREADY : OUT STD_LOGIC;
        m_axi_dst_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_dst_RLAST : IN STD_LOGIC;
        m_axi_dst_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dst_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dst_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dst_BVALID : IN STD_LOGIC;
        m_axi_dst_BREADY : OUT STD_LOGIC;
        m_axi_dst_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dst_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dst_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        dst_V2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        dst_V2_ce0 : OUT STD_LOGIC;
        dst_V2_we0 : OUT STD_LOGIC;
        dst_V2_d0 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component mapchip_png_dstout_loop_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mapchip_draw_xsize_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mapchip_draw_xsize_empty_n : IN STD_LOGIC;
        mapchip_draw_xsize_read : OUT STD_LOGIC;
        src_V1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        src_V1_ce0 : OUT STD_LOGIC;
        src_V1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dst_V2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        dst_V2_ce0 : OUT STD_LOGIC;
        dst_V2_q0 : IN STD_LOGIC_VECTOR (23 downto 0);
        alpha_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        alpha_empty_n : IN STD_LOGIC;
        alpha_read : OUT STD_LOGIC;
        y_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        y_empty_n : IN STD_LOGIC;
        y_read : OUT STD_LOGIC;
        frame_size_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        frame_size_empty_n : IN STD_LOGIC;
        frame_size_read : OUT STD_LOGIC;
        dstout_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        dstout_empty_n : IN STD_LOGIC;
        dstout_read : OUT STD_LOGIC;
        m_axi_dst_AWVALID : OUT STD_LOGIC;
        m_axi_dst_AWREADY : IN STD_LOGIC;
        m_axi_dst_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_dst_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dst_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_dst_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_dst_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dst_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dst_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dst_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_dst_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dst_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dst_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dst_WVALID : OUT STD_LOGIC;
        m_axi_dst_WREADY : IN STD_LOGIC;
        m_axi_dst_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_dst_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dst_WLAST : OUT STD_LOGIC;
        m_axi_dst_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dst_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dst_ARVALID : OUT STD_LOGIC;
        m_axi_dst_ARREADY : IN STD_LOGIC;
        m_axi_dst_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_dst_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dst_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_dst_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_dst_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dst_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dst_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dst_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_dst_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dst_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dst_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dst_RVALID : IN STD_LOGIC;
        m_axi_dst_RREADY : OUT STD_LOGIC;
        m_axi_dst_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_dst_RLAST : IN STD_LOGIC;
        m_axi_dst_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dst_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dst_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dst_BVALID : IN STD_LOGIC;
        m_axi_dst_BREADY : OUT STD_LOGIC;
        m_axi_dst_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dst_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dst_BUSER : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component mapchip_png_dataflow_in_loop_height_loop_src_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component mapchip_png_dataflow_in_loop_height_loop_dst_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component mapchip_png_fifo_w32_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component mapchip_png_fifo_w64_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component mapchip_png_fifo_w32_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component mapchip_png_fifo_w8_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component mapchip_png_fifo_w64_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    src_V_U : component mapchip_png_dataflow_in_loop_height_loop_src_V
    generic map (
        DataWidth => 32,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => src_loop_proc_U0_src_V1_address0,
        i_ce0 => src_loop_proc_U0_src_V1_ce0,
        i_we0 => src_loop_proc_U0_src_V1_we0,
        i_d0 => src_loop_proc_U0_src_V1_d0,
        i_q0 => src_V_i_q0,
        t_address0 => dstout_loop_proc_U0_src_V1_address0,
        t_ce0 => dstout_loop_proc_U0_src_V1_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => src_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => src_V_i_full_n,
        i_write => src_loop_proc_U0_ap_done,
        t_empty_n => src_V_t_empty_n,
        t_read => dstout_loop_proc_U0_ap_ready);

    dst_V_U : component mapchip_png_dataflow_in_loop_height_loop_dst_V
    generic map (
        DataWidth => 24,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dstin_loop_proc_U0_dst_V2_address0,
        i_ce0 => dstin_loop_proc_U0_dst_V2_ce0,
        i_we0 => dstin_loop_proc_U0_dst_V2_we0,
        i_d0 => dstin_loop_proc_U0_dst_V2_d0,
        i_q0 => dst_V_i_q0,
        t_address0 => dstout_loop_proc_U0_dst_V2_address0,
        t_ce0 => dstout_loop_proc_U0_dst_V2_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv24_0,
        t_q0 => dst_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => dst_V_i_full_n,
        i_write => dstin_loop_proc_U0_ap_done,
        t_empty_n => dst_V_t_empty_n,
        t_read => dstout_loop_proc_U0_ap_ready);

    dataflow_in_loop_height_loop_entry6_U0 : component mapchip_png_dataflow_in_loop_height_loop_entry6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dataflow_in_loop_height_loop_entry6_U0_ap_start,
        ap_done => dataflow_in_loop_height_loop_entry6_U0_ap_done,
        ap_continue => dataflow_in_loop_height_loop_entry6_U0_ap_continue,
        ap_idle => dataflow_in_loop_height_loop_entry6_U0_ap_idle,
        ap_ready => dataflow_in_loop_height_loop_entry6_U0_ap_ready,
        mapchip_draw_xsize => mapchip_draw_xsize,
        id => id,
        mapchip_maxheight => mapchip_maxheight,
        ystart_pos => ystart_pos,
        mapchip_maxwidth => mapchip_maxwidth,
        xstart_pos => xstart_pos,
        y => y,
        srcin => srcin,
        frame_size => frame_size,
        dstin => dstin,
        alpha => alpha,
        dstout => dstout,
        mapchip_draw_xsize_out_din => dataflow_in_loop_height_loop_entry6_U0_mapchip_draw_xsize_out_din,
        mapchip_draw_xsize_out_full_n => mapchip_draw_xsize_c_full_n,
        mapchip_draw_xsize_out_write => dataflow_in_loop_height_loop_entry6_U0_mapchip_draw_xsize_out_write,
        mapchip_draw_xsize_out1_din => dataflow_in_loop_height_loop_entry6_U0_mapchip_draw_xsize_out1_din,
        mapchip_draw_xsize_out1_full_n => mapchip_draw_xsize_c1_full_n,
        mapchip_draw_xsize_out1_write => dataflow_in_loop_height_loop_entry6_U0_mapchip_draw_xsize_out1_write,
        id_out_din => dataflow_in_loop_height_loop_entry6_U0_id_out_din,
        id_out_full_n => id_c_full_n,
        id_out_write => dataflow_in_loop_height_loop_entry6_U0_id_out_write,
        mapchip_maxheight_out_din => dataflow_in_loop_height_loop_entry6_U0_mapchip_maxheight_out_din,
        mapchip_maxheight_out_full_n => mapchip_maxheight_c_full_n,
        mapchip_maxheight_out_write => dataflow_in_loop_height_loop_entry6_U0_mapchip_maxheight_out_write,
        ystart_pos_out_din => dataflow_in_loop_height_loop_entry6_U0_ystart_pos_out_din,
        ystart_pos_out_full_n => ystart_pos_c_full_n,
        ystart_pos_out_write => dataflow_in_loop_height_loop_entry6_U0_ystart_pos_out_write,
        mapchip_maxwidth_out_din => dataflow_in_loop_height_loop_entry6_U0_mapchip_maxwidth_out_din,
        mapchip_maxwidth_out_full_n => mapchip_maxwidth_c_full_n,
        mapchip_maxwidth_out_write => dataflow_in_loop_height_loop_entry6_U0_mapchip_maxwidth_out_write,
        xstart_pos_out_din => dataflow_in_loop_height_loop_entry6_U0_xstart_pos_out_din,
        xstart_pos_out_full_n => xstart_pos_c_full_n,
        xstart_pos_out_write => dataflow_in_loop_height_loop_entry6_U0_xstart_pos_out_write,
        y_out_din => dataflow_in_loop_height_loop_entry6_U0_y_out_din,
        y_out_full_n => y_c_full_n,
        y_out_write => dataflow_in_loop_height_loop_entry6_U0_y_out_write,
        y_out2_din => dataflow_in_loop_height_loop_entry6_U0_y_out2_din,
        y_out2_full_n => y_c2_full_n,
        y_out2_write => dataflow_in_loop_height_loop_entry6_U0_y_out2_write,
        srcin_out_din => dataflow_in_loop_height_loop_entry6_U0_srcin_out_din,
        srcin_out_full_n => srcin_c_full_n,
        srcin_out_write => dataflow_in_loop_height_loop_entry6_U0_srcin_out_write,
        frame_size_out_din => dataflow_in_loop_height_loop_entry6_U0_frame_size_out_din,
        frame_size_out_full_n => frame_size_c_full_n,
        frame_size_out_write => dataflow_in_loop_height_loop_entry6_U0_frame_size_out_write,
        frame_size_out3_din => dataflow_in_loop_height_loop_entry6_U0_frame_size_out3_din,
        frame_size_out3_full_n => frame_size_c3_full_n,
        frame_size_out3_write => dataflow_in_loop_height_loop_entry6_U0_frame_size_out3_write,
        dstin_out_din => dataflow_in_loop_height_loop_entry6_U0_dstin_out_din,
        dstin_out_full_n => dstin_c_full_n,
        dstin_out_write => dataflow_in_loop_height_loop_entry6_U0_dstin_out_write,
        alpha_out_din => dataflow_in_loop_height_loop_entry6_U0_alpha_out_din,
        alpha_out_full_n => alpha_c_full_n,
        alpha_out_write => dataflow_in_loop_height_loop_entry6_U0_alpha_out_write,
        dstout_out_din => dataflow_in_loop_height_loop_entry6_U0_dstout_out_din,
        dstout_out_full_n => dstout_c_full_n,
        dstout_out_write => dataflow_in_loop_height_loop_entry6_U0_dstout_out_write);

    src_loop_proc_U0 : component mapchip_png_src_loop_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => src_loop_proc_U0_ap_start,
        ap_done => src_loop_proc_U0_ap_done,
        ap_continue => src_loop_proc_U0_ap_continue,
        ap_idle => src_loop_proc_U0_ap_idle,
        ap_ready => src_loop_proc_U0_ap_ready,
        mapchip_draw_xsize_dout => mapchip_draw_xsize_c_dout,
        mapchip_draw_xsize_empty_n => mapchip_draw_xsize_c_empty_n,
        mapchip_draw_xsize_read => src_loop_proc_U0_mapchip_draw_xsize_read,
        id_dout => id_c_dout,
        id_empty_n => id_c_empty_n,
        id_read => src_loop_proc_U0_id_read,
        mapchip_maxheight_dout => mapchip_maxheight_c_dout,
        mapchip_maxheight_empty_n => mapchip_maxheight_c_empty_n,
        mapchip_maxheight_read => src_loop_proc_U0_mapchip_maxheight_read,
        ystart_pos_dout => ystart_pos_c_dout,
        ystart_pos_empty_n => ystart_pos_c_empty_n,
        ystart_pos_read => src_loop_proc_U0_ystart_pos_read,
        mapchip_maxwidth_dout => mapchip_maxwidth_c_dout,
        mapchip_maxwidth_empty_n => mapchip_maxwidth_c_empty_n,
        mapchip_maxwidth_read => src_loop_proc_U0_mapchip_maxwidth_read,
        xstart_pos_dout => xstart_pos_c_dout,
        xstart_pos_empty_n => xstart_pos_c_empty_n,
        xstart_pos_read => src_loop_proc_U0_xstart_pos_read,
        y_dout => y_c_dout,
        y_empty_n => y_c_empty_n,
        y_read => src_loop_proc_U0_y_read,
        srcin_dout => srcin_c_dout,
        srcin_empty_n => srcin_c_empty_n,
        srcin_read => src_loop_proc_U0_srcin_read,
        m_axi_src_AWVALID => src_loop_proc_U0_m_axi_src_AWVALID,
        m_axi_src_AWREADY => ap_const_logic_0,
        m_axi_src_AWADDR => src_loop_proc_U0_m_axi_src_AWADDR,
        m_axi_src_AWID => src_loop_proc_U0_m_axi_src_AWID,
        m_axi_src_AWLEN => src_loop_proc_U0_m_axi_src_AWLEN,
        m_axi_src_AWSIZE => src_loop_proc_U0_m_axi_src_AWSIZE,
        m_axi_src_AWBURST => src_loop_proc_U0_m_axi_src_AWBURST,
        m_axi_src_AWLOCK => src_loop_proc_U0_m_axi_src_AWLOCK,
        m_axi_src_AWCACHE => src_loop_proc_U0_m_axi_src_AWCACHE,
        m_axi_src_AWPROT => src_loop_proc_U0_m_axi_src_AWPROT,
        m_axi_src_AWQOS => src_loop_proc_U0_m_axi_src_AWQOS,
        m_axi_src_AWREGION => src_loop_proc_U0_m_axi_src_AWREGION,
        m_axi_src_AWUSER => src_loop_proc_U0_m_axi_src_AWUSER,
        m_axi_src_WVALID => src_loop_proc_U0_m_axi_src_WVALID,
        m_axi_src_WREADY => ap_const_logic_0,
        m_axi_src_WDATA => src_loop_proc_U0_m_axi_src_WDATA,
        m_axi_src_WSTRB => src_loop_proc_U0_m_axi_src_WSTRB,
        m_axi_src_WLAST => src_loop_proc_U0_m_axi_src_WLAST,
        m_axi_src_WID => src_loop_proc_U0_m_axi_src_WID,
        m_axi_src_WUSER => src_loop_proc_U0_m_axi_src_WUSER,
        m_axi_src_ARVALID => src_loop_proc_U0_m_axi_src_ARVALID,
        m_axi_src_ARREADY => m_axi_src_ARREADY,
        m_axi_src_ARADDR => src_loop_proc_U0_m_axi_src_ARADDR,
        m_axi_src_ARID => src_loop_proc_U0_m_axi_src_ARID,
        m_axi_src_ARLEN => src_loop_proc_U0_m_axi_src_ARLEN,
        m_axi_src_ARSIZE => src_loop_proc_U0_m_axi_src_ARSIZE,
        m_axi_src_ARBURST => src_loop_proc_U0_m_axi_src_ARBURST,
        m_axi_src_ARLOCK => src_loop_proc_U0_m_axi_src_ARLOCK,
        m_axi_src_ARCACHE => src_loop_proc_U0_m_axi_src_ARCACHE,
        m_axi_src_ARPROT => src_loop_proc_U0_m_axi_src_ARPROT,
        m_axi_src_ARQOS => src_loop_proc_U0_m_axi_src_ARQOS,
        m_axi_src_ARREGION => src_loop_proc_U0_m_axi_src_ARREGION,
        m_axi_src_ARUSER => src_loop_proc_U0_m_axi_src_ARUSER,
        m_axi_src_RVALID => m_axi_src_RVALID,
        m_axi_src_RREADY => src_loop_proc_U0_m_axi_src_RREADY,
        m_axi_src_RDATA => m_axi_src_RDATA,
        m_axi_src_RLAST => m_axi_src_RLAST,
        m_axi_src_RID => m_axi_src_RID,
        m_axi_src_RUSER => m_axi_src_RUSER,
        m_axi_src_RRESP => m_axi_src_RRESP,
        m_axi_src_BVALID => ap_const_logic_0,
        m_axi_src_BREADY => src_loop_proc_U0_m_axi_src_BREADY,
        m_axi_src_BRESP => ap_const_lv2_0,
        m_axi_src_BID => ap_const_lv1_0,
        m_axi_src_BUSER => ap_const_lv1_0,
        src_V1_address0 => src_loop_proc_U0_src_V1_address0,
        src_V1_ce0 => src_loop_proc_U0_src_V1_ce0,
        src_V1_we0 => src_loop_proc_U0_src_V1_we0,
        src_V1_d0 => src_loop_proc_U0_src_V1_d0,
        mapchip_draw_xsize_out_din => src_loop_proc_U0_mapchip_draw_xsize_out_din,
        mapchip_draw_xsize_out_full_n => mapchip_draw_xsize_c4_full_n,
        mapchip_draw_xsize_out_write => src_loop_proc_U0_mapchip_draw_xsize_out_write,
        y_out_din => src_loop_proc_U0_y_out_din,
        y_out_full_n => y_c5_full_n,
        y_out_write => src_loop_proc_U0_y_out_write);

    dstin_loop_proc_U0 : component mapchip_png_dstin_loop_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dstin_loop_proc_U0_ap_start,
        ap_done => dstin_loop_proc_U0_ap_done,
        ap_continue => dstin_loop_proc_U0_ap_continue,
        ap_idle => dstin_loop_proc_U0_ap_idle,
        ap_ready => dstin_loop_proc_U0_ap_ready,
        mapchip_draw_xsize_dout => mapchip_draw_xsize_c1_dout,
        mapchip_draw_xsize_empty_n => mapchip_draw_xsize_c1_empty_n,
        mapchip_draw_xsize_read => dstin_loop_proc_U0_mapchip_draw_xsize_read,
        y_dout => y_c2_dout,
        y_empty_n => y_c2_empty_n,
        y_read => dstin_loop_proc_U0_y_read,
        frame_size_dout => frame_size_c_dout,
        frame_size_empty_n => frame_size_c_empty_n,
        frame_size_read => dstin_loop_proc_U0_frame_size_read,
        dstin_dout => dstin_c_dout,
        dstin_empty_n => dstin_c_empty_n,
        dstin_read => dstin_loop_proc_U0_dstin_read,
        m_axi_dst_AWVALID => dstin_loop_proc_U0_m_axi_dst_AWVALID,
        m_axi_dst_AWREADY => ap_const_logic_0,
        m_axi_dst_AWADDR => dstin_loop_proc_U0_m_axi_dst_AWADDR,
        m_axi_dst_AWID => dstin_loop_proc_U0_m_axi_dst_AWID,
        m_axi_dst_AWLEN => dstin_loop_proc_U0_m_axi_dst_AWLEN,
        m_axi_dst_AWSIZE => dstin_loop_proc_U0_m_axi_dst_AWSIZE,
        m_axi_dst_AWBURST => dstin_loop_proc_U0_m_axi_dst_AWBURST,
        m_axi_dst_AWLOCK => dstin_loop_proc_U0_m_axi_dst_AWLOCK,
        m_axi_dst_AWCACHE => dstin_loop_proc_U0_m_axi_dst_AWCACHE,
        m_axi_dst_AWPROT => dstin_loop_proc_U0_m_axi_dst_AWPROT,
        m_axi_dst_AWQOS => dstin_loop_proc_U0_m_axi_dst_AWQOS,
        m_axi_dst_AWREGION => dstin_loop_proc_U0_m_axi_dst_AWREGION,
        m_axi_dst_AWUSER => dstin_loop_proc_U0_m_axi_dst_AWUSER,
        m_axi_dst_WVALID => dstin_loop_proc_U0_m_axi_dst_WVALID,
        m_axi_dst_WREADY => ap_const_logic_0,
        m_axi_dst_WDATA => dstin_loop_proc_U0_m_axi_dst_WDATA,
        m_axi_dst_WSTRB => dstin_loop_proc_U0_m_axi_dst_WSTRB,
        m_axi_dst_WLAST => dstin_loop_proc_U0_m_axi_dst_WLAST,
        m_axi_dst_WID => dstin_loop_proc_U0_m_axi_dst_WID,
        m_axi_dst_WUSER => dstin_loop_proc_U0_m_axi_dst_WUSER,
        m_axi_dst_ARVALID => dstin_loop_proc_U0_m_axi_dst_ARVALID,
        m_axi_dst_ARREADY => m_axi_dst_ARREADY,
        m_axi_dst_ARADDR => dstin_loop_proc_U0_m_axi_dst_ARADDR,
        m_axi_dst_ARID => dstin_loop_proc_U0_m_axi_dst_ARID,
        m_axi_dst_ARLEN => dstin_loop_proc_U0_m_axi_dst_ARLEN,
        m_axi_dst_ARSIZE => dstin_loop_proc_U0_m_axi_dst_ARSIZE,
        m_axi_dst_ARBURST => dstin_loop_proc_U0_m_axi_dst_ARBURST,
        m_axi_dst_ARLOCK => dstin_loop_proc_U0_m_axi_dst_ARLOCK,
        m_axi_dst_ARCACHE => dstin_loop_proc_U0_m_axi_dst_ARCACHE,
        m_axi_dst_ARPROT => dstin_loop_proc_U0_m_axi_dst_ARPROT,
        m_axi_dst_ARQOS => dstin_loop_proc_U0_m_axi_dst_ARQOS,
        m_axi_dst_ARREGION => dstin_loop_proc_U0_m_axi_dst_ARREGION,
        m_axi_dst_ARUSER => dstin_loop_proc_U0_m_axi_dst_ARUSER,
        m_axi_dst_RVALID => m_axi_dst_RVALID,
        m_axi_dst_RREADY => dstin_loop_proc_U0_m_axi_dst_RREADY,
        m_axi_dst_RDATA => m_axi_dst_RDATA,
        m_axi_dst_RLAST => m_axi_dst_RLAST,
        m_axi_dst_RID => m_axi_dst_RID,
        m_axi_dst_RUSER => m_axi_dst_RUSER,
        m_axi_dst_RRESP => m_axi_dst_RRESP,
        m_axi_dst_BVALID => ap_const_logic_0,
        m_axi_dst_BREADY => dstin_loop_proc_U0_m_axi_dst_BREADY,
        m_axi_dst_BRESP => ap_const_lv2_0,
        m_axi_dst_BID => ap_const_lv1_0,
        m_axi_dst_BUSER => ap_const_lv1_0,
        dst_V2_address0 => dstin_loop_proc_U0_dst_V2_address0,
        dst_V2_ce0 => dstin_loop_proc_U0_dst_V2_ce0,
        dst_V2_we0 => dstin_loop_proc_U0_dst_V2_we0,
        dst_V2_d0 => dstin_loop_proc_U0_dst_V2_d0);

    dstout_loop_proc_U0 : component mapchip_png_dstout_loop_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dstout_loop_proc_U0_ap_start,
        ap_done => dstout_loop_proc_U0_ap_done,
        ap_continue => dstout_loop_proc_U0_ap_continue,
        ap_idle => dstout_loop_proc_U0_ap_idle,
        ap_ready => dstout_loop_proc_U0_ap_ready,
        mapchip_draw_xsize_dout => mapchip_draw_xsize_c4_dout,
        mapchip_draw_xsize_empty_n => mapchip_draw_xsize_c4_empty_n,
        mapchip_draw_xsize_read => dstout_loop_proc_U0_mapchip_draw_xsize_read,
        src_V1_address0 => dstout_loop_proc_U0_src_V1_address0,
        src_V1_ce0 => dstout_loop_proc_U0_src_V1_ce0,
        src_V1_q0 => src_V_t_q0,
        dst_V2_address0 => dstout_loop_proc_U0_dst_V2_address0,
        dst_V2_ce0 => dstout_loop_proc_U0_dst_V2_ce0,
        dst_V2_q0 => dst_V_t_q0,
        alpha_dout => alpha_c_dout,
        alpha_empty_n => alpha_c_empty_n,
        alpha_read => dstout_loop_proc_U0_alpha_read,
        y_dout => y_c5_dout,
        y_empty_n => y_c5_empty_n,
        y_read => dstout_loop_proc_U0_y_read,
        frame_size_dout => frame_size_c3_dout,
        frame_size_empty_n => frame_size_c3_empty_n,
        frame_size_read => dstout_loop_proc_U0_frame_size_read,
        dstout_dout => dstout_c_dout,
        dstout_empty_n => dstout_c_empty_n,
        dstout_read => dstout_loop_proc_U0_dstout_read,
        m_axi_dst_AWVALID => dstout_loop_proc_U0_m_axi_dst_AWVALID,
        m_axi_dst_AWREADY => m_axi_dst_AWREADY,
        m_axi_dst_AWADDR => dstout_loop_proc_U0_m_axi_dst_AWADDR,
        m_axi_dst_AWID => dstout_loop_proc_U0_m_axi_dst_AWID,
        m_axi_dst_AWLEN => dstout_loop_proc_U0_m_axi_dst_AWLEN,
        m_axi_dst_AWSIZE => dstout_loop_proc_U0_m_axi_dst_AWSIZE,
        m_axi_dst_AWBURST => dstout_loop_proc_U0_m_axi_dst_AWBURST,
        m_axi_dst_AWLOCK => dstout_loop_proc_U0_m_axi_dst_AWLOCK,
        m_axi_dst_AWCACHE => dstout_loop_proc_U0_m_axi_dst_AWCACHE,
        m_axi_dst_AWPROT => dstout_loop_proc_U0_m_axi_dst_AWPROT,
        m_axi_dst_AWQOS => dstout_loop_proc_U0_m_axi_dst_AWQOS,
        m_axi_dst_AWREGION => dstout_loop_proc_U0_m_axi_dst_AWREGION,
        m_axi_dst_AWUSER => dstout_loop_proc_U0_m_axi_dst_AWUSER,
        m_axi_dst_WVALID => dstout_loop_proc_U0_m_axi_dst_WVALID,
        m_axi_dst_WREADY => m_axi_dst_WREADY,
        m_axi_dst_WDATA => dstout_loop_proc_U0_m_axi_dst_WDATA,
        m_axi_dst_WSTRB => dstout_loop_proc_U0_m_axi_dst_WSTRB,
        m_axi_dst_WLAST => dstout_loop_proc_U0_m_axi_dst_WLAST,
        m_axi_dst_WID => dstout_loop_proc_U0_m_axi_dst_WID,
        m_axi_dst_WUSER => dstout_loop_proc_U0_m_axi_dst_WUSER,
        m_axi_dst_ARVALID => dstout_loop_proc_U0_m_axi_dst_ARVALID,
        m_axi_dst_ARREADY => ap_const_logic_0,
        m_axi_dst_ARADDR => dstout_loop_proc_U0_m_axi_dst_ARADDR,
        m_axi_dst_ARID => dstout_loop_proc_U0_m_axi_dst_ARID,
        m_axi_dst_ARLEN => dstout_loop_proc_U0_m_axi_dst_ARLEN,
        m_axi_dst_ARSIZE => dstout_loop_proc_U0_m_axi_dst_ARSIZE,
        m_axi_dst_ARBURST => dstout_loop_proc_U0_m_axi_dst_ARBURST,
        m_axi_dst_ARLOCK => dstout_loop_proc_U0_m_axi_dst_ARLOCK,
        m_axi_dst_ARCACHE => dstout_loop_proc_U0_m_axi_dst_ARCACHE,
        m_axi_dst_ARPROT => dstout_loop_proc_U0_m_axi_dst_ARPROT,
        m_axi_dst_ARQOS => dstout_loop_proc_U0_m_axi_dst_ARQOS,
        m_axi_dst_ARREGION => dstout_loop_proc_U0_m_axi_dst_ARREGION,
        m_axi_dst_ARUSER => dstout_loop_proc_U0_m_axi_dst_ARUSER,
        m_axi_dst_RVALID => ap_const_logic_0,
        m_axi_dst_RREADY => dstout_loop_proc_U0_m_axi_dst_RREADY,
        m_axi_dst_RDATA => ap_const_lv32_0,
        m_axi_dst_RLAST => ap_const_logic_0,
        m_axi_dst_RID => ap_const_lv1_0,
        m_axi_dst_RUSER => ap_const_lv1_0,
        m_axi_dst_RRESP => ap_const_lv2_0,
        m_axi_dst_BVALID => m_axi_dst_BVALID,
        m_axi_dst_BREADY => dstout_loop_proc_U0_m_axi_dst_BREADY,
        m_axi_dst_BRESP => m_axi_dst_BRESP,
        m_axi_dst_BID => m_axi_dst_BID,
        m_axi_dst_BUSER => m_axi_dst_BUSER);

    mapchip_draw_xsize_c_U : component mapchip_png_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_height_loop_entry6_U0_mapchip_draw_xsize_out_din,
        if_full_n => mapchip_draw_xsize_c_full_n,
        if_write => dataflow_in_loop_height_loop_entry6_U0_mapchip_draw_xsize_out_write,
        if_dout => mapchip_draw_xsize_c_dout,
        if_empty_n => mapchip_draw_xsize_c_empty_n,
        if_read => src_loop_proc_U0_mapchip_draw_xsize_read);

    mapchip_draw_xsize_c1_U : component mapchip_png_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_height_loop_entry6_U0_mapchip_draw_xsize_out1_din,
        if_full_n => mapchip_draw_xsize_c1_full_n,
        if_write => dataflow_in_loop_height_loop_entry6_U0_mapchip_draw_xsize_out1_write,
        if_dout => mapchip_draw_xsize_c1_dout,
        if_empty_n => mapchip_draw_xsize_c1_empty_n,
        if_read => dstin_loop_proc_U0_mapchip_draw_xsize_read);

    id_c_U : component mapchip_png_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_height_loop_entry6_U0_id_out_din,
        if_full_n => id_c_full_n,
        if_write => dataflow_in_loop_height_loop_entry6_U0_id_out_write,
        if_dout => id_c_dout,
        if_empty_n => id_c_empty_n,
        if_read => src_loop_proc_U0_id_read);

    mapchip_maxheight_c_U : component mapchip_png_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_height_loop_entry6_U0_mapchip_maxheight_out_din,
        if_full_n => mapchip_maxheight_c_full_n,
        if_write => dataflow_in_loop_height_loop_entry6_U0_mapchip_maxheight_out_write,
        if_dout => mapchip_maxheight_c_dout,
        if_empty_n => mapchip_maxheight_c_empty_n,
        if_read => src_loop_proc_U0_mapchip_maxheight_read);

    ystart_pos_c_U : component mapchip_png_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_height_loop_entry6_U0_ystart_pos_out_din,
        if_full_n => ystart_pos_c_full_n,
        if_write => dataflow_in_loop_height_loop_entry6_U0_ystart_pos_out_write,
        if_dout => ystart_pos_c_dout,
        if_empty_n => ystart_pos_c_empty_n,
        if_read => src_loop_proc_U0_ystart_pos_read);

    mapchip_maxwidth_c_U : component mapchip_png_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_height_loop_entry6_U0_mapchip_maxwidth_out_din,
        if_full_n => mapchip_maxwidth_c_full_n,
        if_write => dataflow_in_loop_height_loop_entry6_U0_mapchip_maxwidth_out_write,
        if_dout => mapchip_maxwidth_c_dout,
        if_empty_n => mapchip_maxwidth_c_empty_n,
        if_read => src_loop_proc_U0_mapchip_maxwidth_read);

    xstart_pos_c_U : component mapchip_png_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_height_loop_entry6_U0_xstart_pos_out_din,
        if_full_n => xstart_pos_c_full_n,
        if_write => dataflow_in_loop_height_loop_entry6_U0_xstart_pos_out_write,
        if_dout => xstart_pos_c_dout,
        if_empty_n => xstart_pos_c_empty_n,
        if_read => src_loop_proc_U0_xstart_pos_read);

    y_c_U : component mapchip_png_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_height_loop_entry6_U0_y_out_din,
        if_full_n => y_c_full_n,
        if_write => dataflow_in_loop_height_loop_entry6_U0_y_out_write,
        if_dout => y_c_dout,
        if_empty_n => y_c_empty_n,
        if_read => src_loop_proc_U0_y_read);

    y_c2_U : component mapchip_png_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_height_loop_entry6_U0_y_out2_din,
        if_full_n => y_c2_full_n,
        if_write => dataflow_in_loop_height_loop_entry6_U0_y_out2_write,
        if_dout => y_c2_dout,
        if_empty_n => y_c2_empty_n,
        if_read => dstin_loop_proc_U0_y_read);

    srcin_c_U : component mapchip_png_fifo_w64_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_height_loop_entry6_U0_srcin_out_din,
        if_full_n => srcin_c_full_n,
        if_write => dataflow_in_loop_height_loop_entry6_U0_srcin_out_write,
        if_dout => srcin_c_dout,
        if_empty_n => srcin_c_empty_n,
        if_read => src_loop_proc_U0_srcin_read);

    frame_size_c_U : component mapchip_png_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_height_loop_entry6_U0_frame_size_out_din,
        if_full_n => frame_size_c_full_n,
        if_write => dataflow_in_loop_height_loop_entry6_U0_frame_size_out_write,
        if_dout => frame_size_c_dout,
        if_empty_n => frame_size_c_empty_n,
        if_read => dstin_loop_proc_U0_frame_size_read);

    frame_size_c3_U : component mapchip_png_fifo_w32_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_height_loop_entry6_U0_frame_size_out3_din,
        if_full_n => frame_size_c3_full_n,
        if_write => dataflow_in_loop_height_loop_entry6_U0_frame_size_out3_write,
        if_dout => frame_size_c3_dout,
        if_empty_n => frame_size_c3_empty_n,
        if_read => dstout_loop_proc_U0_frame_size_read);

    dstin_c_U : component mapchip_png_fifo_w64_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_height_loop_entry6_U0_dstin_out_din,
        if_full_n => dstin_c_full_n,
        if_write => dataflow_in_loop_height_loop_entry6_U0_dstin_out_write,
        if_dout => dstin_c_dout,
        if_empty_n => dstin_c_empty_n,
        if_read => dstin_loop_proc_U0_dstin_read);

    alpha_c_U : component mapchip_png_fifo_w8_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_height_loop_entry6_U0_alpha_out_din,
        if_full_n => alpha_c_full_n,
        if_write => dataflow_in_loop_height_loop_entry6_U0_alpha_out_write,
        if_dout => alpha_c_dout,
        if_empty_n => alpha_c_empty_n,
        if_read => dstout_loop_proc_U0_alpha_read);

    dstout_c_U : component mapchip_png_fifo_w64_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_height_loop_entry6_U0_dstout_out_din,
        if_full_n => dstout_c_full_n,
        if_write => dataflow_in_loop_height_loop_entry6_U0_dstout_out_write,
        if_dout => dstout_c_dout,
        if_empty_n => dstout_c_empty_n,
        if_read => dstout_loop_proc_U0_dstout_read);

    mapchip_draw_xsize_c4_U : component mapchip_png_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => src_loop_proc_U0_mapchip_draw_xsize_out_din,
        if_full_n => mapchip_draw_xsize_c4_full_n,
        if_write => src_loop_proc_U0_mapchip_draw_xsize_out_write,
        if_dout => mapchip_draw_xsize_c4_dout,
        if_empty_n => mapchip_draw_xsize_c4_empty_n,
        if_read => dstout_loop_proc_U0_mapchip_draw_xsize_read);

    y_c5_U : component mapchip_png_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => src_loop_proc_U0_y_out_din,
        if_full_n => y_c5_full_n,
        if_write => src_loop_proc_U0_y_out_write,
        if_dout => y_c5_dout,
        if_empty_n => y_c5_empty_n,
        if_read => dstout_loop_proc_U0_y_read);





    ap_sync_reg_dataflow_in_loop_height_loop_entry6_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_dataflow_in_loop_height_loop_entry6_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_dataflow_in_loop_height_loop_entry6_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_dataflow_in_loop_height_loop_entry6_U0_ap_ready <= ap_sync_dataflow_in_loop_height_loop_entry6_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_dstin_loop_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_dstin_loop_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_dstin_loop_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_dstin_loop_proc_U0_ap_ready <= ap_sync_dstin_loop_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_src_loop_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_src_loop_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_src_loop_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_src_loop_proc_U0_ap_ready <= ap_sync_src_loop_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    ap_channel_done_dst_V <= dstin_loop_proc_U0_ap_done;
    ap_channel_done_src_V <= src_loop_proc_U0_ap_done;
    ap_done <= dstout_loop_proc_U0_ap_done;
    ap_idle <= (src_loop_proc_U0_ap_idle and (dst_V_t_empty_n xor ap_const_logic_1) and (src_V_t_empty_n xor ap_const_logic_1) and dstout_loop_proc_U0_ap_idle and dstin_loop_proc_U0_ap_idle and dataflow_in_loop_height_loop_entry6_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_continue <= ap_continue;
    ap_sync_dataflow_in_loop_height_loop_entry6_U0_ap_ready <= (dataflow_in_loop_height_loop_entry6_U0_ap_ready or ap_sync_reg_dataflow_in_loop_height_loop_entry6_U0_ap_ready);
    ap_sync_done <= dstout_loop_proc_U0_ap_done;
    ap_sync_dstin_loop_proc_U0_ap_ready <= (dstin_loop_proc_U0_ap_ready or ap_sync_reg_dstin_loop_proc_U0_ap_ready);
    ap_sync_ready <= (ap_sync_src_loop_proc_U0_ap_ready and ap_sync_dstin_loop_proc_U0_ap_ready and ap_sync_dataflow_in_loop_height_loop_entry6_U0_ap_ready);
    ap_sync_src_loop_proc_U0_ap_ready <= (src_loop_proc_U0_ap_ready or ap_sync_reg_src_loop_proc_U0_ap_ready);
    dataflow_in_loop_height_loop_entry6_U0_ap_continue <= ap_const_logic_1;
    dataflow_in_loop_height_loop_entry6_U0_ap_start <= ((ap_sync_reg_dataflow_in_loop_height_loop_entry6_U0_ap_ready xor ap_const_logic_1) and ap_start);
    dataflow_in_loop_height_loop_entry6_U0_start_full_n <= ap_const_logic_1;
    dataflow_in_loop_height_loop_entry6_U0_start_write <= ap_const_logic_0;
    dstin_loop_proc_U0_ap_continue <= dst_V_i_full_n;
    dstin_loop_proc_U0_ap_start <= ((ap_sync_reg_dstin_loop_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    dstin_loop_proc_U0_dst_V2_full_n <= dst_V_i_full_n;
    dstin_loop_proc_U0_start_full_n <= ap_const_logic_1;
    dstin_loop_proc_U0_start_write <= ap_const_logic_0;
    dstout_loop_proc_U0_ap_continue <= ap_continue;
    dstout_loop_proc_U0_ap_start <= (src_V_t_empty_n and dst_V_t_empty_n);
    dstout_loop_proc_U0_start_full_n <= ap_const_logic_1;
    dstout_loop_proc_U0_start_write <= ap_const_logic_0;
    m_axi_dst_ARADDR <= dstin_loop_proc_U0_m_axi_dst_ARADDR;
    m_axi_dst_ARBURST <= dstin_loop_proc_U0_m_axi_dst_ARBURST;
    m_axi_dst_ARCACHE <= dstin_loop_proc_U0_m_axi_dst_ARCACHE;
    m_axi_dst_ARID <= dstin_loop_proc_U0_m_axi_dst_ARID;
    m_axi_dst_ARLEN <= dstin_loop_proc_U0_m_axi_dst_ARLEN;
    m_axi_dst_ARLOCK <= dstin_loop_proc_U0_m_axi_dst_ARLOCK;
    m_axi_dst_ARPROT <= dstin_loop_proc_U0_m_axi_dst_ARPROT;
    m_axi_dst_ARQOS <= dstin_loop_proc_U0_m_axi_dst_ARQOS;
    m_axi_dst_ARREGION <= dstin_loop_proc_U0_m_axi_dst_ARREGION;
    m_axi_dst_ARSIZE <= dstin_loop_proc_U0_m_axi_dst_ARSIZE;
    m_axi_dst_ARUSER <= dstin_loop_proc_U0_m_axi_dst_ARUSER;
    m_axi_dst_ARVALID <= dstin_loop_proc_U0_m_axi_dst_ARVALID;
    m_axi_dst_AWADDR <= dstout_loop_proc_U0_m_axi_dst_AWADDR;
    m_axi_dst_AWBURST <= dstout_loop_proc_U0_m_axi_dst_AWBURST;
    m_axi_dst_AWCACHE <= dstout_loop_proc_U0_m_axi_dst_AWCACHE;
    m_axi_dst_AWID <= dstout_loop_proc_U0_m_axi_dst_AWID;
    m_axi_dst_AWLEN <= dstout_loop_proc_U0_m_axi_dst_AWLEN;
    m_axi_dst_AWLOCK <= dstout_loop_proc_U0_m_axi_dst_AWLOCK;
    m_axi_dst_AWPROT <= dstout_loop_proc_U0_m_axi_dst_AWPROT;
    m_axi_dst_AWQOS <= dstout_loop_proc_U0_m_axi_dst_AWQOS;
    m_axi_dst_AWREGION <= dstout_loop_proc_U0_m_axi_dst_AWREGION;
    m_axi_dst_AWSIZE <= dstout_loop_proc_U0_m_axi_dst_AWSIZE;
    m_axi_dst_AWUSER <= dstout_loop_proc_U0_m_axi_dst_AWUSER;
    m_axi_dst_AWVALID <= dstout_loop_proc_U0_m_axi_dst_AWVALID;
    m_axi_dst_BREADY <= dstout_loop_proc_U0_m_axi_dst_BREADY;
    m_axi_dst_RREADY <= dstin_loop_proc_U0_m_axi_dst_RREADY;
    m_axi_dst_WDATA <= dstout_loop_proc_U0_m_axi_dst_WDATA;
    m_axi_dst_WID <= dstout_loop_proc_U0_m_axi_dst_WID;
    m_axi_dst_WLAST <= dstout_loop_proc_U0_m_axi_dst_WLAST;
    m_axi_dst_WSTRB <= dstout_loop_proc_U0_m_axi_dst_WSTRB;
    m_axi_dst_WUSER <= dstout_loop_proc_U0_m_axi_dst_WUSER;
    m_axi_dst_WVALID <= dstout_loop_proc_U0_m_axi_dst_WVALID;
    m_axi_src_ARADDR <= src_loop_proc_U0_m_axi_src_ARADDR;
    m_axi_src_ARBURST <= src_loop_proc_U0_m_axi_src_ARBURST;
    m_axi_src_ARCACHE <= src_loop_proc_U0_m_axi_src_ARCACHE;
    m_axi_src_ARID <= src_loop_proc_U0_m_axi_src_ARID;
    m_axi_src_ARLEN <= src_loop_proc_U0_m_axi_src_ARLEN;
    m_axi_src_ARLOCK <= src_loop_proc_U0_m_axi_src_ARLOCK;
    m_axi_src_ARPROT <= src_loop_proc_U0_m_axi_src_ARPROT;
    m_axi_src_ARQOS <= src_loop_proc_U0_m_axi_src_ARQOS;
    m_axi_src_ARREGION <= src_loop_proc_U0_m_axi_src_ARREGION;
    m_axi_src_ARSIZE <= src_loop_proc_U0_m_axi_src_ARSIZE;
    m_axi_src_ARUSER <= src_loop_proc_U0_m_axi_src_ARUSER;
    m_axi_src_ARVALID <= src_loop_proc_U0_m_axi_src_ARVALID;
    m_axi_src_AWADDR <= ap_const_lv64_0;
    m_axi_src_AWBURST <= ap_const_lv2_0;
    m_axi_src_AWCACHE <= ap_const_lv4_0;
    m_axi_src_AWID <= ap_const_lv1_0;
    m_axi_src_AWLEN <= ap_const_lv32_0;
    m_axi_src_AWLOCK <= ap_const_lv2_0;
    m_axi_src_AWPROT <= ap_const_lv3_0;
    m_axi_src_AWQOS <= ap_const_lv4_0;
    m_axi_src_AWREGION <= ap_const_lv4_0;
    m_axi_src_AWSIZE <= ap_const_lv3_0;
    m_axi_src_AWUSER <= ap_const_lv1_0;
    m_axi_src_AWVALID <= ap_const_logic_0;
    m_axi_src_BREADY <= ap_const_logic_0;
    m_axi_src_RREADY <= src_loop_proc_U0_m_axi_src_RREADY;
    m_axi_src_WDATA <= ap_const_lv32_0;
    m_axi_src_WID <= ap_const_lv1_0;
    m_axi_src_WLAST <= ap_const_logic_0;
    m_axi_src_WSTRB <= ap_const_lv4_0;
    m_axi_src_WUSER <= ap_const_lv1_0;
    m_axi_src_WVALID <= ap_const_logic_0;
    src_loop_proc_U0_ap_continue <= src_V_i_full_n;
    src_loop_proc_U0_ap_start <= ((ap_sync_reg_src_loop_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    src_loop_proc_U0_src_V1_full_n <= src_V_i_full_n;
    src_loop_proc_U0_start_full_n <= ap_const_logic_1;
    src_loop_proc_U0_start_write <= ap_const_logic_0;
end behav;
