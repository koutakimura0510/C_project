// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="framebuffer_copy_framebuffer_copy,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.166000,HLS_SYN_LAT=67822,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=3187,HLS_SYN_LUT=2752,HLS_VERSION=2020_2}" *)

module framebuffer_copy (
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        m_axi_cp_AWVALID,
        m_axi_cp_AWREADY,
        m_axi_cp_AWADDR,
        m_axi_cp_AWID,
        m_axi_cp_AWLEN,
        m_axi_cp_AWSIZE,
        m_axi_cp_AWBURST,
        m_axi_cp_AWLOCK,
        m_axi_cp_AWCACHE,
        m_axi_cp_AWPROT,
        m_axi_cp_AWQOS,
        m_axi_cp_AWREGION,
        m_axi_cp_AWUSER,
        m_axi_cp_WVALID,
        m_axi_cp_WREADY,
        m_axi_cp_WDATA,
        m_axi_cp_WSTRB,
        m_axi_cp_WLAST,
        m_axi_cp_WID,
        m_axi_cp_WUSER,
        m_axi_cp_ARVALID,
        m_axi_cp_ARREADY,
        m_axi_cp_ARADDR,
        m_axi_cp_ARID,
        m_axi_cp_ARLEN,
        m_axi_cp_ARSIZE,
        m_axi_cp_ARBURST,
        m_axi_cp_ARLOCK,
        m_axi_cp_ARCACHE,
        m_axi_cp_ARPROT,
        m_axi_cp_ARQOS,
        m_axi_cp_ARREGION,
        m_axi_cp_ARUSER,
        m_axi_cp_RVALID,
        m_axi_cp_RREADY,
        m_axi_cp_RDATA,
        m_axi_cp_RLAST,
        m_axi_cp_RID,
        m_axi_cp_RUSER,
        m_axi_cp_RRESP,
        m_axi_cp_BVALID,
        m_axi_cp_BREADY,
        m_axi_cp_BRESP,
        m_axi_cp_BID,
        m_axi_cp_BUSER,
        m_axi_up_AWVALID,
        m_axi_up_AWREADY,
        m_axi_up_AWADDR,
        m_axi_up_AWID,
        m_axi_up_AWLEN,
        m_axi_up_AWSIZE,
        m_axi_up_AWBURST,
        m_axi_up_AWLOCK,
        m_axi_up_AWCACHE,
        m_axi_up_AWPROT,
        m_axi_up_AWQOS,
        m_axi_up_AWREGION,
        m_axi_up_AWUSER,
        m_axi_up_WVALID,
        m_axi_up_WREADY,
        m_axi_up_WDATA,
        m_axi_up_WSTRB,
        m_axi_up_WLAST,
        m_axi_up_WID,
        m_axi_up_WUSER,
        m_axi_up_ARVALID,
        m_axi_up_ARREADY,
        m_axi_up_ARADDR,
        m_axi_up_ARID,
        m_axi_up_ARLEN,
        m_axi_up_ARSIZE,
        m_axi_up_ARBURST,
        m_axi_up_ARLOCK,
        m_axi_up_ARCACHE,
        m_axi_up_ARPROT,
        m_axi_up_ARQOS,
        m_axi_up_ARREGION,
        m_axi_up_ARUSER,
        m_axi_up_RVALID,
        m_axi_up_RREADY,
        m_axi_up_RDATA,
        m_axi_up_RLAST,
        m_axi_up_RID,
        m_axi_up_RUSER,
        m_axi_up_RRESP,
        m_axi_up_BVALID,
        m_axi_up_BREADY,
        m_axi_up_BRESP,
        m_axi_up_BID,
        m_axi_up_BUSER
);

parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_CP_ID_WIDTH = 1;
parameter    C_M_AXI_CP_ADDR_WIDTH = 64;
parameter    C_M_AXI_CP_DATA_WIDTH = 32;
parameter    C_M_AXI_CP_AWUSER_WIDTH = 1;
parameter    C_M_AXI_CP_ARUSER_WIDTH = 1;
parameter    C_M_AXI_CP_WUSER_WIDTH = 1;
parameter    C_M_AXI_CP_RUSER_WIDTH = 1;
parameter    C_M_AXI_CP_BUSER_WIDTH = 1;
parameter    C_M_AXI_CP_USER_VALUE = 0;
parameter    C_M_AXI_CP_PROT_VALUE = 0;
parameter    C_M_AXI_CP_CACHE_VALUE = 3;
parameter    C_M_AXI_ID_WIDTH = 1;
parameter    C_M_AXI_ADDR_WIDTH = 64;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AWUSER_WIDTH = 1;
parameter    C_M_AXI_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WUSER_WIDTH = 1;
parameter    C_M_AXI_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUSER_WIDTH = 1;
parameter    C_M_AXI_UP_ID_WIDTH = 1;
parameter    C_M_AXI_UP_ADDR_WIDTH = 64;
parameter    C_M_AXI_UP_DATA_WIDTH = 32;
parameter    C_M_AXI_UP_AWUSER_WIDTH = 1;
parameter    C_M_AXI_UP_ARUSER_WIDTH = 1;
parameter    C_M_AXI_UP_WUSER_WIDTH = 1;
parameter    C_M_AXI_UP_RUSER_WIDTH = 1;
parameter    C_M_AXI_UP_BUSER_WIDTH = 1;
parameter    C_M_AXI_UP_USER_VALUE = 0;
parameter    C_M_AXI_UP_PROT_VALUE = 0;
parameter    C_M_AXI_UP_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_CP_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_UP_WSTRB_WIDTH = (32 / 8);

input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
output   m_axi_cp_AWVALID;
input   m_axi_cp_AWREADY;
output  [C_M_AXI_CP_ADDR_WIDTH - 1:0] m_axi_cp_AWADDR;
output  [C_M_AXI_CP_ID_WIDTH - 1:0] m_axi_cp_AWID;
output  [7:0] m_axi_cp_AWLEN;
output  [2:0] m_axi_cp_AWSIZE;
output  [1:0] m_axi_cp_AWBURST;
output  [1:0] m_axi_cp_AWLOCK;
output  [3:0] m_axi_cp_AWCACHE;
output  [2:0] m_axi_cp_AWPROT;
output  [3:0] m_axi_cp_AWQOS;
output  [3:0] m_axi_cp_AWREGION;
output  [C_M_AXI_CP_AWUSER_WIDTH - 1:0] m_axi_cp_AWUSER;
output   m_axi_cp_WVALID;
input   m_axi_cp_WREADY;
output  [C_M_AXI_CP_DATA_WIDTH - 1:0] m_axi_cp_WDATA;
output  [C_M_AXI_CP_WSTRB_WIDTH - 1:0] m_axi_cp_WSTRB;
output   m_axi_cp_WLAST;
output  [C_M_AXI_CP_ID_WIDTH - 1:0] m_axi_cp_WID;
output  [C_M_AXI_CP_WUSER_WIDTH - 1:0] m_axi_cp_WUSER;
output   m_axi_cp_ARVALID;
input   m_axi_cp_ARREADY;
output  [C_M_AXI_CP_ADDR_WIDTH - 1:0] m_axi_cp_ARADDR;
output  [C_M_AXI_CP_ID_WIDTH - 1:0] m_axi_cp_ARID;
output  [7:0] m_axi_cp_ARLEN;
output  [2:0] m_axi_cp_ARSIZE;
output  [1:0] m_axi_cp_ARBURST;
output  [1:0] m_axi_cp_ARLOCK;
output  [3:0] m_axi_cp_ARCACHE;
output  [2:0] m_axi_cp_ARPROT;
output  [3:0] m_axi_cp_ARQOS;
output  [3:0] m_axi_cp_ARREGION;
output  [C_M_AXI_CP_ARUSER_WIDTH - 1:0] m_axi_cp_ARUSER;
input   m_axi_cp_RVALID;
output   m_axi_cp_RREADY;
input  [C_M_AXI_CP_DATA_WIDTH - 1:0] m_axi_cp_RDATA;
input   m_axi_cp_RLAST;
input  [C_M_AXI_CP_ID_WIDTH - 1:0] m_axi_cp_RID;
input  [C_M_AXI_CP_RUSER_WIDTH - 1:0] m_axi_cp_RUSER;
input  [1:0] m_axi_cp_RRESP;
input   m_axi_cp_BVALID;
output   m_axi_cp_BREADY;
input  [1:0] m_axi_cp_BRESP;
input  [C_M_AXI_CP_ID_WIDTH - 1:0] m_axi_cp_BID;
input  [C_M_AXI_CP_BUSER_WIDTH - 1:0] m_axi_cp_BUSER;
output   m_axi_up_AWVALID;
input   m_axi_up_AWREADY;
output  [C_M_AXI_UP_ADDR_WIDTH - 1:0] m_axi_up_AWADDR;
output  [C_M_AXI_UP_ID_WIDTH - 1:0] m_axi_up_AWID;
output  [7:0] m_axi_up_AWLEN;
output  [2:0] m_axi_up_AWSIZE;
output  [1:0] m_axi_up_AWBURST;
output  [1:0] m_axi_up_AWLOCK;
output  [3:0] m_axi_up_AWCACHE;
output  [2:0] m_axi_up_AWPROT;
output  [3:0] m_axi_up_AWQOS;
output  [3:0] m_axi_up_AWREGION;
output  [C_M_AXI_UP_AWUSER_WIDTH - 1:0] m_axi_up_AWUSER;
output   m_axi_up_WVALID;
input   m_axi_up_WREADY;
output  [C_M_AXI_UP_DATA_WIDTH - 1:0] m_axi_up_WDATA;
output  [C_M_AXI_UP_WSTRB_WIDTH - 1:0] m_axi_up_WSTRB;
output   m_axi_up_WLAST;
output  [C_M_AXI_UP_ID_WIDTH - 1:0] m_axi_up_WID;
output  [C_M_AXI_UP_WUSER_WIDTH - 1:0] m_axi_up_WUSER;
output   m_axi_up_ARVALID;
input   m_axi_up_ARREADY;
output  [C_M_AXI_UP_ADDR_WIDTH - 1:0] m_axi_up_ARADDR;
output  [C_M_AXI_UP_ID_WIDTH - 1:0] m_axi_up_ARID;
output  [7:0] m_axi_up_ARLEN;
output  [2:0] m_axi_up_ARSIZE;
output  [1:0] m_axi_up_ARBURST;
output  [1:0] m_axi_up_ARLOCK;
output  [3:0] m_axi_up_ARCACHE;
output  [2:0] m_axi_up_ARPROT;
output  [3:0] m_axi_up_ARQOS;
output  [3:0] m_axi_up_ARREGION;
output  [C_M_AXI_UP_ARUSER_WIDTH - 1:0] m_axi_up_ARUSER;
input   m_axi_up_RVALID;
output   m_axi_up_RREADY;
input  [C_M_AXI_UP_DATA_WIDTH - 1:0] m_axi_up_RDATA;
input   m_axi_up_RLAST;
input  [C_M_AXI_UP_ID_WIDTH - 1:0] m_axi_up_RID;
input  [C_M_AXI_UP_RUSER_WIDTH - 1:0] m_axi_up_RUSER;
input  [1:0] m_axi_up_RRESP;
input   m_axi_up_BVALID;
output   m_axi_up_BREADY;
input  [1:0] m_axi_up_BRESP;
input  [C_M_AXI_UP_ID_WIDTH - 1:0] m_axi_up_BID;
input  [C_M_AXI_UP_BUSER_WIDTH - 1:0] m_axi_up_BUSER;

 reg    ap_rst_n_inv;
wire   [63:0] copy;
wire   [63:0] update;
wire   [31:0] width;
wire   [31:0] height;
wire   [31:0] display_xsize;
wire    ap_start;
reg    ap_ready;
reg    ap_done;
reg    ap_idle;
wire    cp_AWREADY;
wire    cp_WREADY;
wire    cp_ARREADY;
wire    cp_RVALID;
wire   [31:0] cp_RDATA;
wire    cp_RLAST;
wire   [0:0] cp_RID;
wire   [0:0] cp_RUSER;
wire   [1:0] cp_RRESP;
wire    cp_BVALID;
wire   [1:0] cp_BRESP;
wire   [0:0] cp_BID;
wire   [0:0] cp_BUSER;
wire    up_AWREADY;
wire    up_WREADY;
wire    up_ARREADY;
wire    up_RVALID;
wire   [31:0] up_RDATA;
wire    up_RLAST;
wire   [0:0] up_RID;
wire   [0:0] up_RUSER;
wire   [1:0] up_RRESP;
wire    up_BVALID;
wire   [1:0] up_BRESP;
wire   [0:0] up_BID;
wire   [0:0] up_BUSER;
wire    dataflow_in_loop_height_loop_U0_m_axi_cp_AWVALID;
wire   [63:0] dataflow_in_loop_height_loop_U0_m_axi_cp_AWADDR;
wire   [0:0] dataflow_in_loop_height_loop_U0_m_axi_cp_AWID;
wire   [31:0] dataflow_in_loop_height_loop_U0_m_axi_cp_AWLEN;
wire   [2:0] dataflow_in_loop_height_loop_U0_m_axi_cp_AWSIZE;
wire   [1:0] dataflow_in_loop_height_loop_U0_m_axi_cp_AWBURST;
wire   [1:0] dataflow_in_loop_height_loop_U0_m_axi_cp_AWLOCK;
wire   [3:0] dataflow_in_loop_height_loop_U0_m_axi_cp_AWCACHE;
wire   [2:0] dataflow_in_loop_height_loop_U0_m_axi_cp_AWPROT;
wire   [3:0] dataflow_in_loop_height_loop_U0_m_axi_cp_AWQOS;
wire   [3:0] dataflow_in_loop_height_loop_U0_m_axi_cp_AWREGION;
wire   [0:0] dataflow_in_loop_height_loop_U0_m_axi_cp_AWUSER;
wire    dataflow_in_loop_height_loop_U0_m_axi_cp_WVALID;
wire   [31:0] dataflow_in_loop_height_loop_U0_m_axi_cp_WDATA;
wire   [3:0] dataflow_in_loop_height_loop_U0_m_axi_cp_WSTRB;
wire    dataflow_in_loop_height_loop_U0_m_axi_cp_WLAST;
wire   [0:0] dataflow_in_loop_height_loop_U0_m_axi_cp_WID;
wire   [0:0] dataflow_in_loop_height_loop_U0_m_axi_cp_WUSER;
wire    dataflow_in_loop_height_loop_U0_m_axi_cp_ARVALID;
wire   [63:0] dataflow_in_loop_height_loop_U0_m_axi_cp_ARADDR;
wire   [0:0] dataflow_in_loop_height_loop_U0_m_axi_cp_ARID;
wire   [31:0] dataflow_in_loop_height_loop_U0_m_axi_cp_ARLEN;
wire   [2:0] dataflow_in_loop_height_loop_U0_m_axi_cp_ARSIZE;
wire   [1:0] dataflow_in_loop_height_loop_U0_m_axi_cp_ARBURST;
wire   [1:0] dataflow_in_loop_height_loop_U0_m_axi_cp_ARLOCK;
wire   [3:0] dataflow_in_loop_height_loop_U0_m_axi_cp_ARCACHE;
wire   [2:0] dataflow_in_loop_height_loop_U0_m_axi_cp_ARPROT;
wire   [3:0] dataflow_in_loop_height_loop_U0_m_axi_cp_ARQOS;
wire   [3:0] dataflow_in_loop_height_loop_U0_m_axi_cp_ARREGION;
wire   [0:0] dataflow_in_loop_height_loop_U0_m_axi_cp_ARUSER;
wire    dataflow_in_loop_height_loop_U0_m_axi_cp_RREADY;
wire    dataflow_in_loop_height_loop_U0_m_axi_cp_BREADY;
wire    dataflow_in_loop_height_loop_U0_m_axi_up_AWVALID;
wire   [63:0] dataflow_in_loop_height_loop_U0_m_axi_up_AWADDR;
wire   [0:0] dataflow_in_loop_height_loop_U0_m_axi_up_AWID;
wire   [31:0] dataflow_in_loop_height_loop_U0_m_axi_up_AWLEN;
wire   [2:0] dataflow_in_loop_height_loop_U0_m_axi_up_AWSIZE;
wire   [1:0] dataflow_in_loop_height_loop_U0_m_axi_up_AWBURST;
wire   [1:0] dataflow_in_loop_height_loop_U0_m_axi_up_AWLOCK;
wire   [3:0] dataflow_in_loop_height_loop_U0_m_axi_up_AWCACHE;
wire   [2:0] dataflow_in_loop_height_loop_U0_m_axi_up_AWPROT;
wire   [3:0] dataflow_in_loop_height_loop_U0_m_axi_up_AWQOS;
wire   [3:0] dataflow_in_loop_height_loop_U0_m_axi_up_AWREGION;
wire   [0:0] dataflow_in_loop_height_loop_U0_m_axi_up_AWUSER;
wire    dataflow_in_loop_height_loop_U0_m_axi_up_WVALID;
wire   [31:0] dataflow_in_loop_height_loop_U0_m_axi_up_WDATA;
wire   [3:0] dataflow_in_loop_height_loop_U0_m_axi_up_WSTRB;
wire    dataflow_in_loop_height_loop_U0_m_axi_up_WLAST;
wire   [0:0] dataflow_in_loop_height_loop_U0_m_axi_up_WID;
wire   [0:0] dataflow_in_loop_height_loop_U0_m_axi_up_WUSER;
wire    dataflow_in_loop_height_loop_U0_m_axi_up_ARVALID;
wire   [63:0] dataflow_in_loop_height_loop_U0_m_axi_up_ARADDR;
wire   [0:0] dataflow_in_loop_height_loop_U0_m_axi_up_ARID;
wire   [31:0] dataflow_in_loop_height_loop_U0_m_axi_up_ARLEN;
wire   [2:0] dataflow_in_loop_height_loop_U0_m_axi_up_ARSIZE;
wire   [1:0] dataflow_in_loop_height_loop_U0_m_axi_up_ARBURST;
wire   [1:0] dataflow_in_loop_height_loop_U0_m_axi_up_ARLOCK;
wire   [3:0] dataflow_in_loop_height_loop_U0_m_axi_up_ARCACHE;
wire   [2:0] dataflow_in_loop_height_loop_U0_m_axi_up_ARPROT;
wire   [3:0] dataflow_in_loop_height_loop_U0_m_axi_up_ARQOS;
wire   [3:0] dataflow_in_loop_height_loop_U0_m_axi_up_ARREGION;
wire   [0:0] dataflow_in_loop_height_loop_U0_m_axi_up_ARUSER;
wire    dataflow_in_loop_height_loop_U0_m_axi_up_RREADY;
wire    dataflow_in_loop_height_loop_U0_m_axi_up_BREADY;
wire    dataflow_in_loop_height_loop_U0_ap_start;
wire    dataflow_in_loop_height_loop_U0_ap_done;
wire    dataflow_in_loop_height_loop_U0_ap_ready;
wire    dataflow_in_loop_height_loop_U0_ap_idle;
wire    dataflow_in_loop_height_loop_U0_ap_continue;
wire    ap_sync_continue;
wire    ap_sync_done;
wire    ap_sync_ready;
reg   [31:0] loop_dataflow_input_count;
reg   [31:0] loop_dataflow_output_count;
wire   [31:0] bound_minus_1;
wire    dataflow_in_loop_height_loop_U0_start_full_n;
wire    dataflow_in_loop_height_loop_U0_start_write;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 loop_dataflow_input_count = 32'd0;
#0 loop_dataflow_output_count = 32'd0;
end

framebuffer_copy_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .copy(copy),
    .update(update),
    .width(width),
    .height(height),
    .display_xsize(display_xsize),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

framebuffer_copy_cp_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 32 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_CP_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_CP_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_CP_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_CP_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_CP_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_CP_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_CP_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_CP_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_CP_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_CP_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_CP_CACHE_VALUE ))
cp_m_axi_U(
    .AWVALID(m_axi_cp_AWVALID),
    .AWREADY(m_axi_cp_AWREADY),
    .AWADDR(m_axi_cp_AWADDR),
    .AWID(m_axi_cp_AWID),
    .AWLEN(m_axi_cp_AWLEN),
    .AWSIZE(m_axi_cp_AWSIZE),
    .AWBURST(m_axi_cp_AWBURST),
    .AWLOCK(m_axi_cp_AWLOCK),
    .AWCACHE(m_axi_cp_AWCACHE),
    .AWPROT(m_axi_cp_AWPROT),
    .AWQOS(m_axi_cp_AWQOS),
    .AWREGION(m_axi_cp_AWREGION),
    .AWUSER(m_axi_cp_AWUSER),
    .WVALID(m_axi_cp_WVALID),
    .WREADY(m_axi_cp_WREADY),
    .WDATA(m_axi_cp_WDATA),
    .WSTRB(m_axi_cp_WSTRB),
    .WLAST(m_axi_cp_WLAST),
    .WID(m_axi_cp_WID),
    .WUSER(m_axi_cp_WUSER),
    .ARVALID(m_axi_cp_ARVALID),
    .ARREADY(m_axi_cp_ARREADY),
    .ARADDR(m_axi_cp_ARADDR),
    .ARID(m_axi_cp_ARID),
    .ARLEN(m_axi_cp_ARLEN),
    .ARSIZE(m_axi_cp_ARSIZE),
    .ARBURST(m_axi_cp_ARBURST),
    .ARLOCK(m_axi_cp_ARLOCK),
    .ARCACHE(m_axi_cp_ARCACHE),
    .ARPROT(m_axi_cp_ARPROT),
    .ARQOS(m_axi_cp_ARQOS),
    .ARREGION(m_axi_cp_ARREGION),
    .ARUSER(m_axi_cp_ARUSER),
    .RVALID(m_axi_cp_RVALID),
    .RREADY(m_axi_cp_RREADY),
    .RDATA(m_axi_cp_RDATA),
    .RLAST(m_axi_cp_RLAST),
    .RID(m_axi_cp_RID),
    .RUSER(m_axi_cp_RUSER),
    .RRESP(m_axi_cp_RRESP),
    .BVALID(m_axi_cp_BVALID),
    .BREADY(m_axi_cp_BREADY),
    .BRESP(m_axi_cp_BRESP),
    .BID(m_axi_cp_BID),
    .BUSER(m_axi_cp_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(dataflow_in_loop_height_loop_U0_m_axi_cp_ARVALID),
    .I_ARREADY(cp_ARREADY),
    .I_ARADDR(dataflow_in_loop_height_loop_U0_m_axi_cp_ARADDR),
    .I_ARID(dataflow_in_loop_height_loop_U0_m_axi_cp_ARID),
    .I_ARLEN(dataflow_in_loop_height_loop_U0_m_axi_cp_ARLEN),
    .I_ARSIZE(dataflow_in_loop_height_loop_U0_m_axi_cp_ARSIZE),
    .I_ARLOCK(dataflow_in_loop_height_loop_U0_m_axi_cp_ARLOCK),
    .I_ARCACHE(dataflow_in_loop_height_loop_U0_m_axi_cp_ARCACHE),
    .I_ARQOS(dataflow_in_loop_height_loop_U0_m_axi_cp_ARQOS),
    .I_ARPROT(dataflow_in_loop_height_loop_U0_m_axi_cp_ARPROT),
    .I_ARUSER(dataflow_in_loop_height_loop_U0_m_axi_cp_ARUSER),
    .I_ARBURST(dataflow_in_loop_height_loop_U0_m_axi_cp_ARBURST),
    .I_ARREGION(dataflow_in_loop_height_loop_U0_m_axi_cp_ARREGION),
    .I_RVALID(cp_RVALID),
    .I_RREADY(dataflow_in_loop_height_loop_U0_m_axi_cp_RREADY),
    .I_RDATA(cp_RDATA),
    .I_RID(cp_RID),
    .I_RUSER(cp_RUSER),
    .I_RRESP(cp_RRESP),
    .I_RLAST(cp_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(cp_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(cp_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(cp_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(cp_BRESP),
    .I_BID(cp_BID),
    .I_BUSER(cp_BUSER)
);

framebuffer_copy_up_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 32 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_UP_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_UP_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_UP_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_UP_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_UP_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_UP_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_UP_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_UP_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_UP_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_UP_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_UP_CACHE_VALUE ))
up_m_axi_U(
    .AWVALID(m_axi_up_AWVALID),
    .AWREADY(m_axi_up_AWREADY),
    .AWADDR(m_axi_up_AWADDR),
    .AWID(m_axi_up_AWID),
    .AWLEN(m_axi_up_AWLEN),
    .AWSIZE(m_axi_up_AWSIZE),
    .AWBURST(m_axi_up_AWBURST),
    .AWLOCK(m_axi_up_AWLOCK),
    .AWCACHE(m_axi_up_AWCACHE),
    .AWPROT(m_axi_up_AWPROT),
    .AWQOS(m_axi_up_AWQOS),
    .AWREGION(m_axi_up_AWREGION),
    .AWUSER(m_axi_up_AWUSER),
    .WVALID(m_axi_up_WVALID),
    .WREADY(m_axi_up_WREADY),
    .WDATA(m_axi_up_WDATA),
    .WSTRB(m_axi_up_WSTRB),
    .WLAST(m_axi_up_WLAST),
    .WID(m_axi_up_WID),
    .WUSER(m_axi_up_WUSER),
    .ARVALID(m_axi_up_ARVALID),
    .ARREADY(m_axi_up_ARREADY),
    .ARADDR(m_axi_up_ARADDR),
    .ARID(m_axi_up_ARID),
    .ARLEN(m_axi_up_ARLEN),
    .ARSIZE(m_axi_up_ARSIZE),
    .ARBURST(m_axi_up_ARBURST),
    .ARLOCK(m_axi_up_ARLOCK),
    .ARCACHE(m_axi_up_ARCACHE),
    .ARPROT(m_axi_up_ARPROT),
    .ARQOS(m_axi_up_ARQOS),
    .ARREGION(m_axi_up_ARREGION),
    .ARUSER(m_axi_up_ARUSER),
    .RVALID(m_axi_up_RVALID),
    .RREADY(m_axi_up_RREADY),
    .RDATA(m_axi_up_RDATA),
    .RLAST(m_axi_up_RLAST),
    .RID(m_axi_up_RID),
    .RUSER(m_axi_up_RUSER),
    .RRESP(m_axi_up_RRESP),
    .BVALID(m_axi_up_BVALID),
    .BREADY(m_axi_up_BREADY),
    .BRESP(m_axi_up_BRESP),
    .BID(m_axi_up_BID),
    .BUSER(m_axi_up_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(up_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(up_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(up_RDATA),
    .I_RID(up_RID),
    .I_RUSER(up_RUSER),
    .I_RRESP(up_RRESP),
    .I_RLAST(up_RLAST),
    .I_AWVALID(dataflow_in_loop_height_loop_U0_m_axi_up_AWVALID),
    .I_AWREADY(up_AWREADY),
    .I_AWADDR(dataflow_in_loop_height_loop_U0_m_axi_up_AWADDR),
    .I_AWID(dataflow_in_loop_height_loop_U0_m_axi_up_AWID),
    .I_AWLEN(dataflow_in_loop_height_loop_U0_m_axi_up_AWLEN),
    .I_AWSIZE(dataflow_in_loop_height_loop_U0_m_axi_up_AWSIZE),
    .I_AWLOCK(dataflow_in_loop_height_loop_U0_m_axi_up_AWLOCK),
    .I_AWCACHE(dataflow_in_loop_height_loop_U0_m_axi_up_AWCACHE),
    .I_AWQOS(dataflow_in_loop_height_loop_U0_m_axi_up_AWQOS),
    .I_AWPROT(dataflow_in_loop_height_loop_U0_m_axi_up_AWPROT),
    .I_AWUSER(dataflow_in_loop_height_loop_U0_m_axi_up_AWUSER),
    .I_AWBURST(dataflow_in_loop_height_loop_U0_m_axi_up_AWBURST),
    .I_AWREGION(dataflow_in_loop_height_loop_U0_m_axi_up_AWREGION),
    .I_WVALID(dataflow_in_loop_height_loop_U0_m_axi_up_WVALID),
    .I_WREADY(up_WREADY),
    .I_WDATA(dataflow_in_loop_height_loop_U0_m_axi_up_WDATA),
    .I_WID(dataflow_in_loop_height_loop_U0_m_axi_up_WID),
    .I_WUSER(dataflow_in_loop_height_loop_U0_m_axi_up_WUSER),
    .I_WLAST(dataflow_in_loop_height_loop_U0_m_axi_up_WLAST),
    .I_WSTRB(dataflow_in_loop_height_loop_U0_m_axi_up_WSTRB),
    .I_BVALID(up_BVALID),
    .I_BREADY(dataflow_in_loop_height_loop_U0_m_axi_up_BREADY),
    .I_BRESP(up_BRESP),
    .I_BID(up_BID),
    .I_BUSER(up_BUSER)
);

framebuffer_copy_dataflow_in_loop_height_loop dataflow_in_loop_height_loop_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .width(width),
    .y(loop_dataflow_input_count),
    .display_xsize(display_xsize),
    .copy(copy),
    .m_axi_cp_AWVALID(dataflow_in_loop_height_loop_U0_m_axi_cp_AWVALID),
    .m_axi_cp_AWREADY(1'b0),
    .m_axi_cp_AWADDR(dataflow_in_loop_height_loop_U0_m_axi_cp_AWADDR),
    .m_axi_cp_AWID(dataflow_in_loop_height_loop_U0_m_axi_cp_AWID),
    .m_axi_cp_AWLEN(dataflow_in_loop_height_loop_U0_m_axi_cp_AWLEN),
    .m_axi_cp_AWSIZE(dataflow_in_loop_height_loop_U0_m_axi_cp_AWSIZE),
    .m_axi_cp_AWBURST(dataflow_in_loop_height_loop_U0_m_axi_cp_AWBURST),
    .m_axi_cp_AWLOCK(dataflow_in_loop_height_loop_U0_m_axi_cp_AWLOCK),
    .m_axi_cp_AWCACHE(dataflow_in_loop_height_loop_U0_m_axi_cp_AWCACHE),
    .m_axi_cp_AWPROT(dataflow_in_loop_height_loop_U0_m_axi_cp_AWPROT),
    .m_axi_cp_AWQOS(dataflow_in_loop_height_loop_U0_m_axi_cp_AWQOS),
    .m_axi_cp_AWREGION(dataflow_in_loop_height_loop_U0_m_axi_cp_AWREGION),
    .m_axi_cp_AWUSER(dataflow_in_loop_height_loop_U0_m_axi_cp_AWUSER),
    .m_axi_cp_WVALID(dataflow_in_loop_height_loop_U0_m_axi_cp_WVALID),
    .m_axi_cp_WREADY(1'b0),
    .m_axi_cp_WDATA(dataflow_in_loop_height_loop_U0_m_axi_cp_WDATA),
    .m_axi_cp_WSTRB(dataflow_in_loop_height_loop_U0_m_axi_cp_WSTRB),
    .m_axi_cp_WLAST(dataflow_in_loop_height_loop_U0_m_axi_cp_WLAST),
    .m_axi_cp_WID(dataflow_in_loop_height_loop_U0_m_axi_cp_WID),
    .m_axi_cp_WUSER(dataflow_in_loop_height_loop_U0_m_axi_cp_WUSER),
    .m_axi_cp_ARVALID(dataflow_in_loop_height_loop_U0_m_axi_cp_ARVALID),
    .m_axi_cp_ARREADY(cp_ARREADY),
    .m_axi_cp_ARADDR(dataflow_in_loop_height_loop_U0_m_axi_cp_ARADDR),
    .m_axi_cp_ARID(dataflow_in_loop_height_loop_U0_m_axi_cp_ARID),
    .m_axi_cp_ARLEN(dataflow_in_loop_height_loop_U0_m_axi_cp_ARLEN),
    .m_axi_cp_ARSIZE(dataflow_in_loop_height_loop_U0_m_axi_cp_ARSIZE),
    .m_axi_cp_ARBURST(dataflow_in_loop_height_loop_U0_m_axi_cp_ARBURST),
    .m_axi_cp_ARLOCK(dataflow_in_loop_height_loop_U0_m_axi_cp_ARLOCK),
    .m_axi_cp_ARCACHE(dataflow_in_loop_height_loop_U0_m_axi_cp_ARCACHE),
    .m_axi_cp_ARPROT(dataflow_in_loop_height_loop_U0_m_axi_cp_ARPROT),
    .m_axi_cp_ARQOS(dataflow_in_loop_height_loop_U0_m_axi_cp_ARQOS),
    .m_axi_cp_ARREGION(dataflow_in_loop_height_loop_U0_m_axi_cp_ARREGION),
    .m_axi_cp_ARUSER(dataflow_in_loop_height_loop_U0_m_axi_cp_ARUSER),
    .m_axi_cp_RVALID(cp_RVALID),
    .m_axi_cp_RREADY(dataflow_in_loop_height_loop_U0_m_axi_cp_RREADY),
    .m_axi_cp_RDATA(cp_RDATA),
    .m_axi_cp_RLAST(cp_RLAST),
    .m_axi_cp_RID(cp_RID),
    .m_axi_cp_RUSER(cp_RUSER),
    .m_axi_cp_RRESP(cp_RRESP),
    .m_axi_cp_BVALID(1'b0),
    .m_axi_cp_BREADY(dataflow_in_loop_height_loop_U0_m_axi_cp_BREADY),
    .m_axi_cp_BRESP(2'd0),
    .m_axi_cp_BID(1'd0),
    .m_axi_cp_BUSER(1'd0),
    .update(update),
    .m_axi_up_AWVALID(dataflow_in_loop_height_loop_U0_m_axi_up_AWVALID),
    .m_axi_up_AWREADY(up_AWREADY),
    .m_axi_up_AWADDR(dataflow_in_loop_height_loop_U0_m_axi_up_AWADDR),
    .m_axi_up_AWID(dataflow_in_loop_height_loop_U0_m_axi_up_AWID),
    .m_axi_up_AWLEN(dataflow_in_loop_height_loop_U0_m_axi_up_AWLEN),
    .m_axi_up_AWSIZE(dataflow_in_loop_height_loop_U0_m_axi_up_AWSIZE),
    .m_axi_up_AWBURST(dataflow_in_loop_height_loop_U0_m_axi_up_AWBURST),
    .m_axi_up_AWLOCK(dataflow_in_loop_height_loop_U0_m_axi_up_AWLOCK),
    .m_axi_up_AWCACHE(dataflow_in_loop_height_loop_U0_m_axi_up_AWCACHE),
    .m_axi_up_AWPROT(dataflow_in_loop_height_loop_U0_m_axi_up_AWPROT),
    .m_axi_up_AWQOS(dataflow_in_loop_height_loop_U0_m_axi_up_AWQOS),
    .m_axi_up_AWREGION(dataflow_in_loop_height_loop_U0_m_axi_up_AWREGION),
    .m_axi_up_AWUSER(dataflow_in_loop_height_loop_U0_m_axi_up_AWUSER),
    .m_axi_up_WVALID(dataflow_in_loop_height_loop_U0_m_axi_up_WVALID),
    .m_axi_up_WREADY(up_WREADY),
    .m_axi_up_WDATA(dataflow_in_loop_height_loop_U0_m_axi_up_WDATA),
    .m_axi_up_WSTRB(dataflow_in_loop_height_loop_U0_m_axi_up_WSTRB),
    .m_axi_up_WLAST(dataflow_in_loop_height_loop_U0_m_axi_up_WLAST),
    .m_axi_up_WID(dataflow_in_loop_height_loop_U0_m_axi_up_WID),
    .m_axi_up_WUSER(dataflow_in_loop_height_loop_U0_m_axi_up_WUSER),
    .m_axi_up_ARVALID(dataflow_in_loop_height_loop_U0_m_axi_up_ARVALID),
    .m_axi_up_ARREADY(1'b0),
    .m_axi_up_ARADDR(dataflow_in_loop_height_loop_U0_m_axi_up_ARADDR),
    .m_axi_up_ARID(dataflow_in_loop_height_loop_U0_m_axi_up_ARID),
    .m_axi_up_ARLEN(dataflow_in_loop_height_loop_U0_m_axi_up_ARLEN),
    .m_axi_up_ARSIZE(dataflow_in_loop_height_loop_U0_m_axi_up_ARSIZE),
    .m_axi_up_ARBURST(dataflow_in_loop_height_loop_U0_m_axi_up_ARBURST),
    .m_axi_up_ARLOCK(dataflow_in_loop_height_loop_U0_m_axi_up_ARLOCK),
    .m_axi_up_ARCACHE(dataflow_in_loop_height_loop_U0_m_axi_up_ARCACHE),
    .m_axi_up_ARPROT(dataflow_in_loop_height_loop_U0_m_axi_up_ARPROT),
    .m_axi_up_ARQOS(dataflow_in_loop_height_loop_U0_m_axi_up_ARQOS),
    .m_axi_up_ARREGION(dataflow_in_loop_height_loop_U0_m_axi_up_ARREGION),
    .m_axi_up_ARUSER(dataflow_in_loop_height_loop_U0_m_axi_up_ARUSER),
    .m_axi_up_RVALID(1'b0),
    .m_axi_up_RREADY(dataflow_in_loop_height_loop_U0_m_axi_up_RREADY),
    .m_axi_up_RDATA(32'd0),
    .m_axi_up_RLAST(1'b0),
    .m_axi_up_RID(1'd0),
    .m_axi_up_RUSER(1'd0),
    .m_axi_up_RRESP(2'd0),
    .m_axi_up_BVALID(up_BVALID),
    .m_axi_up_BREADY(dataflow_in_loop_height_loop_U0_m_axi_up_BREADY),
    .m_axi_up_BRESP(up_BRESP),
    .m_axi_up_BID(up_BID),
    .m_axi_up_BUSER(up_BUSER),
    .width_ap_vld(1'b1),
    .y_ap_vld(1'b0),
    .display_xsize_ap_vld(1'b1),
    .copy_ap_vld(1'b1),
    .update_ap_vld(1'b1),
    .ap_start(dataflow_in_loop_height_loop_U0_ap_start),
    .ap_done(dataflow_in_loop_height_loop_U0_ap_done),
    .ap_ready(dataflow_in_loop_height_loop_U0_ap_ready),
    .ap_idle(dataflow_in_loop_height_loop_U0_ap_idle),
    .ap_continue(dataflow_in_loop_height_loop_U0_ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        loop_dataflow_input_count <= 32'd0;
    end else begin
        if ((~(loop_dataflow_input_count == bound_minus_1) & (ap_start == 1'b1) & (dataflow_in_loop_height_loop_U0_ap_ready == 1'b1))) begin
            loop_dataflow_input_count <= (loop_dataflow_input_count + 32'd1);
        end else if (((ap_start == 1'b1) & (loop_dataflow_input_count == bound_minus_1) & (dataflow_in_loop_height_loop_U0_ap_ready == 1'b1))) begin
            loop_dataflow_input_count <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        loop_dataflow_output_count <= 32'd0;
    end else begin
        if ((~(loop_dataflow_output_count == bound_minus_1) & (dataflow_in_loop_height_loop_U0_ap_continue == 1'b1) & (dataflow_in_loop_height_loop_U0_ap_done == 1'b1))) begin
            loop_dataflow_output_count <= (loop_dataflow_output_count + 32'd1);
        end else if (((loop_dataflow_output_count == bound_minus_1) & (dataflow_in_loop_height_loop_U0_ap_continue == 1'b1) & (dataflow_in_loop_height_loop_U0_ap_done == 1'b1))) begin
            loop_dataflow_output_count <= 32'd0;
        end
    end
end

always @ (*) begin
    if (((loop_dataflow_output_count == bound_minus_1) & (dataflow_in_loop_height_loop_U0_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (loop_dataflow_output_count == 32'd0) & (dataflow_in_loop_height_loop_U0_ap_idle == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (loop_dataflow_input_count == bound_minus_1) & (dataflow_in_loop_height_loop_U0_ap_ready == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

assign dataflow_in_loop_height_loop_U0_ap_continue = 1'b1;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b1;

assign ap_sync_done = dataflow_in_loop_height_loop_U0_ap_done;

assign ap_sync_ready = dataflow_in_loop_height_loop_U0_ap_ready;

assign bound_minus_1 = (height - 32'd1);

assign dataflow_in_loop_height_loop_U0_ap_start = ap_start;

assign dataflow_in_loop_height_loop_U0_start_full_n = 1'b1;

assign dataflow_in_loop_height_loop_U0_start_write = 1'b0;

endmodule //framebuffer_copy
