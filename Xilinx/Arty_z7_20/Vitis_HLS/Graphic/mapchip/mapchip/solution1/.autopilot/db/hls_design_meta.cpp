#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("s_axi_control_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_AWADDR", 8, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_ARADDR", 8, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
	Port_Property("m_axi_src_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_src_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_src_AWADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_src_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_src_AWLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_src_AWSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_src_AWBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_src_AWLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_src_AWCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_src_AWPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_src_AWQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_src_AWREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_src_AWUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_src_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_src_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_src_WDATA", 32, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_src_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_src_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_src_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_src_WUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_src_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_src_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_src_ARADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_src_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_src_ARLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_src_ARSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_src_ARBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_src_ARLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_src_ARCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_src_ARPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_src_ARQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_src_ARREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_src_ARUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_src_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_src_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_src_RDATA", 32, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_src_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_src_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_src_RUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_src_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_src_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_src_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_src_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_src_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_src_BUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_dst_AWVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_dst_AWREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_dst_AWADDR", 64, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_dst_AWID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_dst_AWLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_dst_AWSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_dst_AWBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_dst_AWLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_dst_AWCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_dst_AWPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_dst_AWQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_dst_AWREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_dst_AWUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_dst_WVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_dst_WREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_dst_WDATA", 32, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_dst_WSTRB", 4, hls_out, 1, "m_axi", "STRB", 1),
	Port_Property("m_axi_dst_WLAST", 1, hls_out, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_dst_WID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_dst_WUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_dst_ARVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_dst_ARREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_dst_ARADDR", 64, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_dst_ARID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_dst_ARLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_dst_ARSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_dst_ARBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_dst_ARLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_dst_ARCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_dst_ARPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_dst_ARQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_dst_ARREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_dst_ARUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_dst_RVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_dst_RREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_dst_RDATA", 32, hls_in, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_dst_RLAST", 1, hls_in, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_dst_RID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_dst_RUSER", 1, hls_in, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_dst_RRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_dst_BVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_dst_BREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_dst_BRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_dst_BID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_dst_BUSER", 1, hls_in, 1, "m_axi", "USER", 1),
};
const char* HLS_Design_Meta::dut_name = "mapchip";
