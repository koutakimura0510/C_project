#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("m_axi_copy_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_copy_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_copy_AWADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_copy_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_copy_AWLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_copy_AWSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_copy_AWBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_copy_AWLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_copy_AWCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_copy_AWPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_copy_AWQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_copy_AWREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_copy_AWUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_copy_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_copy_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_copy_WDATA", 32, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_copy_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_copy_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_copy_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_copy_WUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_copy_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_copy_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_copy_ARADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_copy_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_copy_ARLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_copy_ARSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_copy_ARBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_copy_ARLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_copy_ARCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_copy_ARPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_copy_ARQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_copy_ARREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_copy_ARUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_copy_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_copy_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_copy_RDATA", 32, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_copy_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_copy_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_copy_RUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_copy_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_copy_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_copy_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_copy_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_copy_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_copy_BUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_update_AWVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_update_AWREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_update_AWADDR", 64, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_update_AWID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_update_AWLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_update_AWSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_update_AWBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_update_AWLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_update_AWCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_update_AWPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_update_AWQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_update_AWREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_update_AWUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_update_WVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_update_WREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_update_WDATA", 32, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_update_WSTRB", 4, hls_out, 1, "m_axi", "STRB", 1),
	Port_Property("m_axi_update_WLAST", 1, hls_out, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_update_WID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_update_WUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_update_ARVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_update_ARREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_update_ARADDR", 64, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_update_ARID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_update_ARLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_update_ARSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_update_ARBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_update_ARLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_update_ARCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_update_ARPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_update_ARQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_update_ARREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_update_ARUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_update_RVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_update_RREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_update_RDATA", 32, hls_in, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_update_RLAST", 1, hls_in, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_update_RID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_update_RUSER", 1, hls_in, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_update_RRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_update_BVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_update_BREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_update_BRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_update_BID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_update_BUSER", 1, hls_in, 1, "m_axi", "USER", 1),
	Port_Property("s_axi_control_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_AWADDR", 7, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_ARADDR", 7, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "background_loop";
