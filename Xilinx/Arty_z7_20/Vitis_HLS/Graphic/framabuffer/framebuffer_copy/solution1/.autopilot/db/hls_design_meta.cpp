#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("s_axi_control_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_AWADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_ARADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
	Port_Property("m_axi_cp_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_cp_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_cp_AWADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_cp_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_cp_AWLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_cp_AWSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_cp_AWBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_cp_AWLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_cp_AWCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_cp_AWPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_cp_AWQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_cp_AWREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_cp_AWUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_cp_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_cp_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_cp_WDATA", 32, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_cp_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_cp_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_cp_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_cp_WUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_cp_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_cp_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_cp_ARADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_cp_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_cp_ARLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_cp_ARSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_cp_ARBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_cp_ARLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_cp_ARCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_cp_ARPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_cp_ARQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_cp_ARREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_cp_ARUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_cp_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_cp_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_cp_RDATA", 32, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_cp_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_cp_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_cp_RUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_cp_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_cp_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_cp_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_cp_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_cp_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_cp_BUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_up_AWVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_up_AWREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_up_AWADDR", 64, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_up_AWID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_up_AWLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_up_AWSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_up_AWBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_up_AWLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_up_AWCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_up_AWPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_up_AWQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_up_AWREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_up_AWUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_up_WVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_up_WREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_up_WDATA", 32, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_up_WSTRB", 4, hls_out, 1, "m_axi", "STRB", 1),
	Port_Property("m_axi_up_WLAST", 1, hls_out, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_up_WID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_up_WUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_up_ARVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_up_ARREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_up_ARADDR", 64, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_up_ARID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_up_ARLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_up_ARSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_up_ARBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_up_ARLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_up_ARCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_up_ARPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_up_ARQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_up_ARREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_up_ARUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_up_RVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_up_RREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_up_RDATA", 32, hls_in, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_up_RLAST", 1, hls_in, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_up_RID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_up_RUSER", 1, hls_in, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_up_RRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_up_BVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_up_BREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_up_BRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_up_BID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_up_BUSER", 1, hls_in, 1, "m_axi", "USER", 1),
};
const char* HLS_Design_Meta::dut_name = "framebuffer_copy";
