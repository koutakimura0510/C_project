<profile>

<section name = "Vitis HLS Report for 'copy_loop_proc'" level="0">
<item name = "Date">Sun May 16 17:14:35 2021
</item>
<item name = "Version">2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)</item>
<item name = "Project">framebuffer_copy</item>
<item name = "Solution">solution1 (Vivado IP Flow Target)</item>
<item name = "Product family">zynq</item>
<item name = "Target device">xc7z020-clg400-1</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">10.00 ns, 7.300 ns, 2.70 ns</column>
</table>
</item>
</section>
</item>
<item name = "Latency">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="8">, min, max, min, max, min, max, Type</keys>
<column name="">12, 651, 0.120 us, 6.510 us, 12, 651, none</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="9">Instance, Module, min, max, min, max, min, max, Type</keys>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
<column name="- copy_loop">2, 641, 3, 1, 1, 1 ~ 640, yes</column>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="DSP">-, -, -, -, -</column>
<column name="Expression">-, -, 0, 138, -</column>
<column name="FIFO">-, -, -, -, -</column>
<column name="Instance">-, 0, 165, 50, -</column>
<column name="Memory">-, -, -, -, -</column>
<column name="Multiplexer">-, -, -, 164, -</column>
<column name="Register">-, -, 367, -, -</column>
<specialColumn name="Available">280, 220, 106400, 53200, 0</specialColumn>
<specialColumn name="Utilization (%)">0, 0, ~0, ~0, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="7">Instance, Module, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="mul_32ns_32ns_62_2_1_U14">mul_32ns_32ns_62_2_1, 0, 0, 165, 50, 0</column>
</table>
</item>
<item name = "DSP"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="10">Memory, Module, BRAM_18K, FF, LUT, URAM, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="8">Name, BRAM_18K, FF, LUT, URAM, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="add_ln24_fu_185_p2">+, 0, 0, 39, 32, 1</column>
<column name="add_ln329_fu_160_p2">+, 0, 0, 71, 64, 64</column>
<column name="ap_block_pp0_stage0_11001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_state8_io">and, 0, 0, 2, 1, 1</column>
<column name="icmp_ln878_fu_191_p2">icmp, 0, 0, 18, 32, 32</column>
<column name="ap_block_state1">or, 0, 0, 2, 1, 1</column>
<column name="ap_enable_pp0">xor, 0, 0, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter1">xor, 0, 0, 2, 2, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="ap_NS_fsm">65, 12, 1, 12</column>
<column name="ap_done">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter1">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter2">9, 2, 1, 2</column>
<column name="display_xsize_blk_n">9, 2, 1, 2</column>
<column name="up_blk_n_AW">9, 2, 1, 2</column>
<column name="up_blk_n_B">9, 2, 1, 2</column>
<column name="up_blk_n_W">9, 2, 1, 2</column>
<column name="update_blk_n">9, 2, 1, 2</column>
<column name="width_blk_n">9, 2, 1, 2</column>
<column name="x_reg_130">9, 2, 32, 64</column>
<column name="y_blk_n">9, 2, 1, 2</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="ap_CS_fsm">11, 0, 11, 0</column>
<column name="ap_done_reg">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter0">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter1">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter2">1, 0, 1, 0</column>
<column name="display_xsize_read_reg_212">32, 0, 32, 0</column>
<column name="icmp_ln878_reg_248">1, 0, 1, 0</column>
<column name="icmp_ln878_reg_248_pp0_iter1_reg">1, 0, 1, 0</column>
<column name="mul_i_i58_i_reg_232">62, 0, 62, 0</column>
<column name="src_V1_load_reg_257">32, 0, 32, 0</column>
<column name="up_addr_reg_237">64, 0, 64, 0</column>
<column name="update_read_reg_217">64, 0, 64, 0</column>
<column name="width_read_reg_201">32, 0, 32, 0</column>
<column name="x_reg_130">32, 0, 32, 0</column>
<column name="y_read_reg_207">32, 0, 32, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="ap_clk">in, 1, ap_ctrl_hs, copy_loop_proc, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, copy_loop_proc, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, copy_loop_proc, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, copy_loop_proc, return value</column>
<column name="ap_continue">in, 1, ap_ctrl_hs, copy_loop_proc, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, copy_loop_proc, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, copy_loop_proc, return value</column>
<column name="width_dout">in, 32, ap_fifo, width, pointer</column>
<column name="width_empty_n">in, 1, ap_fifo, width, pointer</column>
<column name="width_read">out, 1, ap_fifo, width, pointer</column>
<column name="y_dout">in, 32, ap_fifo, y, pointer</column>
<column name="y_empty_n">in, 1, ap_fifo, y, pointer</column>
<column name="y_read">out, 1, ap_fifo, y, pointer</column>
<column name="display_xsize_dout">in, 32, ap_fifo, display_xsize, pointer</column>
<column name="display_xsize_empty_n">in, 1, ap_fifo, display_xsize, pointer</column>
<column name="display_xsize_read">out, 1, ap_fifo, display_xsize, pointer</column>
<column name="src_V1_address0">out, 10, ap_memory, src_V1, array</column>
<column name="src_V1_ce0">out, 1, ap_memory, src_V1, array</column>
<column name="src_V1_q0">in, 32, ap_memory, src_V1, array</column>
<column name="update_dout">in, 64, ap_fifo, update, pointer</column>
<column name="update_empty_n">in, 1, ap_fifo, update, pointer</column>
<column name="update_read">out, 1, ap_fifo, update, pointer</column>
<column name="m_axi_up_AWVALID">out, 1, m_axi, up, pointer</column>
<column name="m_axi_up_AWREADY">in, 1, m_axi, up, pointer</column>
<column name="m_axi_up_AWADDR">out, 64, m_axi, up, pointer</column>
<column name="m_axi_up_AWID">out, 1, m_axi, up, pointer</column>
<column name="m_axi_up_AWLEN">out, 32, m_axi, up, pointer</column>
<column name="m_axi_up_AWSIZE">out, 3, m_axi, up, pointer</column>
<column name="m_axi_up_AWBURST">out, 2, m_axi, up, pointer</column>
<column name="m_axi_up_AWLOCK">out, 2, m_axi, up, pointer</column>
<column name="m_axi_up_AWCACHE">out, 4, m_axi, up, pointer</column>
<column name="m_axi_up_AWPROT">out, 3, m_axi, up, pointer</column>
<column name="m_axi_up_AWQOS">out, 4, m_axi, up, pointer</column>
<column name="m_axi_up_AWREGION">out, 4, m_axi, up, pointer</column>
<column name="m_axi_up_AWUSER">out, 1, m_axi, up, pointer</column>
<column name="m_axi_up_WVALID">out, 1, m_axi, up, pointer</column>
<column name="m_axi_up_WREADY">in, 1, m_axi, up, pointer</column>
<column name="m_axi_up_WDATA">out, 32, m_axi, up, pointer</column>
<column name="m_axi_up_WSTRB">out, 4, m_axi, up, pointer</column>
<column name="m_axi_up_WLAST">out, 1, m_axi, up, pointer</column>
<column name="m_axi_up_WID">out, 1, m_axi, up, pointer</column>
<column name="m_axi_up_WUSER">out, 1, m_axi, up, pointer</column>
<column name="m_axi_up_ARVALID">out, 1, m_axi, up, pointer</column>
<column name="m_axi_up_ARREADY">in, 1, m_axi, up, pointer</column>
<column name="m_axi_up_ARADDR">out, 64, m_axi, up, pointer</column>
<column name="m_axi_up_ARID">out, 1, m_axi, up, pointer</column>
<column name="m_axi_up_ARLEN">out, 32, m_axi, up, pointer</column>
<column name="m_axi_up_ARSIZE">out, 3, m_axi, up, pointer</column>
<column name="m_axi_up_ARBURST">out, 2, m_axi, up, pointer</column>
<column name="m_axi_up_ARLOCK">out, 2, m_axi, up, pointer</column>
<column name="m_axi_up_ARCACHE">out, 4, m_axi, up, pointer</column>
<column name="m_axi_up_ARPROT">out, 3, m_axi, up, pointer</column>
<column name="m_axi_up_ARQOS">out, 4, m_axi, up, pointer</column>
<column name="m_axi_up_ARREGION">out, 4, m_axi, up, pointer</column>
<column name="m_axi_up_ARUSER">out, 1, m_axi, up, pointer</column>
<column name="m_axi_up_RVALID">in, 1, m_axi, up, pointer</column>
<column name="m_axi_up_RREADY">out, 1, m_axi, up, pointer</column>
<column name="m_axi_up_RDATA">in, 32, m_axi, up, pointer</column>
<column name="m_axi_up_RLAST">in, 1, m_axi, up, pointer</column>
<column name="m_axi_up_RID">in, 1, m_axi, up, pointer</column>
<column name="m_axi_up_RUSER">in, 1, m_axi, up, pointer</column>
<column name="m_axi_up_RRESP">in, 2, m_axi, up, pointer</column>
<column name="m_axi_up_BVALID">in, 1, m_axi, up, pointer</column>
<column name="m_axi_up_BREADY">out, 1, m_axi, up, pointer</column>
<column name="m_axi_up_BRESP">in, 2, m_axi, up, pointer</column>
<column name="m_axi_up_BID">in, 1, m_axi, up, pointer</column>
<column name="m_axi_up_BUSER">in, 1, m_axi, up, pointer</column>
</table>
</item>
</section>
</profile>
