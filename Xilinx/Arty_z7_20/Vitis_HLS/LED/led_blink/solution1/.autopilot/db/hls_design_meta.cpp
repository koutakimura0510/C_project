#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("m_axi_onoff_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_onoff_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_onoff_AWADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_onoff_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_onoff_AWLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_onoff_AWSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_onoff_AWBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_onoff_AWLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_onoff_AWCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_onoff_AWPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_onoff_AWQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_onoff_AWREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_onoff_AWUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_onoff_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_onoff_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_onoff_WDATA", 32, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_onoff_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_onoff_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_onoff_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_onoff_WUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_onoff_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_onoff_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_onoff_ARADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_onoff_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_onoff_ARLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_onoff_ARSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_onoff_ARBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_onoff_ARLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_onoff_ARCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_onoff_ARPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_onoff_ARQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_onoff_ARREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_onoff_ARUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_onoff_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_onoff_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_onoff_RDATA", 32, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_onoff_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_onoff_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_onoff_RUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_onoff_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_onoff_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_onoff_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_onoff_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_onoff_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_onoff_BUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("led", 4, hls_out, 2, "ap_none", "out_data", 1),
	Port_Property("s_axi_control_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_AWADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_ARADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_BRESP", 2, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "led_blink";
