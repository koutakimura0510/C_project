１．音符の長さ　－－デュレーション
２．音符の強さ　－－ベロシティ
３．表情		ーーエクスプレッション
４．テンポ		ーー曲の速さ
５．ピッチ		ーー音の高さ
６．ビブラート	ーー音の振動
７．ポルタメントーー音をスライドさせる

レコーディングエンジニアリング
１．音量バランス
２．パンポット	ーー楽器の位置
３．リバーブ	ーー残響
４．ディレイ




ーーMIDI規格ーー

チャンネル数	16
配列、または構造体で各チャンネル分のステータスを保存しておき
チャンネル分音を作成する、forで回す。




ーー処理の仕方ーー

一般的な処理方法を考える。
MIDI信号を受信するため機器を配線で繋ぎ、MIDIのキーボード、またはMIDIソフトウェアからUARTでバイトデータを受け取る。
受け取ったバイトデータを解析し、計算結果から出力データを確定する。

この時の解析というのは、

[コントロールチェンジ]
[プログラムチェンジ]
[テンポ]
[ノートオン・オフ]
[ベロシティ]
	・
	・
	・

などである。

本来であれば、音源作成用のステータスデータを構造体や配列に確保しておいて、
受信データによって計算処理を行わなければならない。
また、MIDIソフトからデータを受信中かどうかなどのチェックも必要である。


今回の処理方法を考える。
リアルタイムでMIDIデータを受信するのではなく、既に出来上がっているMIDIファイルを使用する。

[MIDIデータの受信処理]
[音源データの解析]

上記の処理はやらなくてよい。
予め、MIDIファイル解析、各チャンネルのステータスを配列で出力するプログラムを作成し、
出来上がった配列データを一定周期で更新し出力する。


ーーやることーー
ノートオンオフだけのMIDIファイルはできている。

次のステップとしては、
１．複数チャンネルに対応
２．[コントロールチェンジ] [プログラムチェンジ]などのイベントに対応
３．途中のテンポ変更に対応

この要素をクリアすればいけるはず。
