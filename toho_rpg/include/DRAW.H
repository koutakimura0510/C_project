/**---------------------------------------------
 * DRAW_H
 * 
 * created on:2020/09/16
 * Author    :kouta kimura
 * ---------------------------------------------*/

#ifndef DRAW_H_
#define DRAW_H_


/**-------------------------------------------------
 * 外部関数
 * -------------------------------------------------*/
void clear_screen(void);
void map_info_struct_write(uint8_t map);
void animation_move(uint8_t id);
void saveing(void);

/**-------------------------------------------------
 * 端末操作マクロ
 * -------------------------------------------------*/
#define SET_PLACE(x, y);   printf("\033[%d;%dH", y, x);  //座標の設定
#define SET_BACKCOLOR(n);  printf("\033[4%dm", (n));    //背景色の設定
#define SET_CHAR_COLOR(n); printf("\033[3%dm", (n));    //文字色の設定
#define SET_TYPE(n);       printf("\033[%dm", (n));     //文字の種類の設定
#define SET_CHAR_BOLD();   printf("\x1b[1m");           //太文字
#define CLEAR_SCREEN();    printf("\033[2J");           //画面消去
#define CURSOL_ON();       printf("\033[?25h");         //カーソル表示
#define CURSOL_OFF();      printf("\033[?25l");         //カーソル消去


/**-----------------------------------------------------------
 * 描画色デバイスコード
 * ----------------------------------------------------------*/
typedef enum
{
    BLACK,
    RED,
    GREEN,
    YELLOW,
    BLUE,
    MAGENTA,
    CYAN,
    WHITE,
    DEFAULT,
    COLOR_SIZE,
} COLOR;


/**-----------------------------------------------------------
 * 文字描画方法デバイスコード
 * ----------------------------------------------------------*/
typedef enum
{
    NORMAL,
    BLIGHT,
    DIM,
    UNDERBAR,
    BLINK,
    REVERSE,
    HIDE,
    STRIKE,
} ACTION;


/**-------------------------------------------------
 * 移動番号
 * -------------------------------------------------*/
typedef enum {
	RIGHT,
	UP,
	DOWN,
	LEFT,
	C_XPOS,
	C_YPOS,
	F_XPOS,
	F_YPOS,
	NON,
} MOVE_ID;


/**-------------------------------------------------
 * フィールド番号
 * -------------------------------------------------*/
typedef enum {
    GLASS,		//広場
	KOUMAKAN,	//外観
	ROUKA,		//廊下
	TOTAL_FIERL,
} FIELD_ID;


/**-------------------------------------------------
 * 登場キャラクター名
 * -------------------------------------------------*/
typedef enum {
	REIMU,
	MARISA,
	TOTAL_CARACTER,
} CAST_ID;


/**-------------------------------------------------
 * 下記のパラメータはdraw.cのみ使用
 * -------------------------------------------------*/
#ifdef DRAWPARA

/**-------------------------------------------------
 * 構造体サイズ
 * -------------------------------------------------*/
#define CAST_SIZE  ((sizeof (cast))/(sizeof (t_cast)))
#define FIELD_SIZE ((sizeof (map)) /(sizeof (t_map)))


/**-------------------------------------------------
 * 最大画面描画幅を指定
 * -------------------------------------------------*/
#define FIELD_HEIGHT 16
#define FIELD_WIDTH  32
#define FLAME_SHIFT	 5


/**-------------------------------------------------
 * フィールド描画位置指定
 * -------------------------------------------------*/
#define FIELD_DRAW_XPOS	5
#define FIELD_DRAW_YPOS	7


/**-------------------------------------------------
 * 描画キャラクターの幅
 * -------------------------------------------------*/
#define CAST_WIDTH_SIZE	2


/**--------------------------------------------------
 * フレームバッファ
 * マップ情報、現在のキャラクターの位置情報の保存を行う
 * フレームバッファを参照して、端末に描画を行う
 * FIELD_HEIGHT		:高さ
 * FIELD_WIDTH + 1	:横幅 + null文字('\0')
 * --------------------------------------------------*/
static char field_flamebuffer[FIELD_HEIGHT][FIELD_WIDTH+1];


/**-------------------------------------------------
 * フィールド情報
 * -------------------------------------------------*/
static const char *str[] ={
    " _",
    "|A|__________________________________________",
	"|                                   aaaaaaaaaa|",
    "|                                      aaaaaaa|-------------------------------------",
    "|                                           a                                      |",
    "| aaaaaaaaa                 aaaaaaa                                                |",
    "|  aaaaaaa                        aaa                                              |",
    "-    aa                            aa                                                |",
    "-   aあa                                                                            |",
    "-    aa                                         /------------------------------------|",
    "-                                   aaaaaaa   -",
    "-    aで                                        -",
    "-                          宝                 -",
    "-                   宝                        -",
    "-                                  a          -",
    "-                                             -",
    "-                                             -",
    "-                                             -",
    "-                                             -",
    "-                                             -",
    "-                                             -",
    "-                ------------------------------",
    "-                -",
    "------------------",
    "\0"
};

static const char *str2[] ={
    "sx",
    "aa",
    " a",
    "霊",
    "d  a",
    "\0"
};

static const char *str3[] ={
    "----------------------",
    "----------------------",
    "ss          玉座      ",
    " ",
    "a                       a",
    "\0"
};

static const char *nullfield[] = {
    "\0",
};


/**-------------------------------------------------
 * フィールド情報を管理する構造体
 * -------------------------------------------------
 * id		  :フィールド名
 * **field_adr:フィールド情報の先頭アドレスを取得
 * -------------------------------------------------*/
typedef struct {
    uint32_t id;		//フィールド名を指定
    char **field_adr;	//フィールドを指定
} t_map;

static const t_map map[] = {
    {GLASS,		(char **)str , },
    {KOUMAKAN,	(char **)str2, },
    {ROUKA,		(char **)str3, },
};


/*--------------------------------------------------
 * キャラクター情報、初期値
 *-------------------------------------------------*/
typedef struct {
	int32_t id;		//id name
	char *name;		//draw str
	uint8_t color;	//draw color
	uint8_t x;		//init x pos
	uint8_t y;		//init y pos
} t_cast;

static const t_cast cast[] = {
	{REIMU,		"霊", 	RED,	FIELD_DRAW_XPOS+5,	FIELD_DRAW_YPOS+3},
	{MARISA,	"魔",	YELLOW,	10,	10},
};


#endif

#endif
