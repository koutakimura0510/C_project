clock {
  name: "iSCLK"
  period: 10000
  target_pin {
    cell: "iSCLK"
    port: "INPAD"
  }
  origin: SDC
  uncertainty {
    value: 110
    analysis: MAX
  }
  uncertainty {
    value: 70
    analysis: MIN
  }
}
clock {
  name: "iCfgCLK"
  period: 10000
  target_pin {
    cell: "iCfgCLK"
    port: "INPAD"
  }
  origin: SDC
  uncertainty {
    value: 110
    analysis: MAX
  }
  uncertainty {
    value: 70
    analysis: MIN
  }
}
clock {
  name: "iBCLK"
  period: 40000
  target_pin {
    cell: "iBCLK"
    port: "INPAD"
  }
  origin: SDC
  uncertainty {
    value: 110
    analysis: MAX
  }
  uncertainty {
    value: 70
    analysis: MIN
  }
}
clock {
  name: "iFCLK"
  period: 5000
  target_pin {
    cell: "iFCLK"
    port: "INPAD"
  }
  origin: SDC
  uncertainty {
    value: 110
    analysis: MAX
  }
  uncertainty {
    value: 70
    analysis: MIN
  }
}
clock {
  name: "iVCLK"
  period: 13468
  target_pin {
    cell: "iVCLK"
    port: "INPAD"
  }
  origin: SDC
  uncertainty {
    value: 110
    analysis: MAX
  }
  uncertainty {
    value: 70
    analysis: MIN
  }
}
clock {
  name: "MipiDphyRx1_WORD_CLKOUT_HS"
  period: 6400
  target_pin {
    cell: "MipiDphyRx1_WORD_CLKOUT_HS"
    port: "INPAD"
  }
  origin: SDC
  uncertainty {
    value: 110
    analysis: MAX
  }
  uncertainty {
    value: 70
    analysis: MIN
  }
}
exception {
  type: FALSE_PATH
  from {
    clock: "MipiDphyRx1_WORD_CLKOUT_HS"
  }
  to {
    clock: "iSCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "MipiDphyRx1_WORD_CLKOUT_HS"
  }
  to {
    clock: "iBCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "MipiDphyRx1_WORD_CLKOUT_HS"
  }
  to {
    clock: "iVCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "MipiDphyRx1_WORD_CLKOUT_HS"
  }
  to {
    clock: "iFCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iSCLK"
  }
  to {
    clock: "MipiDphyRx1_WORD_CLKOUT_HS"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iSCLK"
  }
  to {
    clock: "iBCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iSCLK"
  }
  to {
    clock: "iVCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iSCLK"
  }
  to {
    clock: "iFCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iBCLK"
  }
  to {
    clock: "MipiDphyRx1_WORD_CLKOUT_HS"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iBCLK"
  }
  to {
    clock: "iSCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iBCLK"
  }
  to {
    clock: "iVCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iBCLK"
  }
  to {
    clock: "iFCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iVCLK"
  }
  to {
    clock: "MipiDphyRx1_WORD_CLKOUT_HS"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iVCLK"
  }
  to {
    clock: "iSCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iVCLK"
  }
  to {
    clock: "iBCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iVCLK"
  }
  to {
    clock: "iFCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iFCLK"
  }
  to {
    clock: "MipiDphyRx1_WORD_CLKOUT_HS"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iFCLK"
  }
  to {
    clock: "iSCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iFCLK"
  }
  to {
    clock: "iBCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iFCLK"
  }
  to {
    clock: "iVCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iCfgCLK"
  }
  to {
    clock: "iSCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iCfgCLK"
  }
  to {
    clock: "iBCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iCfgCLK"
  }
  to {
    clock: "iVCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iCfgCLK"
  }
  to {
    clock: "iFCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iSCLK"
  }
  to {
    clock: "iCfgCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iSCLK"
  }
  to {
    clock: "iBCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iSCLK"
  }
  to {
    clock: "iVCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iSCLK"
  }
  to {
    clock: "iFCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iBCLK"
  }
  to {
    clock: "iCfgCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iBCLK"
  }
  to {
    clock: "iSCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iBCLK"
  }
  to {
    clock: "iVCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iBCLK"
  }
  to {
    clock: "iFCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iVCLK"
  }
  to {
    clock: "iCfgCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iVCLK"
  }
  to {
    clock: "iSCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iVCLK"
  }
  to {
    clock: "iBCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iVCLK"
  }
  to {
    clock: "iFCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iFCLK"
  }
  to {
    clock: "iCfgCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iFCLK"
  }
  to {
    clock: "iSCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iFCLK"
  }
  to {
    clock: "iBCLK"
  }
  analysis: BOTH
}
exception {
  type: FALSE_PATH
  from {
    clock: "iFCLK"
  }
  to {
    clock: "iVCLK"
  }
  analysis: BOTH
}
